ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stream_buffer.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "./FreeRTOS/stream_buffer.c"
  18              		.section	.text.prvBytesInBuffer,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	prvBytesInBuffer:
  25              	.LVL0:
  26              	.LFB53:
   1:./FreeRTOS/stream_buffer.c **** /*
   2:./FreeRTOS/stream_buffer.c ****  * FreeRTOS Kernel V10.5.1
   3:./FreeRTOS/stream_buffer.c ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:./FreeRTOS/stream_buffer.c ****  *
   5:./FreeRTOS/stream_buffer.c ****  * SPDX-License-Identifier: MIT
   6:./FreeRTOS/stream_buffer.c ****  *
   7:./FreeRTOS/stream_buffer.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:./FreeRTOS/stream_buffer.c ****  * this software and associated documentation files (the "Software"), to deal in
   9:./FreeRTOS/stream_buffer.c ****  * the Software without restriction, including without limitation the rights to
  10:./FreeRTOS/stream_buffer.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:./FreeRTOS/stream_buffer.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:./FreeRTOS/stream_buffer.c ****  * subject to the following conditions:
  13:./FreeRTOS/stream_buffer.c ****  *
  14:./FreeRTOS/stream_buffer.c ****  * The above copyright notice and this permission notice shall be included in all
  15:./FreeRTOS/stream_buffer.c ****  * copies or substantial portions of the Software.
  16:./FreeRTOS/stream_buffer.c ****  *
  17:./FreeRTOS/stream_buffer.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:./FreeRTOS/stream_buffer.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:./FreeRTOS/stream_buffer.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:./FreeRTOS/stream_buffer.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:./FreeRTOS/stream_buffer.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:./FreeRTOS/stream_buffer.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:./FreeRTOS/stream_buffer.c ****  *
  24:./FreeRTOS/stream_buffer.c ****  * https://www.FreeRTOS.org
  25:./FreeRTOS/stream_buffer.c ****  * https://github.com/FreeRTOS
  26:./FreeRTOS/stream_buffer.c ****  *
  27:./FreeRTOS/stream_buffer.c ****  */
  28:./FreeRTOS/stream_buffer.c **** 
  29:./FreeRTOS/stream_buffer.c **** /* Standard includes. */
  30:./FreeRTOS/stream_buffer.c **** #include <stdint.h>
  31:./FreeRTOS/stream_buffer.c **** #include <string.h>
  32:./FreeRTOS/stream_buffer.c **** 
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 2


  33:./FreeRTOS/stream_buffer.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  34:./FreeRTOS/stream_buffer.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  35:./FreeRTOS/stream_buffer.c ****  * task.h is included from an application file. */
  36:./FreeRTOS/stream_buffer.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  37:./FreeRTOS/stream_buffer.c **** 
  38:./FreeRTOS/stream_buffer.c **** /* FreeRTOS includes. */
  39:./FreeRTOS/stream_buffer.c **** #include "FreeRTOS.h"
  40:./FreeRTOS/stream_buffer.c **** #include "task.h"
  41:./FreeRTOS/stream_buffer.c **** #include "stream_buffer.h"
  42:./FreeRTOS/stream_buffer.c **** 
  43:./FreeRTOS/stream_buffer.c **** #if ( configUSE_TASK_NOTIFICATIONS != 1 )
  44:./FreeRTOS/stream_buffer.c ****     #error configUSE_TASK_NOTIFICATIONS must be set to 1 to build stream_buffer.c
  45:./FreeRTOS/stream_buffer.c **** #endif
  46:./FreeRTOS/stream_buffer.c **** 
  47:./FreeRTOS/stream_buffer.c **** #if ( INCLUDE_xTaskGetCurrentTaskHandle != 1 )
  48:./FreeRTOS/stream_buffer.c ****     #error INCLUDE_xTaskGetCurrentTaskHandle must be set to 1 to build stream_buffer.c
  49:./FreeRTOS/stream_buffer.c **** #endif
  50:./FreeRTOS/stream_buffer.c **** 
  51:./FreeRTOS/stream_buffer.c **** /* Lint e961, e9021 and e750 are suppressed as a MISRA exception justified
  52:./FreeRTOS/stream_buffer.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  53:./FreeRTOS/stream_buffer.c ****  * for the header files above, but not in this file, in order to generate the
  54:./FreeRTOS/stream_buffer.c ****  * correct privileged Vs unprivileged linkage and placement. */
  55:./FreeRTOS/stream_buffer.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  56:./FreeRTOS/stream_buffer.c **** 
  57:./FreeRTOS/stream_buffer.c **** /* If the user has not provided application specific Rx notification macros,
  58:./FreeRTOS/stream_buffer.c ****  * or #defined the notification macros away, then provide default implementations
  59:./FreeRTOS/stream_buffer.c ****  * that uses task notifications. */
  60:./FreeRTOS/stream_buffer.c **** /*lint -save -e9026 Function like macros allowed and needed here so they can be overridden. */
  61:./FreeRTOS/stream_buffer.c **** #ifndef sbRECEIVE_COMPLETED
  62:./FreeRTOS/stream_buffer.c ****     #define sbRECEIVE_COMPLETED( pxStreamBuffer )                         \
  63:./FreeRTOS/stream_buffer.c ****     vTaskSuspendAll();                                                    \
  64:./FreeRTOS/stream_buffer.c ****     {                                                                     \
  65:./FreeRTOS/stream_buffer.c ****         if( ( pxStreamBuffer )->xTaskWaitingToSend != NULL )              \
  66:./FreeRTOS/stream_buffer.c ****         {                                                                 \
  67:./FreeRTOS/stream_buffer.c ****             ( void ) xTaskNotify( ( pxStreamBuffer )->xTaskWaitingToSend, \
  68:./FreeRTOS/stream_buffer.c ****                                   ( uint32_t ) 0,                         \
  69:./FreeRTOS/stream_buffer.c ****                                   eNoAction );                            \
  70:./FreeRTOS/stream_buffer.c ****             ( pxStreamBuffer )->xTaskWaitingToSend = NULL;                \
  71:./FreeRTOS/stream_buffer.c ****         }                                                                 \
  72:./FreeRTOS/stream_buffer.c ****     }                                                                     \
  73:./FreeRTOS/stream_buffer.c ****     ( void ) xTaskResumeAll();
  74:./FreeRTOS/stream_buffer.c **** #endif /* sbRECEIVE_COMPLETED */
  75:./FreeRTOS/stream_buffer.c **** 
  76:./FreeRTOS/stream_buffer.c **** /* If user has provided a per-instance receive complete callback, then
  77:./FreeRTOS/stream_buffer.c ****  * invoke the callback else use the receive complete macro which is provided by default for all ins
  78:./FreeRTOS/stream_buffer.c ****  */
  79:./FreeRTOS/stream_buffer.c **** #if ( configUSE_SB_COMPLETED_CALLBACK == 1 )
  80:./FreeRTOS/stream_buffer.c ****     #define prvRECEIVE_COMPLETED( pxStreamBuffer )                                               \
  81:./FreeRTOS/stream_buffer.c ****     {                                                                                            \
  82:./FreeRTOS/stream_buffer.c ****         if( ( pxStreamBuffer )->pxReceiveCompletedCallback != NULL )                             \
  83:./FreeRTOS/stream_buffer.c ****         {                                                                                        \
  84:./FreeRTOS/stream_buffer.c ****             ( pxStreamBuffer )->pxReceiveCompletedCallback( ( pxStreamBuffer ), pdFALSE, NULL ); \
  85:./FreeRTOS/stream_buffer.c ****         }                                                                                        \
  86:./FreeRTOS/stream_buffer.c ****         else                                                                                     \
  87:./FreeRTOS/stream_buffer.c ****         {                                                                                        \
  88:./FreeRTOS/stream_buffer.c ****             sbRECEIVE_COMPLETED( ( pxStreamBuffer ) );                                           \
  89:./FreeRTOS/stream_buffer.c ****         }                                                                                        \
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 3


  90:./FreeRTOS/stream_buffer.c ****     }
  91:./FreeRTOS/stream_buffer.c **** #else /* if ( configUSE_SB_COMPLETED_CALLBACK == 1 ) */
  92:./FreeRTOS/stream_buffer.c ****     #define prvRECEIVE_COMPLETED( pxStreamBuffer )    sbRECEIVE_COMPLETED( ( pxStreamBuffer ) )
  93:./FreeRTOS/stream_buffer.c **** #endif /* if ( configUSE_SB_COMPLETED_CALLBACK == 1 ) */
  94:./FreeRTOS/stream_buffer.c **** 
  95:./FreeRTOS/stream_buffer.c **** #ifndef sbRECEIVE_COMPLETED_FROM_ISR
  96:./FreeRTOS/stream_buffer.c ****     #define sbRECEIVE_COMPLETED_FROM_ISR( pxStreamBuffer,                            \
  97:./FreeRTOS/stream_buffer.c ****                                           pxHigherPriorityTaskWoken )                \
  98:./FreeRTOS/stream_buffer.c ****     {                                                                                \
  99:./FreeRTOS/stream_buffer.c ****         UBaseType_t uxSavedInterruptStatus;                                          \
 100:./FreeRTOS/stream_buffer.c ****                                                                                      \
 101:./FreeRTOS/stream_buffer.c ****         uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();  \
 102:./FreeRTOS/stream_buffer.c ****         {                                                                            \
 103:./FreeRTOS/stream_buffer.c ****             if( ( pxStreamBuffer )->xTaskWaitingToSend != NULL )                     \
 104:./FreeRTOS/stream_buffer.c ****             {                                                                        \
 105:./FreeRTOS/stream_buffer.c ****                 ( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToSend, \
 106:./FreeRTOS/stream_buffer.c ****                                              ( uint32_t ) 0,                         \
 107:./FreeRTOS/stream_buffer.c ****                                              eNoAction,                              \
 108:./FreeRTOS/stream_buffer.c ****                                              ( pxHigherPriorityTaskWoken ) );        \
 109:./FreeRTOS/stream_buffer.c ****                 ( pxStreamBuffer )->xTaskWaitingToSend = NULL;                       \
 110:./FreeRTOS/stream_buffer.c ****             }                                                                        \
 111:./FreeRTOS/stream_buffer.c ****         }                                                                            \
 112:./FreeRTOS/stream_buffer.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );                 \
 113:./FreeRTOS/stream_buffer.c ****     }
 114:./FreeRTOS/stream_buffer.c **** #endif /* sbRECEIVE_COMPLETED_FROM_ISR */
 115:./FreeRTOS/stream_buffer.c **** 
 116:./FreeRTOS/stream_buffer.c **** #if ( configUSE_SB_COMPLETED_CALLBACK == 1 )
 117:./FreeRTOS/stream_buffer.c ****     #define prvRECEIVE_COMPLETED_FROM_ISR( pxStreamBuffer,                                         
 118:./FreeRTOS/stream_buffer.c ****                                            pxHigherPriorityTaskWoken )                             
 119:./FreeRTOS/stream_buffer.c ****     {                                                                                              
 120:./FreeRTOS/stream_buffer.c ****         if( ( pxStreamBuffer )->pxReceiveCompletedCallback != NULL )                               
 121:./FreeRTOS/stream_buffer.c ****         {                                                                                          
 122:./FreeRTOS/stream_buffer.c ****             ( pxStreamBuffer )->pxReceiveCompletedCallback( ( pxStreamBuffer ), pdTRUE, ( pxHigherP
 123:./FreeRTOS/stream_buffer.c ****         }                                                                                          
 124:./FreeRTOS/stream_buffer.c ****         else                                                                                       
 125:./FreeRTOS/stream_buffer.c ****         {                                                                                          
 126:./FreeRTOS/stream_buffer.c ****             sbRECEIVE_COMPLETED_FROM_ISR( ( pxStreamBuffer ), ( pxHigherPriorityTaskWoken ) );     
 127:./FreeRTOS/stream_buffer.c ****         }                                                                                          
 128:./FreeRTOS/stream_buffer.c ****     }
 129:./FreeRTOS/stream_buffer.c **** #else /* if ( configUSE_SB_COMPLETED_CALLBACK == 1 ) */
 130:./FreeRTOS/stream_buffer.c ****     #define prvRECEIVE_COMPLETED_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken ) \
 131:./FreeRTOS/stream_buffer.c ****     sbRECEIVE_COMPLETED_FROM_ISR( ( pxStreamBuffer ), ( pxHigherPriorityTaskWoken ) )
 132:./FreeRTOS/stream_buffer.c **** #endif /* if ( configUSE_SB_COMPLETED_CALLBACK == 1 ) */
 133:./FreeRTOS/stream_buffer.c **** 
 134:./FreeRTOS/stream_buffer.c **** /* If the user has not provided an application specific Tx notification macro,
 135:./FreeRTOS/stream_buffer.c ****  * or #defined the notification macro away, then provide a default
 136:./FreeRTOS/stream_buffer.c ****  * implementation that uses task notifications.
 137:./FreeRTOS/stream_buffer.c ****  */
 138:./FreeRTOS/stream_buffer.c **** #ifndef sbSEND_COMPLETED
 139:./FreeRTOS/stream_buffer.c ****     #define sbSEND_COMPLETED( pxStreamBuffer )                               \
 140:./FreeRTOS/stream_buffer.c ****     vTaskSuspendAll();                                                       \
 141:./FreeRTOS/stream_buffer.c ****     {                                                                        \
 142:./FreeRTOS/stream_buffer.c ****         if( ( pxStreamBuffer )->xTaskWaitingToReceive != NULL )              \
 143:./FreeRTOS/stream_buffer.c ****         {                                                                    \
 144:./FreeRTOS/stream_buffer.c ****             ( void ) xTaskNotify( ( pxStreamBuffer )->xTaskWaitingToReceive, \
 145:./FreeRTOS/stream_buffer.c ****                                   ( uint32_t ) 0,                            \
 146:./FreeRTOS/stream_buffer.c ****                                   eNoAction );                               \
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 4


 147:./FreeRTOS/stream_buffer.c ****             ( pxStreamBuffer )->xTaskWaitingToReceive = NULL;                \
 148:./FreeRTOS/stream_buffer.c ****         }                                                                    \
 149:./FreeRTOS/stream_buffer.c ****     }                                                                        \
 150:./FreeRTOS/stream_buffer.c ****     ( void ) xTaskResumeAll();
 151:./FreeRTOS/stream_buffer.c **** #endif /* sbSEND_COMPLETED */
 152:./FreeRTOS/stream_buffer.c **** 
 153:./FreeRTOS/stream_buffer.c **** /* If user has provided a per-instance send completed callback, then
 154:./FreeRTOS/stream_buffer.c ****  * invoke the callback else use the send complete macro which is provided by default for all instan
 155:./FreeRTOS/stream_buffer.c ****  */
 156:./FreeRTOS/stream_buffer.c **** #if ( configUSE_SB_COMPLETED_CALLBACK == 1 )
 157:./FreeRTOS/stream_buffer.c ****     #define prvSEND_COMPLETED( pxStreamBuffer )                                           \
 158:./FreeRTOS/stream_buffer.c ****     {                                                                                     \
 159:./FreeRTOS/stream_buffer.c ****         if( ( pxStreamBuffer )->pxSendCompletedCallback != NULL )                         \
 160:./FreeRTOS/stream_buffer.c ****         {                                                                                 \
 161:./FreeRTOS/stream_buffer.c ****             pxStreamBuffer->pxSendCompletedCallback( ( pxStreamBuffer ), pdFALSE, NULL ); \
 162:./FreeRTOS/stream_buffer.c ****         }                                                                                 \
 163:./FreeRTOS/stream_buffer.c ****         else                                                                              \
 164:./FreeRTOS/stream_buffer.c ****         {                                                                                 \
 165:./FreeRTOS/stream_buffer.c ****             sbSEND_COMPLETED( ( pxStreamBuffer ) );                                       \
 166:./FreeRTOS/stream_buffer.c ****         }                                                                                 \
 167:./FreeRTOS/stream_buffer.c ****     }
 168:./FreeRTOS/stream_buffer.c **** #else /* if ( configUSE_SB_COMPLETED_CALLBACK == 1 ) */
 169:./FreeRTOS/stream_buffer.c ****     #define prvSEND_COMPLETED( pxStreamBuffer )    sbSEND_COMPLETED( ( pxStreamBuffer ) )
 170:./FreeRTOS/stream_buffer.c **** #endif /* if ( configUSE_SB_COMPLETED_CALLBACK == 1 ) */
 171:./FreeRTOS/stream_buffer.c **** 
 172:./FreeRTOS/stream_buffer.c **** 
 173:./FreeRTOS/stream_buffer.c **** #ifndef sbSEND_COMPLETE_FROM_ISR
 174:./FreeRTOS/stream_buffer.c ****     #define sbSEND_COMPLETE_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken )       \
 175:./FreeRTOS/stream_buffer.c ****     {                                                                                   \
 176:./FreeRTOS/stream_buffer.c ****         UBaseType_t uxSavedInterruptStatus;                                             \
 177:./FreeRTOS/stream_buffer.c ****                                                                                         \
 178:./FreeRTOS/stream_buffer.c ****         uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();     \
 179:./FreeRTOS/stream_buffer.c ****         {                                                                               \
 180:./FreeRTOS/stream_buffer.c ****             if( ( pxStreamBuffer )->xTaskWaitingToReceive != NULL )                     \
 181:./FreeRTOS/stream_buffer.c ****             {                                                                           \
 182:./FreeRTOS/stream_buffer.c ****                 ( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToReceive, \
 183:./FreeRTOS/stream_buffer.c ****                                              ( uint32_t ) 0,                            \
 184:./FreeRTOS/stream_buffer.c ****                                              eNoAction,                                 \
 185:./FreeRTOS/stream_buffer.c ****                                              ( pxHigherPriorityTaskWoken ) );           \
 186:./FreeRTOS/stream_buffer.c ****                 ( pxStreamBuffer )->xTaskWaitingToReceive = NULL;                       \
 187:./FreeRTOS/stream_buffer.c ****             }                                                                           \
 188:./FreeRTOS/stream_buffer.c ****         }                                                                               \
 189:./FreeRTOS/stream_buffer.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );                    \
 190:./FreeRTOS/stream_buffer.c ****     }
 191:./FreeRTOS/stream_buffer.c **** #endif /* sbSEND_COMPLETE_FROM_ISR */
 192:./FreeRTOS/stream_buffer.c **** 
 193:./FreeRTOS/stream_buffer.c **** 
 194:./FreeRTOS/stream_buffer.c **** #if ( configUSE_SB_COMPLETED_CALLBACK == 1 )
 195:./FreeRTOS/stream_buffer.c ****     #define prvSEND_COMPLETE_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken )                 
 196:./FreeRTOS/stream_buffer.c ****     {                                                                                              
 197:./FreeRTOS/stream_buffer.c ****         if( ( pxStreamBuffer )->pxSendCompletedCallback != NULL )                                  
 198:./FreeRTOS/stream_buffer.c ****         {                                                                                          
 199:./FreeRTOS/stream_buffer.c ****             ( pxStreamBuffer )->pxSendCompletedCallback( ( pxStreamBuffer ), pdTRUE, ( pxHigherPrio
 200:./FreeRTOS/stream_buffer.c ****         }                                                                                          
 201:./FreeRTOS/stream_buffer.c ****         else                                                                                       
 202:./FreeRTOS/stream_buffer.c ****         {                                                                                          
 203:./FreeRTOS/stream_buffer.c ****             sbSEND_COMPLETE_FROM_ISR( ( pxStreamBuffer ), ( pxHigherPriorityTaskWoken ) );         
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 5


 204:./FreeRTOS/stream_buffer.c ****         }                                                                                          
 205:./FreeRTOS/stream_buffer.c ****     }
 206:./FreeRTOS/stream_buffer.c **** #else /* if ( configUSE_SB_COMPLETED_CALLBACK == 1 ) */
 207:./FreeRTOS/stream_buffer.c ****     #define prvSEND_COMPLETE_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken ) \
 208:./FreeRTOS/stream_buffer.c ****     sbSEND_COMPLETE_FROM_ISR( ( pxStreamBuffer ), ( pxHigherPriorityTaskWoken ) )
 209:./FreeRTOS/stream_buffer.c **** #endif /* if ( configUSE_SB_COMPLETED_CALLBACK == 1 ) */
 210:./FreeRTOS/stream_buffer.c **** 
 211:./FreeRTOS/stream_buffer.c **** /*lint -restore (9026) */
 212:./FreeRTOS/stream_buffer.c **** 
 213:./FreeRTOS/stream_buffer.c **** /* The number of bytes used to hold the length of a message in the buffer. */
 214:./FreeRTOS/stream_buffer.c **** #define sbBYTES_TO_STORE_MESSAGE_LENGTH    ( sizeof( configMESSAGE_BUFFER_LENGTH_TYPE ) )
 215:./FreeRTOS/stream_buffer.c **** 
 216:./FreeRTOS/stream_buffer.c **** /* Bits stored in the ucFlags field of the stream buffer. */
 217:./FreeRTOS/stream_buffer.c **** #define sbFLAGS_IS_MESSAGE_BUFFER          ( ( uint8_t ) 1 ) /* Set if the stream buffer was create
 218:./FreeRTOS/stream_buffer.c **** #define sbFLAGS_IS_STATICALLY_ALLOCATED    ( ( uint8_t ) 2 ) /* Set if the stream buffer was create
 219:./FreeRTOS/stream_buffer.c **** 
 220:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 221:./FreeRTOS/stream_buffer.c **** 
 222:./FreeRTOS/stream_buffer.c **** /* Structure that hold state information on the buffer. */
 223:./FreeRTOS/stream_buffer.c **** typedef struct StreamBufferDef_t                 /*lint !e9058 Style convention uses tag. */
 224:./FreeRTOS/stream_buffer.c **** {
 225:./FreeRTOS/stream_buffer.c ****     volatile size_t xTail;                       /* Index to the next item to read within the buffe
 226:./FreeRTOS/stream_buffer.c ****     volatile size_t xHead;                       /* Index to the next item to write within the buff
 227:./FreeRTOS/stream_buffer.c ****     size_t xLength;                              /* The length of the buffer pointed to by pucBuffe
 228:./FreeRTOS/stream_buffer.c ****     size_t xTriggerLevelBytes;                   /* The number of bytes that must be in the stream 
 229:./FreeRTOS/stream_buffer.c ****     volatile TaskHandle_t xTaskWaitingToReceive; /* Holds the handle of a task waiting for data, or
 230:./FreeRTOS/stream_buffer.c ****     volatile TaskHandle_t xTaskWaitingToSend;    /* Holds the handle of a task waiting to send data
 231:./FreeRTOS/stream_buffer.c ****     uint8_t * pucBuffer;                         /* Points to the buffer itself - that is - the RAM
 232:./FreeRTOS/stream_buffer.c ****     uint8_t ucFlags;
 233:./FreeRTOS/stream_buffer.c **** 
 234:./FreeRTOS/stream_buffer.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
 235:./FreeRTOS/stream_buffer.c ****         UBaseType_t uxStreamBufferNumber; /* Used for tracing purposes. */
 236:./FreeRTOS/stream_buffer.c ****     #endif
 237:./FreeRTOS/stream_buffer.c **** 
 238:./FreeRTOS/stream_buffer.c ****     #if ( configUSE_SB_COMPLETED_CALLBACK == 1 )
 239:./FreeRTOS/stream_buffer.c ****         StreamBufferCallbackFunction_t pxSendCompletedCallback;    /* Optional callback called on s
 240:./FreeRTOS/stream_buffer.c ****         StreamBufferCallbackFunction_t pxReceiveCompletedCallback; /* Optional callback called on r
 241:./FreeRTOS/stream_buffer.c ****     #endif
 242:./FreeRTOS/stream_buffer.c **** } StreamBuffer_t;
 243:./FreeRTOS/stream_buffer.c **** 
 244:./FreeRTOS/stream_buffer.c **** /*
 245:./FreeRTOS/stream_buffer.c ****  * The number of bytes available to be read from the buffer.
 246:./FreeRTOS/stream_buffer.c ****  */
 247:./FreeRTOS/stream_buffer.c **** static size_t prvBytesInBuffer( const StreamBuffer_t * const pxStreamBuffer ) PRIVILEGED_FUNCTION;
 248:./FreeRTOS/stream_buffer.c **** 
 249:./FreeRTOS/stream_buffer.c **** /*
 250:./FreeRTOS/stream_buffer.c ****  * Add xCount bytes from pucData into the pxStreamBuffer's data storage area.
 251:./FreeRTOS/stream_buffer.c ****  * This function does not update the buffer's xHead pointer, so multiple writes
 252:./FreeRTOS/stream_buffer.c ****  * may be chained together "atomically". This is useful for Message Buffers where
 253:./FreeRTOS/stream_buffer.c ****  * the length and data bytes are written in two separate chunks, and we don't want
 254:./FreeRTOS/stream_buffer.c ****  * the reader to see the buffer as having grown until after all data is copied over.
 255:./FreeRTOS/stream_buffer.c ****  * This function takes a custom xHead value to indicate where to write to (necessary
 256:./FreeRTOS/stream_buffer.c ****  * for chaining) and returns the the resulting xHead position.
 257:./FreeRTOS/stream_buffer.c ****  * To mark the write as complete, manually set the buffer's xHead field with the
 258:./FreeRTOS/stream_buffer.c ****  * returned xHead from this function.
 259:./FreeRTOS/stream_buffer.c ****  */
 260:./FreeRTOS/stream_buffer.c **** static size_t prvWriteBytesToBuffer( StreamBuffer_t * const pxStreamBuffer,
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 6


 261:./FreeRTOS/stream_buffer.c ****                                      const uint8_t * pucData,
 262:./FreeRTOS/stream_buffer.c ****                                      size_t xCount,
 263:./FreeRTOS/stream_buffer.c ****                                      size_t xHead ) PRIVILEGED_FUNCTION;
 264:./FreeRTOS/stream_buffer.c **** 
 265:./FreeRTOS/stream_buffer.c **** /*
 266:./FreeRTOS/stream_buffer.c ****  * If the stream buffer is being used as a message buffer, then reads an entire
 267:./FreeRTOS/stream_buffer.c ****  * message out of the buffer.  If the stream buffer is being used as a stream
 268:./FreeRTOS/stream_buffer.c ****  * buffer then read as many bytes as possible from the buffer.
 269:./FreeRTOS/stream_buffer.c ****  * prvReadBytesFromBuffer() is called to actually extract the bytes from the
 270:./FreeRTOS/stream_buffer.c ****  * buffer's data storage area.
 271:./FreeRTOS/stream_buffer.c ****  */
 272:./FreeRTOS/stream_buffer.c **** static size_t prvReadMessageFromBuffer( StreamBuffer_t * pxStreamBuffer,
 273:./FreeRTOS/stream_buffer.c ****                                         void * pvRxData,
 274:./FreeRTOS/stream_buffer.c ****                                         size_t xBufferLengthBytes,
 275:./FreeRTOS/stream_buffer.c ****                                         size_t xBytesAvailable ) PRIVILEGED_FUNCTION;
 276:./FreeRTOS/stream_buffer.c **** 
 277:./FreeRTOS/stream_buffer.c **** /*
 278:./FreeRTOS/stream_buffer.c ****  * If the stream buffer is being used as a message buffer, then writes an entire
 279:./FreeRTOS/stream_buffer.c ****  * message to the buffer.  If the stream buffer is being used as a stream
 280:./FreeRTOS/stream_buffer.c ****  * buffer then write as many bytes as possible to the buffer.
 281:./FreeRTOS/stream_buffer.c ****  * prvWriteBytestoBuffer() is called to actually send the bytes to the buffer's
 282:./FreeRTOS/stream_buffer.c ****  * data storage area.
 283:./FreeRTOS/stream_buffer.c ****  */
 284:./FreeRTOS/stream_buffer.c **** static size_t prvWriteMessageToBuffer( StreamBuffer_t * const pxStreamBuffer,
 285:./FreeRTOS/stream_buffer.c ****                                        const void * pvTxData,
 286:./FreeRTOS/stream_buffer.c ****                                        size_t xDataLengthBytes,
 287:./FreeRTOS/stream_buffer.c ****                                        size_t xSpace,
 288:./FreeRTOS/stream_buffer.c ****                                        size_t xRequiredSpace ) PRIVILEGED_FUNCTION;
 289:./FreeRTOS/stream_buffer.c **** 
 290:./FreeRTOS/stream_buffer.c **** /*
 291:./FreeRTOS/stream_buffer.c ****  * Copies xCount bytes from the pxStreamBuffer's data storage area to pucData.
 292:./FreeRTOS/stream_buffer.c ****  * This function does not update the buffer's xTail pointer, so multiple reads
 293:./FreeRTOS/stream_buffer.c ****  * may be chained together "atomically". This is useful for Message Buffers where
 294:./FreeRTOS/stream_buffer.c ****  * the length and data bytes are read in two separate chunks, and we don't want
 295:./FreeRTOS/stream_buffer.c ****  * the writer to see the buffer as having more free space until after all data is
 296:./FreeRTOS/stream_buffer.c ****  * copied over, especially if we have to abort the read due to insufficient receiving space.
 297:./FreeRTOS/stream_buffer.c ****  * This function takes a custom xTail value to indicate where to read from (necessary
 298:./FreeRTOS/stream_buffer.c ****  * for chaining) and returns the the resulting xTail position.
 299:./FreeRTOS/stream_buffer.c ****  * To mark the read as complete, manually set the buffer's xTail field with the
 300:./FreeRTOS/stream_buffer.c ****  * returned xTail from this function.
 301:./FreeRTOS/stream_buffer.c ****  */
 302:./FreeRTOS/stream_buffer.c **** static size_t prvReadBytesFromBuffer( StreamBuffer_t * pxStreamBuffer,
 303:./FreeRTOS/stream_buffer.c ****                                       uint8_t * pucData,
 304:./FreeRTOS/stream_buffer.c ****                                       size_t xCount,
 305:./FreeRTOS/stream_buffer.c ****                                       size_t xTail ) PRIVILEGED_FUNCTION;
 306:./FreeRTOS/stream_buffer.c **** 
 307:./FreeRTOS/stream_buffer.c **** /*
 308:./FreeRTOS/stream_buffer.c ****  * Called by both pxStreamBufferCreate() and pxStreamBufferCreateStatic() to
 309:./FreeRTOS/stream_buffer.c ****  * initialise the members of the newly created stream buffer structure.
 310:./FreeRTOS/stream_buffer.c ****  */
 311:./FreeRTOS/stream_buffer.c **** static void prvInitialiseNewStreamBuffer( StreamBuffer_t * const pxStreamBuffer,
 312:./FreeRTOS/stream_buffer.c ****                                           uint8_t * const pucBuffer,
 313:./FreeRTOS/stream_buffer.c ****                                           size_t xBufferSizeBytes,
 314:./FreeRTOS/stream_buffer.c ****                                           size_t xTriggerLevelBytes,
 315:./FreeRTOS/stream_buffer.c ****                                           uint8_t ucFlags,
 316:./FreeRTOS/stream_buffer.c ****                                           StreamBufferCallbackFunction_t pxSendCompletedCallback,
 317:./FreeRTOS/stream_buffer.c ****                                           StreamBufferCallbackFunction_t pxReceiveCompletedCallback
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 7


 318:./FreeRTOS/stream_buffer.c **** 
 319:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 320:./FreeRTOS/stream_buffer.c **** #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 321:./FreeRTOS/stream_buffer.c ****     StreamBufferHandle_t xStreamBufferGenericCreate( size_t xBufferSizeBytes,
 322:./FreeRTOS/stream_buffer.c ****                                                      size_t xTriggerLevelBytes,
 323:./FreeRTOS/stream_buffer.c ****                                                      BaseType_t xIsMessageBuffer,
 324:./FreeRTOS/stream_buffer.c ****                                                      StreamBufferCallbackFunction_t pxSendCompleted
 325:./FreeRTOS/stream_buffer.c ****                                                      StreamBufferCallbackFunction_t pxReceiveComple
 326:./FreeRTOS/stream_buffer.c ****     {
 327:./FreeRTOS/stream_buffer.c ****         uint8_t * pucAllocatedMemory;
 328:./FreeRTOS/stream_buffer.c ****         uint8_t ucFlags;
 329:./FreeRTOS/stream_buffer.c **** 
 330:./FreeRTOS/stream_buffer.c ****         /* In case the stream buffer is going to be used as a message buffer
 331:./FreeRTOS/stream_buffer.c ****          * (that is, it will hold discrete messages with a little meta data that
 332:./FreeRTOS/stream_buffer.c ****          * says how big the next message is) check the buffer will be large enough
 333:./FreeRTOS/stream_buffer.c ****          * to hold at least one message. */
 334:./FreeRTOS/stream_buffer.c ****         if( xIsMessageBuffer == pdTRUE )
 335:./FreeRTOS/stream_buffer.c ****         {
 336:./FreeRTOS/stream_buffer.c ****             /* Is a message buffer but not statically allocated. */
 337:./FreeRTOS/stream_buffer.c ****             ucFlags = sbFLAGS_IS_MESSAGE_BUFFER;
 338:./FreeRTOS/stream_buffer.c ****             configASSERT( xBufferSizeBytes > sbBYTES_TO_STORE_MESSAGE_LENGTH );
 339:./FreeRTOS/stream_buffer.c ****         }
 340:./FreeRTOS/stream_buffer.c ****         else
 341:./FreeRTOS/stream_buffer.c ****         {
 342:./FreeRTOS/stream_buffer.c ****             /* Not a message buffer and not statically allocated. */
 343:./FreeRTOS/stream_buffer.c ****             ucFlags = 0;
 344:./FreeRTOS/stream_buffer.c ****             configASSERT( xBufferSizeBytes > 0 );
 345:./FreeRTOS/stream_buffer.c ****         }
 346:./FreeRTOS/stream_buffer.c **** 
 347:./FreeRTOS/stream_buffer.c ****         configASSERT( xTriggerLevelBytes <= xBufferSizeBytes );
 348:./FreeRTOS/stream_buffer.c **** 
 349:./FreeRTOS/stream_buffer.c ****         /* A trigger level of 0 would cause a waiting task to unblock even when
 350:./FreeRTOS/stream_buffer.c ****          * the buffer was empty. */
 351:./FreeRTOS/stream_buffer.c ****         if( xTriggerLevelBytes == ( size_t ) 0 )
 352:./FreeRTOS/stream_buffer.c ****         {
 353:./FreeRTOS/stream_buffer.c ****             xTriggerLevelBytes = ( size_t ) 1;
 354:./FreeRTOS/stream_buffer.c ****         }
 355:./FreeRTOS/stream_buffer.c **** 
 356:./FreeRTOS/stream_buffer.c ****         /* A stream buffer requires a StreamBuffer_t structure and a buffer.
 357:./FreeRTOS/stream_buffer.c ****          * Both are allocated in a single call to pvPortMalloc().  The
 358:./FreeRTOS/stream_buffer.c ****          * StreamBuffer_t structure is placed at the start of the allocated memory
 359:./FreeRTOS/stream_buffer.c ****          * and the buffer follows immediately after.  The requested size is
 360:./FreeRTOS/stream_buffer.c ****          * incremented so the free space is returned as the user would expect -
 361:./FreeRTOS/stream_buffer.c ****          * this is a quirk of the implementation that means otherwise the free
 362:./FreeRTOS/stream_buffer.c ****          * space would be reported as one byte smaller than would be logically
 363:./FreeRTOS/stream_buffer.c ****          * expected. */
 364:./FreeRTOS/stream_buffer.c ****         if( xBufferSizeBytes < ( xBufferSizeBytes + 1 + sizeof( StreamBuffer_t ) ) )
 365:./FreeRTOS/stream_buffer.c ****         {
 366:./FreeRTOS/stream_buffer.c ****             xBufferSizeBytes++;
 367:./FreeRTOS/stream_buffer.c ****             pucAllocatedMemory = ( uint8_t * ) pvPortMalloc( xBufferSizeBytes + sizeof( StreamBuffe
 368:./FreeRTOS/stream_buffer.c ****         }
 369:./FreeRTOS/stream_buffer.c ****         else
 370:./FreeRTOS/stream_buffer.c ****         {
 371:./FreeRTOS/stream_buffer.c ****             pucAllocatedMemory = NULL;
 372:./FreeRTOS/stream_buffer.c ****         }
 373:./FreeRTOS/stream_buffer.c **** 
 374:./FreeRTOS/stream_buffer.c ****         if( pucAllocatedMemory != NULL )
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 8


 375:./FreeRTOS/stream_buffer.c ****         {
 376:./FreeRTOS/stream_buffer.c ****             prvInitialiseNewStreamBuffer( ( StreamBuffer_t * ) pucAllocatedMemory,       /* Structu
 377:./FreeRTOS/stream_buffer.c ****                                           pucAllocatedMemory + sizeof( StreamBuffer_t ), /* Storage
 378:./FreeRTOS/stream_buffer.c ****                                           xBufferSizeBytes,
 379:./FreeRTOS/stream_buffer.c ****                                           xTriggerLevelBytes,
 380:./FreeRTOS/stream_buffer.c ****                                           ucFlags,
 381:./FreeRTOS/stream_buffer.c ****                                           pxSendCompletedCallback,
 382:./FreeRTOS/stream_buffer.c ****                                           pxReceiveCompletedCallback );
 383:./FreeRTOS/stream_buffer.c **** 
 384:./FreeRTOS/stream_buffer.c ****             traceSTREAM_BUFFER_CREATE( ( ( StreamBuffer_t * ) pucAllocatedMemory ), xIsMessageBuffe
 385:./FreeRTOS/stream_buffer.c ****         }
 386:./FreeRTOS/stream_buffer.c ****         else
 387:./FreeRTOS/stream_buffer.c ****         {
 388:./FreeRTOS/stream_buffer.c ****             traceSTREAM_BUFFER_CREATE_FAILED( xIsMessageBuffer );
 389:./FreeRTOS/stream_buffer.c ****         }
 390:./FreeRTOS/stream_buffer.c **** 
 391:./FreeRTOS/stream_buffer.c ****         return ( StreamBufferHandle_t ) pucAllocatedMemory; /*lint !e9087 !e826 Safe cast as alloca
 392:./FreeRTOS/stream_buffer.c ****     }
 393:./FreeRTOS/stream_buffer.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 394:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 395:./FreeRTOS/stream_buffer.c **** 
 396:./FreeRTOS/stream_buffer.c **** #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 397:./FreeRTOS/stream_buffer.c **** 
 398:./FreeRTOS/stream_buffer.c ****     StreamBufferHandle_t xStreamBufferGenericCreateStatic( size_t xBufferSizeBytes,
 399:./FreeRTOS/stream_buffer.c ****                                                            size_t xTriggerLevelBytes,
 400:./FreeRTOS/stream_buffer.c ****                                                            BaseType_t xIsMessageBuffer,
 401:./FreeRTOS/stream_buffer.c ****                                                            uint8_t * const pucStreamBufferStorageAr
 402:./FreeRTOS/stream_buffer.c ****                                                            StaticStreamBuffer_t * const pxStaticStr
 403:./FreeRTOS/stream_buffer.c ****                                                            StreamBufferCallbackFunction_t pxSendCom
 404:./FreeRTOS/stream_buffer.c ****                                                            StreamBufferCallbackFunction_t pxReceive
 405:./FreeRTOS/stream_buffer.c ****     {
 406:./FreeRTOS/stream_buffer.c ****         StreamBuffer_t * const pxStreamBuffer = ( StreamBuffer_t * ) pxStaticStreamBuffer; /*lint !
 407:./FreeRTOS/stream_buffer.c ****         StreamBufferHandle_t xReturn;
 408:./FreeRTOS/stream_buffer.c ****         uint8_t ucFlags;
 409:./FreeRTOS/stream_buffer.c **** 
 410:./FreeRTOS/stream_buffer.c ****         configASSERT( pucStreamBufferStorageArea );
 411:./FreeRTOS/stream_buffer.c ****         configASSERT( pxStaticStreamBuffer );
 412:./FreeRTOS/stream_buffer.c ****         configASSERT( xTriggerLevelBytes <= xBufferSizeBytes );
 413:./FreeRTOS/stream_buffer.c **** 
 414:./FreeRTOS/stream_buffer.c ****         /* A trigger level of 0 would cause a waiting task to unblock even when
 415:./FreeRTOS/stream_buffer.c ****          * the buffer was empty. */
 416:./FreeRTOS/stream_buffer.c ****         if( xTriggerLevelBytes == ( size_t ) 0 )
 417:./FreeRTOS/stream_buffer.c ****         {
 418:./FreeRTOS/stream_buffer.c ****             xTriggerLevelBytes = ( size_t ) 1;
 419:./FreeRTOS/stream_buffer.c ****         }
 420:./FreeRTOS/stream_buffer.c **** 
 421:./FreeRTOS/stream_buffer.c ****         if( xIsMessageBuffer != pdFALSE )
 422:./FreeRTOS/stream_buffer.c ****         {
 423:./FreeRTOS/stream_buffer.c ****             /* Statically allocated message buffer. */
 424:./FreeRTOS/stream_buffer.c ****             ucFlags = sbFLAGS_IS_MESSAGE_BUFFER | sbFLAGS_IS_STATICALLY_ALLOCATED;
 425:./FreeRTOS/stream_buffer.c ****         }
 426:./FreeRTOS/stream_buffer.c ****         else
 427:./FreeRTOS/stream_buffer.c ****         {
 428:./FreeRTOS/stream_buffer.c ****             /* Statically allocated stream buffer. */
 429:./FreeRTOS/stream_buffer.c ****             ucFlags = sbFLAGS_IS_STATICALLY_ALLOCATED;
 430:./FreeRTOS/stream_buffer.c ****         }
 431:./FreeRTOS/stream_buffer.c **** 
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 9


 432:./FreeRTOS/stream_buffer.c ****         /* In case the stream buffer is going to be used as a message buffer
 433:./FreeRTOS/stream_buffer.c ****          * (that is, it will hold discrete messages with a little meta data that
 434:./FreeRTOS/stream_buffer.c ****          * says how big the next message is) check the buffer will be large enough
 435:./FreeRTOS/stream_buffer.c ****          * to hold at least one message. */
 436:./FreeRTOS/stream_buffer.c ****         configASSERT( xBufferSizeBytes > sbBYTES_TO_STORE_MESSAGE_LENGTH );
 437:./FreeRTOS/stream_buffer.c **** 
 438:./FreeRTOS/stream_buffer.c ****         #if ( configASSERT_DEFINED == 1 )
 439:./FreeRTOS/stream_buffer.c ****         {
 440:./FreeRTOS/stream_buffer.c ****             /* Sanity check that the size of the structure used to declare a
 441:./FreeRTOS/stream_buffer.c ****              * variable of type StaticStreamBuffer_t equals the size of the real
 442:./FreeRTOS/stream_buffer.c ****              * message buffer structure. */
 443:./FreeRTOS/stream_buffer.c ****             volatile size_t xSize = sizeof( StaticStreamBuffer_t );
 444:./FreeRTOS/stream_buffer.c ****             configASSERT( xSize == sizeof( StreamBuffer_t ) );
 445:./FreeRTOS/stream_buffer.c ****         } /*lint !e529 xSize is referenced is configASSERT() is defined. */
 446:./FreeRTOS/stream_buffer.c ****         #endif /* configASSERT_DEFINED */
 447:./FreeRTOS/stream_buffer.c **** 
 448:./FreeRTOS/stream_buffer.c ****         if( ( pucStreamBufferStorageArea != NULL ) && ( pxStaticStreamBuffer != NULL ) )
 449:./FreeRTOS/stream_buffer.c ****         {
 450:./FreeRTOS/stream_buffer.c ****             prvInitialiseNewStreamBuffer( pxStreamBuffer,
 451:./FreeRTOS/stream_buffer.c ****                                           pucStreamBufferStorageArea,
 452:./FreeRTOS/stream_buffer.c ****                                           xBufferSizeBytes,
 453:./FreeRTOS/stream_buffer.c ****                                           xTriggerLevelBytes,
 454:./FreeRTOS/stream_buffer.c ****                                           ucFlags,
 455:./FreeRTOS/stream_buffer.c ****                                           pxSendCompletedCallback,
 456:./FreeRTOS/stream_buffer.c ****                                           pxReceiveCompletedCallback );
 457:./FreeRTOS/stream_buffer.c **** 
 458:./FreeRTOS/stream_buffer.c ****             /* Remember this was statically allocated in case it is ever deleted
 459:./FreeRTOS/stream_buffer.c ****              * again. */
 460:./FreeRTOS/stream_buffer.c ****             pxStreamBuffer->ucFlags |= sbFLAGS_IS_STATICALLY_ALLOCATED;
 461:./FreeRTOS/stream_buffer.c **** 
 462:./FreeRTOS/stream_buffer.c ****             traceSTREAM_BUFFER_CREATE( pxStreamBuffer, xIsMessageBuffer );
 463:./FreeRTOS/stream_buffer.c **** 
 464:./FreeRTOS/stream_buffer.c ****             xReturn = ( StreamBufferHandle_t ) pxStaticStreamBuffer; /*lint !e9087 Data hiding requ
 465:./FreeRTOS/stream_buffer.c ****         }
 466:./FreeRTOS/stream_buffer.c ****         else
 467:./FreeRTOS/stream_buffer.c ****         {
 468:./FreeRTOS/stream_buffer.c ****             xReturn = NULL;
 469:./FreeRTOS/stream_buffer.c ****             traceSTREAM_BUFFER_CREATE_STATIC_FAILED( xReturn, xIsMessageBuffer );
 470:./FreeRTOS/stream_buffer.c ****         }
 471:./FreeRTOS/stream_buffer.c **** 
 472:./FreeRTOS/stream_buffer.c ****         return xReturn;
 473:./FreeRTOS/stream_buffer.c ****     }
 474:./FreeRTOS/stream_buffer.c **** #endif /* ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 475:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 476:./FreeRTOS/stream_buffer.c **** 
 477:./FreeRTOS/stream_buffer.c **** void vStreamBufferDelete( StreamBufferHandle_t xStreamBuffer )
 478:./FreeRTOS/stream_buffer.c **** {
 479:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * pxStreamBuffer = xStreamBuffer;
 480:./FreeRTOS/stream_buffer.c **** 
 481:./FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 482:./FreeRTOS/stream_buffer.c **** 
 483:./FreeRTOS/stream_buffer.c ****     traceSTREAM_BUFFER_DELETE( xStreamBuffer );
 484:./FreeRTOS/stream_buffer.c **** 
 485:./FreeRTOS/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) pdFALSE )
 486:./FreeRTOS/stream_buffer.c ****     {
 487:./FreeRTOS/stream_buffer.c ****         #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 488:./FreeRTOS/stream_buffer.c ****         {
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 10


 489:./FreeRTOS/stream_buffer.c ****             /* Both the structure and the buffer were allocated using a single call
 490:./FreeRTOS/stream_buffer.c ****             * to pvPortMalloc(), hence only one call to vPortFree() is required. */
 491:./FreeRTOS/stream_buffer.c ****             vPortFree( ( void * ) pxStreamBuffer ); /*lint !e9087 Standard free() semantics require
 492:./FreeRTOS/stream_buffer.c ****         }
 493:./FreeRTOS/stream_buffer.c ****         #else
 494:./FreeRTOS/stream_buffer.c ****         {
 495:./FreeRTOS/stream_buffer.c ****             /* Should not be possible to get here, ucFlags must be corrupt.
 496:./FreeRTOS/stream_buffer.c ****              * Force an assert. */
 497:./FreeRTOS/stream_buffer.c ****             configASSERT( xStreamBuffer == ( StreamBufferHandle_t ) ~0 );
 498:./FreeRTOS/stream_buffer.c ****         }
 499:./FreeRTOS/stream_buffer.c ****         #endif
 500:./FreeRTOS/stream_buffer.c ****     }
 501:./FreeRTOS/stream_buffer.c ****     else
 502:./FreeRTOS/stream_buffer.c ****     {
 503:./FreeRTOS/stream_buffer.c ****         /* The structure and buffer were not allocated dynamically and cannot be
 504:./FreeRTOS/stream_buffer.c ****          * freed - just scrub the structure so future use will assert. */
 505:./FreeRTOS/stream_buffer.c ****         ( void ) memset( pxStreamBuffer, 0x00, sizeof( StreamBuffer_t ) );
 506:./FreeRTOS/stream_buffer.c ****     }
 507:./FreeRTOS/stream_buffer.c **** }
 508:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 509:./FreeRTOS/stream_buffer.c **** 
 510:./FreeRTOS/stream_buffer.c **** BaseType_t xStreamBufferReset( StreamBufferHandle_t xStreamBuffer )
 511:./FreeRTOS/stream_buffer.c **** {
 512:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 513:./FreeRTOS/stream_buffer.c ****     BaseType_t xReturn = pdFAIL;
 514:./FreeRTOS/stream_buffer.c ****     StreamBufferCallbackFunction_t pxSendCallback = NULL, pxReceiveCallback = NULL;
 515:./FreeRTOS/stream_buffer.c **** 
 516:./FreeRTOS/stream_buffer.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
 517:./FreeRTOS/stream_buffer.c ****         UBaseType_t uxStreamBufferNumber;
 518:./FreeRTOS/stream_buffer.c ****     #endif
 519:./FreeRTOS/stream_buffer.c **** 
 520:./FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 521:./FreeRTOS/stream_buffer.c **** 
 522:./FreeRTOS/stream_buffer.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
 523:./FreeRTOS/stream_buffer.c ****     {
 524:./FreeRTOS/stream_buffer.c ****         /* Store the stream buffer number so it can be restored after the
 525:./FreeRTOS/stream_buffer.c ****          * reset. */
 526:./FreeRTOS/stream_buffer.c ****         uxStreamBufferNumber = pxStreamBuffer->uxStreamBufferNumber;
 527:./FreeRTOS/stream_buffer.c ****     }
 528:./FreeRTOS/stream_buffer.c ****     #endif
 529:./FreeRTOS/stream_buffer.c **** 
 530:./FreeRTOS/stream_buffer.c ****     /* Can only reset a message buffer if there are no tasks blocked on it. */
 531:./FreeRTOS/stream_buffer.c ****     taskENTER_CRITICAL();
 532:./FreeRTOS/stream_buffer.c ****     {
 533:./FreeRTOS/stream_buffer.c ****         if( ( pxStreamBuffer->xTaskWaitingToReceive == NULL ) && ( pxStreamBuffer->xTaskWaitingToSe
 534:./FreeRTOS/stream_buffer.c ****         {
 535:./FreeRTOS/stream_buffer.c ****             #if ( configUSE_SB_COMPLETED_CALLBACK == 1 )
 536:./FreeRTOS/stream_buffer.c ****             {
 537:./FreeRTOS/stream_buffer.c ****                 pxSendCallback = pxStreamBuffer->pxSendCompletedCallback;
 538:./FreeRTOS/stream_buffer.c ****                 pxReceiveCallback = pxStreamBuffer->pxReceiveCompletedCallback;
 539:./FreeRTOS/stream_buffer.c ****             }
 540:./FreeRTOS/stream_buffer.c ****             #endif
 541:./FreeRTOS/stream_buffer.c **** 
 542:./FreeRTOS/stream_buffer.c ****             prvInitialiseNewStreamBuffer( pxStreamBuffer,
 543:./FreeRTOS/stream_buffer.c ****                                           pxStreamBuffer->pucBuffer,
 544:./FreeRTOS/stream_buffer.c ****                                           pxStreamBuffer->xLength,
 545:./FreeRTOS/stream_buffer.c ****                                           pxStreamBuffer->xTriggerLevelBytes,
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 11


 546:./FreeRTOS/stream_buffer.c ****                                           pxStreamBuffer->ucFlags,
 547:./FreeRTOS/stream_buffer.c ****                                           pxSendCallback,
 548:./FreeRTOS/stream_buffer.c ****                                           pxReceiveCallback );
 549:./FreeRTOS/stream_buffer.c **** 
 550:./FreeRTOS/stream_buffer.c ****             #if ( configUSE_TRACE_FACILITY == 1 )
 551:./FreeRTOS/stream_buffer.c ****             {
 552:./FreeRTOS/stream_buffer.c ****                 pxStreamBuffer->uxStreamBufferNumber = uxStreamBufferNumber;
 553:./FreeRTOS/stream_buffer.c ****             }
 554:./FreeRTOS/stream_buffer.c ****             #endif
 555:./FreeRTOS/stream_buffer.c **** 
 556:./FreeRTOS/stream_buffer.c ****             traceSTREAM_BUFFER_RESET( xStreamBuffer );
 557:./FreeRTOS/stream_buffer.c **** 
 558:./FreeRTOS/stream_buffer.c ****             xReturn = pdPASS;
 559:./FreeRTOS/stream_buffer.c ****         }
 560:./FreeRTOS/stream_buffer.c ****     }
 561:./FreeRTOS/stream_buffer.c ****     taskEXIT_CRITICAL();
 562:./FreeRTOS/stream_buffer.c **** 
 563:./FreeRTOS/stream_buffer.c ****     return xReturn;
 564:./FreeRTOS/stream_buffer.c **** }
 565:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 566:./FreeRTOS/stream_buffer.c **** 
 567:./FreeRTOS/stream_buffer.c **** BaseType_t xStreamBufferSetTriggerLevel( StreamBufferHandle_t xStreamBuffer,
 568:./FreeRTOS/stream_buffer.c ****                                          size_t xTriggerLevel )
 569:./FreeRTOS/stream_buffer.c **** {
 570:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 571:./FreeRTOS/stream_buffer.c ****     BaseType_t xReturn;
 572:./FreeRTOS/stream_buffer.c **** 
 573:./FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 574:./FreeRTOS/stream_buffer.c **** 
 575:./FreeRTOS/stream_buffer.c ****     /* It is not valid for the trigger level to be 0. */
 576:./FreeRTOS/stream_buffer.c ****     if( xTriggerLevel == ( size_t ) 0 )
 577:./FreeRTOS/stream_buffer.c ****     {
 578:./FreeRTOS/stream_buffer.c ****         xTriggerLevel = ( size_t ) 1;
 579:./FreeRTOS/stream_buffer.c ****     }
 580:./FreeRTOS/stream_buffer.c **** 
 581:./FreeRTOS/stream_buffer.c ****     /* The trigger level is the number of bytes that must be in the stream
 582:./FreeRTOS/stream_buffer.c ****      * buffer before a task that is waiting for data is unblocked. */
 583:./FreeRTOS/stream_buffer.c ****     if( xTriggerLevel < pxStreamBuffer->xLength )
 584:./FreeRTOS/stream_buffer.c ****     {
 585:./FreeRTOS/stream_buffer.c ****         pxStreamBuffer->xTriggerLevelBytes = xTriggerLevel;
 586:./FreeRTOS/stream_buffer.c ****         xReturn = pdPASS;
 587:./FreeRTOS/stream_buffer.c ****     }
 588:./FreeRTOS/stream_buffer.c ****     else
 589:./FreeRTOS/stream_buffer.c ****     {
 590:./FreeRTOS/stream_buffer.c ****         xReturn = pdFALSE;
 591:./FreeRTOS/stream_buffer.c ****     }
 592:./FreeRTOS/stream_buffer.c **** 
 593:./FreeRTOS/stream_buffer.c ****     return xReturn;
 594:./FreeRTOS/stream_buffer.c **** }
 595:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 596:./FreeRTOS/stream_buffer.c **** 
 597:./FreeRTOS/stream_buffer.c **** size_t xStreamBufferSpacesAvailable( StreamBufferHandle_t xStreamBuffer )
 598:./FreeRTOS/stream_buffer.c **** {
 599:./FreeRTOS/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 600:./FreeRTOS/stream_buffer.c ****     size_t xSpace;
 601:./FreeRTOS/stream_buffer.c ****     size_t xOriginalTail;
 602:./FreeRTOS/stream_buffer.c **** 
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 12


 603:./FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 604:./FreeRTOS/stream_buffer.c **** 
 605:./FreeRTOS/stream_buffer.c ****     /* The code below reads xTail and then xHead.  This is safe if the stream
 606:./FreeRTOS/stream_buffer.c ****      * buffer is updated once between the two reads - but not if the stream buffer
 607:./FreeRTOS/stream_buffer.c ****      * is updated more than once between the two reads - hence the loop. */
 608:./FreeRTOS/stream_buffer.c ****     do
 609:./FreeRTOS/stream_buffer.c ****     {
 610:./FreeRTOS/stream_buffer.c ****         xOriginalTail = pxStreamBuffer->xTail;
 611:./FreeRTOS/stream_buffer.c ****         xSpace = pxStreamBuffer->xLength + pxStreamBuffer->xTail;
 612:./FreeRTOS/stream_buffer.c ****         xSpace -= pxStreamBuffer->xHead;
 613:./FreeRTOS/stream_buffer.c ****     } while( xOriginalTail != pxStreamBuffer->xTail );
 614:./FreeRTOS/stream_buffer.c **** 
 615:./FreeRTOS/stream_buffer.c ****     xSpace -= ( size_t ) 1;
 616:./FreeRTOS/stream_buffer.c **** 
 617:./FreeRTOS/stream_buffer.c ****     if( xSpace >= pxStreamBuffer->xLength )
 618:./FreeRTOS/stream_buffer.c ****     {
 619:./FreeRTOS/stream_buffer.c ****         xSpace -= pxStreamBuffer->xLength;
 620:./FreeRTOS/stream_buffer.c ****     }
 621:./FreeRTOS/stream_buffer.c ****     else
 622:./FreeRTOS/stream_buffer.c ****     {
 623:./FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 624:./FreeRTOS/stream_buffer.c ****     }
 625:./FreeRTOS/stream_buffer.c **** 
 626:./FreeRTOS/stream_buffer.c ****     return xSpace;
 627:./FreeRTOS/stream_buffer.c **** }
 628:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 629:./FreeRTOS/stream_buffer.c **** 
 630:./FreeRTOS/stream_buffer.c **** size_t xStreamBufferBytesAvailable( StreamBufferHandle_t xStreamBuffer )
 631:./FreeRTOS/stream_buffer.c **** {
 632:./FreeRTOS/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 633:./FreeRTOS/stream_buffer.c ****     size_t xReturn;
 634:./FreeRTOS/stream_buffer.c **** 
 635:./FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 636:./FreeRTOS/stream_buffer.c **** 
 637:./FreeRTOS/stream_buffer.c ****     xReturn = prvBytesInBuffer( pxStreamBuffer );
 638:./FreeRTOS/stream_buffer.c ****     return xReturn;
 639:./FreeRTOS/stream_buffer.c **** }
 640:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 641:./FreeRTOS/stream_buffer.c **** 
 642:./FreeRTOS/stream_buffer.c **** size_t xStreamBufferSend( StreamBufferHandle_t xStreamBuffer,
 643:./FreeRTOS/stream_buffer.c ****                           const void * pvTxData,
 644:./FreeRTOS/stream_buffer.c ****                           size_t xDataLengthBytes,
 645:./FreeRTOS/stream_buffer.c ****                           TickType_t xTicksToWait )
 646:./FreeRTOS/stream_buffer.c **** {
 647:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 648:./FreeRTOS/stream_buffer.c ****     size_t xReturn, xSpace = 0;
 649:./FreeRTOS/stream_buffer.c ****     size_t xRequiredSpace = xDataLengthBytes;
 650:./FreeRTOS/stream_buffer.c ****     TimeOut_t xTimeOut;
 651:./FreeRTOS/stream_buffer.c ****     size_t xMaxReportedSpace = 0;
 652:./FreeRTOS/stream_buffer.c **** 
 653:./FreeRTOS/stream_buffer.c ****     configASSERT( pvTxData );
 654:./FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 655:./FreeRTOS/stream_buffer.c **** 
 656:./FreeRTOS/stream_buffer.c ****     /* The maximum amount of space a stream buffer will ever report is its length
 657:./FreeRTOS/stream_buffer.c ****      * minus 1. */
 658:./FreeRTOS/stream_buffer.c ****     xMaxReportedSpace = pxStreamBuffer->xLength - ( size_t ) 1;
 659:./FreeRTOS/stream_buffer.c **** 
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 13


 660:./FreeRTOS/stream_buffer.c ****     /* This send function is used to write to both message buffers and stream
 661:./FreeRTOS/stream_buffer.c ****      * buffers.  If this is a message buffer then the space needed must be
 662:./FreeRTOS/stream_buffer.c ****      * increased by the amount of bytes needed to store the length of the
 663:./FreeRTOS/stream_buffer.c ****      * message. */
 664:./FreeRTOS/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 665:./FreeRTOS/stream_buffer.c ****     {
 666:./FreeRTOS/stream_buffer.c ****         xRequiredSpace += sbBYTES_TO_STORE_MESSAGE_LENGTH;
 667:./FreeRTOS/stream_buffer.c **** 
 668:./FreeRTOS/stream_buffer.c ****         /* Overflow? */
 669:./FreeRTOS/stream_buffer.c ****         configASSERT( xRequiredSpace > xDataLengthBytes );
 670:./FreeRTOS/stream_buffer.c **** 
 671:./FreeRTOS/stream_buffer.c ****         /* If this is a message buffer then it must be possible to write the
 672:./FreeRTOS/stream_buffer.c ****          * whole message. */
 673:./FreeRTOS/stream_buffer.c ****         if( xRequiredSpace > xMaxReportedSpace )
 674:./FreeRTOS/stream_buffer.c ****         {
 675:./FreeRTOS/stream_buffer.c ****             /* The message would not fit even if the entire buffer was empty,
 676:./FreeRTOS/stream_buffer.c ****              * so don't wait for space. */
 677:./FreeRTOS/stream_buffer.c ****             xTicksToWait = ( TickType_t ) 0;
 678:./FreeRTOS/stream_buffer.c ****         }
 679:./FreeRTOS/stream_buffer.c ****         else
 680:./FreeRTOS/stream_buffer.c ****         {
 681:./FreeRTOS/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
 682:./FreeRTOS/stream_buffer.c ****         }
 683:./FreeRTOS/stream_buffer.c ****     }
 684:./FreeRTOS/stream_buffer.c ****     else
 685:./FreeRTOS/stream_buffer.c ****     {
 686:./FreeRTOS/stream_buffer.c ****         /* If this is a stream buffer then it is acceptable to write only part
 687:./FreeRTOS/stream_buffer.c ****          * of the message to the buffer.  Cap the length to the total length of
 688:./FreeRTOS/stream_buffer.c ****          * the buffer. */
 689:./FreeRTOS/stream_buffer.c ****         if( xRequiredSpace > xMaxReportedSpace )
 690:./FreeRTOS/stream_buffer.c ****         {
 691:./FreeRTOS/stream_buffer.c ****             xRequiredSpace = xMaxReportedSpace;
 692:./FreeRTOS/stream_buffer.c ****         }
 693:./FreeRTOS/stream_buffer.c ****         else
 694:./FreeRTOS/stream_buffer.c ****         {
 695:./FreeRTOS/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
 696:./FreeRTOS/stream_buffer.c ****         }
 697:./FreeRTOS/stream_buffer.c ****     }
 698:./FreeRTOS/stream_buffer.c **** 
 699:./FreeRTOS/stream_buffer.c ****     if( xTicksToWait != ( TickType_t ) 0 )
 700:./FreeRTOS/stream_buffer.c ****     {
 701:./FreeRTOS/stream_buffer.c ****         vTaskSetTimeOutState( &xTimeOut );
 702:./FreeRTOS/stream_buffer.c **** 
 703:./FreeRTOS/stream_buffer.c ****         do
 704:./FreeRTOS/stream_buffer.c ****         {
 705:./FreeRTOS/stream_buffer.c ****             /* Wait until the required number of bytes are free in the message
 706:./FreeRTOS/stream_buffer.c ****              * buffer. */
 707:./FreeRTOS/stream_buffer.c ****             taskENTER_CRITICAL();
 708:./FreeRTOS/stream_buffer.c ****             {
 709:./FreeRTOS/stream_buffer.c ****                 xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
 710:./FreeRTOS/stream_buffer.c **** 
 711:./FreeRTOS/stream_buffer.c ****                 if( xSpace < xRequiredSpace )
 712:./FreeRTOS/stream_buffer.c ****                 {
 713:./FreeRTOS/stream_buffer.c ****                     /* Clear notification state as going to wait for space. */
 714:./FreeRTOS/stream_buffer.c ****                     ( void ) xTaskNotifyStateClear( NULL );
 715:./FreeRTOS/stream_buffer.c **** 
 716:./FreeRTOS/stream_buffer.c ****                     /* Should only be one writer. */
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 14


 717:./FreeRTOS/stream_buffer.c ****                     configASSERT( pxStreamBuffer->xTaskWaitingToSend == NULL );
 718:./FreeRTOS/stream_buffer.c ****                     pxStreamBuffer->xTaskWaitingToSend = xTaskGetCurrentTaskHandle();
 719:./FreeRTOS/stream_buffer.c ****                 }
 720:./FreeRTOS/stream_buffer.c ****                 else
 721:./FreeRTOS/stream_buffer.c ****                 {
 722:./FreeRTOS/stream_buffer.c ****                     taskEXIT_CRITICAL();
 723:./FreeRTOS/stream_buffer.c ****                     break;
 724:./FreeRTOS/stream_buffer.c ****                 }
 725:./FreeRTOS/stream_buffer.c ****             }
 726:./FreeRTOS/stream_buffer.c ****             taskEXIT_CRITICAL();
 727:./FreeRTOS/stream_buffer.c **** 
 728:./FreeRTOS/stream_buffer.c ****             traceBLOCKING_ON_STREAM_BUFFER_SEND( xStreamBuffer );
 729:./FreeRTOS/stream_buffer.c ****             ( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
 730:./FreeRTOS/stream_buffer.c ****             pxStreamBuffer->xTaskWaitingToSend = NULL;
 731:./FreeRTOS/stream_buffer.c ****         } while( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE );
 732:./FreeRTOS/stream_buffer.c ****     }
 733:./FreeRTOS/stream_buffer.c ****     else
 734:./FreeRTOS/stream_buffer.c ****     {
 735:./FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 736:./FreeRTOS/stream_buffer.c ****     }
 737:./FreeRTOS/stream_buffer.c **** 
 738:./FreeRTOS/stream_buffer.c ****     if( xSpace == ( size_t ) 0 )
 739:./FreeRTOS/stream_buffer.c ****     {
 740:./FreeRTOS/stream_buffer.c ****         xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
 741:./FreeRTOS/stream_buffer.c ****     }
 742:./FreeRTOS/stream_buffer.c ****     else
 743:./FreeRTOS/stream_buffer.c ****     {
 744:./FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 745:./FreeRTOS/stream_buffer.c ****     }
 746:./FreeRTOS/stream_buffer.c **** 
 747:./FreeRTOS/stream_buffer.c ****     xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequire
 748:./FreeRTOS/stream_buffer.c **** 
 749:./FreeRTOS/stream_buffer.c ****     if( xReturn > ( size_t ) 0 )
 750:./FreeRTOS/stream_buffer.c ****     {
 751:./FreeRTOS/stream_buffer.c ****         traceSTREAM_BUFFER_SEND( xStreamBuffer, xReturn );
 752:./FreeRTOS/stream_buffer.c **** 
 753:./FreeRTOS/stream_buffer.c ****         /* Was a task waiting for the data? */
 754:./FreeRTOS/stream_buffer.c ****         if( prvBytesInBuffer( pxStreamBuffer ) >= pxStreamBuffer->xTriggerLevelBytes )
 755:./FreeRTOS/stream_buffer.c ****         {
 756:./FreeRTOS/stream_buffer.c ****             prvSEND_COMPLETED( pxStreamBuffer );
 757:./FreeRTOS/stream_buffer.c ****         }
 758:./FreeRTOS/stream_buffer.c ****         else
 759:./FreeRTOS/stream_buffer.c ****         {
 760:./FreeRTOS/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
 761:./FreeRTOS/stream_buffer.c ****         }
 762:./FreeRTOS/stream_buffer.c ****     }
 763:./FreeRTOS/stream_buffer.c ****     else
 764:./FreeRTOS/stream_buffer.c ****     {
 765:./FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 766:./FreeRTOS/stream_buffer.c ****         traceSTREAM_BUFFER_SEND_FAILED( xStreamBuffer );
 767:./FreeRTOS/stream_buffer.c ****     }
 768:./FreeRTOS/stream_buffer.c **** 
 769:./FreeRTOS/stream_buffer.c ****     return xReturn;
 770:./FreeRTOS/stream_buffer.c **** }
 771:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 772:./FreeRTOS/stream_buffer.c **** 
 773:./FreeRTOS/stream_buffer.c **** size_t xStreamBufferSendFromISR( StreamBufferHandle_t xStreamBuffer,
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 15


 774:./FreeRTOS/stream_buffer.c ****                                  const void * pvTxData,
 775:./FreeRTOS/stream_buffer.c ****                                  size_t xDataLengthBytes,
 776:./FreeRTOS/stream_buffer.c ****                                  BaseType_t * const pxHigherPriorityTaskWoken )
 777:./FreeRTOS/stream_buffer.c **** {
 778:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 779:./FreeRTOS/stream_buffer.c ****     size_t xReturn, xSpace;
 780:./FreeRTOS/stream_buffer.c ****     size_t xRequiredSpace = xDataLengthBytes;
 781:./FreeRTOS/stream_buffer.c **** 
 782:./FreeRTOS/stream_buffer.c ****     configASSERT( pvTxData );
 783:./FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 784:./FreeRTOS/stream_buffer.c **** 
 785:./FreeRTOS/stream_buffer.c ****     /* This send function is used to write to both message buffers and stream
 786:./FreeRTOS/stream_buffer.c ****      * buffers.  If this is a message buffer then the space needed must be
 787:./FreeRTOS/stream_buffer.c ****      * increased by the amount of bytes needed to store the length of the
 788:./FreeRTOS/stream_buffer.c ****      * message. */
 789:./FreeRTOS/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 790:./FreeRTOS/stream_buffer.c ****     {
 791:./FreeRTOS/stream_buffer.c ****         xRequiredSpace += sbBYTES_TO_STORE_MESSAGE_LENGTH;
 792:./FreeRTOS/stream_buffer.c ****     }
 793:./FreeRTOS/stream_buffer.c ****     else
 794:./FreeRTOS/stream_buffer.c ****     {
 795:./FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 796:./FreeRTOS/stream_buffer.c ****     }
 797:./FreeRTOS/stream_buffer.c **** 
 798:./FreeRTOS/stream_buffer.c ****     xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
 799:./FreeRTOS/stream_buffer.c ****     xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequire
 800:./FreeRTOS/stream_buffer.c **** 
 801:./FreeRTOS/stream_buffer.c ****     if( xReturn > ( size_t ) 0 )
 802:./FreeRTOS/stream_buffer.c ****     {
 803:./FreeRTOS/stream_buffer.c ****         /* Was a task waiting for the data? */
 804:./FreeRTOS/stream_buffer.c ****         if( prvBytesInBuffer( pxStreamBuffer ) >= pxStreamBuffer->xTriggerLevelBytes )
 805:./FreeRTOS/stream_buffer.c ****         {
 806:./FreeRTOS/stream_buffer.c ****             prvSEND_COMPLETE_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken );
 807:./FreeRTOS/stream_buffer.c ****         }
 808:./FreeRTOS/stream_buffer.c ****         else
 809:./FreeRTOS/stream_buffer.c ****         {
 810:./FreeRTOS/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
 811:./FreeRTOS/stream_buffer.c ****         }
 812:./FreeRTOS/stream_buffer.c ****     }
 813:./FreeRTOS/stream_buffer.c ****     else
 814:./FreeRTOS/stream_buffer.c ****     {
 815:./FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 816:./FreeRTOS/stream_buffer.c ****     }
 817:./FreeRTOS/stream_buffer.c **** 
 818:./FreeRTOS/stream_buffer.c ****     traceSTREAM_BUFFER_SEND_FROM_ISR( xStreamBuffer, xReturn );
 819:./FreeRTOS/stream_buffer.c **** 
 820:./FreeRTOS/stream_buffer.c ****     return xReturn;
 821:./FreeRTOS/stream_buffer.c **** }
 822:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 823:./FreeRTOS/stream_buffer.c **** 
 824:./FreeRTOS/stream_buffer.c **** static size_t prvWriteMessageToBuffer( StreamBuffer_t * const pxStreamBuffer,
 825:./FreeRTOS/stream_buffer.c ****                                        const void * pvTxData,
 826:./FreeRTOS/stream_buffer.c ****                                        size_t xDataLengthBytes,
 827:./FreeRTOS/stream_buffer.c ****                                        size_t xSpace,
 828:./FreeRTOS/stream_buffer.c ****                                        size_t xRequiredSpace )
 829:./FreeRTOS/stream_buffer.c **** {
 830:./FreeRTOS/stream_buffer.c ****     size_t xNextHead = pxStreamBuffer->xHead;
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 16


 831:./FreeRTOS/stream_buffer.c ****     configMESSAGE_BUFFER_LENGTH_TYPE xMessageLength;
 832:./FreeRTOS/stream_buffer.c **** 
 833:./FreeRTOS/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 834:./FreeRTOS/stream_buffer.c ****     {
 835:./FreeRTOS/stream_buffer.c ****         /* This is a message buffer, as opposed to a stream buffer. */
 836:./FreeRTOS/stream_buffer.c **** 
 837:./FreeRTOS/stream_buffer.c ****         /* Convert xDataLengthBytes to the message length type. */
 838:./FreeRTOS/stream_buffer.c ****         xMessageLength = ( configMESSAGE_BUFFER_LENGTH_TYPE ) xDataLengthBytes;
 839:./FreeRTOS/stream_buffer.c **** 
 840:./FreeRTOS/stream_buffer.c ****         /* Ensure the data length given fits within configMESSAGE_BUFFER_LENGTH_TYPE. */
 841:./FreeRTOS/stream_buffer.c ****         configASSERT( ( size_t ) xMessageLength == xDataLengthBytes );
 842:./FreeRTOS/stream_buffer.c **** 
 843:./FreeRTOS/stream_buffer.c ****         if( xSpace >= xRequiredSpace )
 844:./FreeRTOS/stream_buffer.c ****         {
 845:./FreeRTOS/stream_buffer.c ****             /* There is enough space to write both the message length and the message
 846:./FreeRTOS/stream_buffer.c ****              * itself into the buffer.  Start by writing the length of the data, the data
 847:./FreeRTOS/stream_buffer.c ****              * itself will be written later in this function. */
 848:./FreeRTOS/stream_buffer.c ****             xNextHead = prvWriteBytesToBuffer( pxStreamBuffer, ( const uint8_t * ) &( xMessageLengt
 849:./FreeRTOS/stream_buffer.c ****         }
 850:./FreeRTOS/stream_buffer.c ****         else
 851:./FreeRTOS/stream_buffer.c ****         {
 852:./FreeRTOS/stream_buffer.c ****             /* Not enough space, so do not write data to the buffer. */
 853:./FreeRTOS/stream_buffer.c ****             xDataLengthBytes = 0;
 854:./FreeRTOS/stream_buffer.c ****         }
 855:./FreeRTOS/stream_buffer.c ****     }
 856:./FreeRTOS/stream_buffer.c ****     else
 857:./FreeRTOS/stream_buffer.c ****     {
 858:./FreeRTOS/stream_buffer.c ****         /* This is a stream buffer, as opposed to a message buffer, so writing a
 859:./FreeRTOS/stream_buffer.c ****          * stream of bytes rather than discrete messages.  Plan to write as many
 860:./FreeRTOS/stream_buffer.c ****          * bytes as possible. */
 861:./FreeRTOS/stream_buffer.c ****         xDataLengthBytes = configMIN( xDataLengthBytes, xSpace );
 862:./FreeRTOS/stream_buffer.c ****     }
 863:./FreeRTOS/stream_buffer.c **** 
 864:./FreeRTOS/stream_buffer.c ****     if( xDataLengthBytes != ( size_t ) 0 )
 865:./FreeRTOS/stream_buffer.c ****     {
 866:./FreeRTOS/stream_buffer.c ****         /* Write the data to the buffer. */
 867:./FreeRTOS/stream_buffer.c ****         pxStreamBuffer->xHead = prvWriteBytesToBuffer( pxStreamBuffer, ( const uint8_t * ) pvTxData
 868:./FreeRTOS/stream_buffer.c ****     }
 869:./FreeRTOS/stream_buffer.c **** 
 870:./FreeRTOS/stream_buffer.c ****     return xDataLengthBytes;
 871:./FreeRTOS/stream_buffer.c **** }
 872:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 873:./FreeRTOS/stream_buffer.c **** 
 874:./FreeRTOS/stream_buffer.c **** size_t xStreamBufferReceive( StreamBufferHandle_t xStreamBuffer,
 875:./FreeRTOS/stream_buffer.c ****                              void * pvRxData,
 876:./FreeRTOS/stream_buffer.c ****                              size_t xBufferLengthBytes,
 877:./FreeRTOS/stream_buffer.c ****                              TickType_t xTicksToWait )
 878:./FreeRTOS/stream_buffer.c **** {
 879:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 880:./FreeRTOS/stream_buffer.c ****     size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
 881:./FreeRTOS/stream_buffer.c **** 
 882:./FreeRTOS/stream_buffer.c ****     configASSERT( pvRxData );
 883:./FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 884:./FreeRTOS/stream_buffer.c **** 
 885:./FreeRTOS/stream_buffer.c ****     /* This receive function is used by both message buffers, which store
 886:./FreeRTOS/stream_buffer.c ****      * discrete messages, and stream buffers, which store a continuous stream of
 887:./FreeRTOS/stream_buffer.c ****      * bytes.  Discrete messages include an additional
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 17


 888:./FreeRTOS/stream_buffer.c ****      * sbBYTES_TO_STORE_MESSAGE_LENGTH bytes that hold the length of the
 889:./FreeRTOS/stream_buffer.c ****      * message. */
 890:./FreeRTOS/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 891:./FreeRTOS/stream_buffer.c ****     {
 892:./FreeRTOS/stream_buffer.c ****         xBytesToStoreMessageLength = sbBYTES_TO_STORE_MESSAGE_LENGTH;
 893:./FreeRTOS/stream_buffer.c ****     }
 894:./FreeRTOS/stream_buffer.c ****     else
 895:./FreeRTOS/stream_buffer.c ****     {
 896:./FreeRTOS/stream_buffer.c ****         xBytesToStoreMessageLength = 0;
 897:./FreeRTOS/stream_buffer.c ****     }
 898:./FreeRTOS/stream_buffer.c **** 
 899:./FreeRTOS/stream_buffer.c ****     if( xTicksToWait != ( TickType_t ) 0 )
 900:./FreeRTOS/stream_buffer.c ****     {
 901:./FreeRTOS/stream_buffer.c ****         /* Checking if there is data and clearing the notification state must be
 902:./FreeRTOS/stream_buffer.c ****          * performed atomically. */
 903:./FreeRTOS/stream_buffer.c ****         taskENTER_CRITICAL();
 904:./FreeRTOS/stream_buffer.c ****         {
 905:./FreeRTOS/stream_buffer.c ****             xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 906:./FreeRTOS/stream_buffer.c **** 
 907:./FreeRTOS/stream_buffer.c ****             /* If this function was invoked by a message buffer read then
 908:./FreeRTOS/stream_buffer.c ****              * xBytesToStoreMessageLength holds the number of bytes used to hold
 909:./FreeRTOS/stream_buffer.c ****              * the length of the next discrete message.  If this function was
 910:./FreeRTOS/stream_buffer.c ****              * invoked by a stream buffer read then xBytesToStoreMessageLength will
 911:./FreeRTOS/stream_buffer.c ****              * be 0. */
 912:./FreeRTOS/stream_buffer.c ****             if( xBytesAvailable <= xBytesToStoreMessageLength )
 913:./FreeRTOS/stream_buffer.c ****             {
 914:./FreeRTOS/stream_buffer.c ****                 /* Clear notification state as going to wait for data. */
 915:./FreeRTOS/stream_buffer.c ****                 ( void ) xTaskNotifyStateClear( NULL );
 916:./FreeRTOS/stream_buffer.c **** 
 917:./FreeRTOS/stream_buffer.c ****                 /* Should only be one reader. */
 918:./FreeRTOS/stream_buffer.c ****                 configASSERT( pxStreamBuffer->xTaskWaitingToReceive == NULL );
 919:./FreeRTOS/stream_buffer.c ****                 pxStreamBuffer->xTaskWaitingToReceive = xTaskGetCurrentTaskHandle();
 920:./FreeRTOS/stream_buffer.c ****             }
 921:./FreeRTOS/stream_buffer.c ****             else
 922:./FreeRTOS/stream_buffer.c ****             {
 923:./FreeRTOS/stream_buffer.c ****                 mtCOVERAGE_TEST_MARKER();
 924:./FreeRTOS/stream_buffer.c ****             }
 925:./FreeRTOS/stream_buffer.c ****         }
 926:./FreeRTOS/stream_buffer.c ****         taskEXIT_CRITICAL();
 927:./FreeRTOS/stream_buffer.c **** 
 928:./FreeRTOS/stream_buffer.c ****         if( xBytesAvailable <= xBytesToStoreMessageLength )
 929:./FreeRTOS/stream_buffer.c ****         {
 930:./FreeRTOS/stream_buffer.c ****             /* Wait for data to be available. */
 931:./FreeRTOS/stream_buffer.c ****             traceBLOCKING_ON_STREAM_BUFFER_RECEIVE( xStreamBuffer );
 932:./FreeRTOS/stream_buffer.c ****             ( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
 933:./FreeRTOS/stream_buffer.c ****             pxStreamBuffer->xTaskWaitingToReceive = NULL;
 934:./FreeRTOS/stream_buffer.c **** 
 935:./FreeRTOS/stream_buffer.c ****             /* Recheck the data available after blocking. */
 936:./FreeRTOS/stream_buffer.c ****             xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 937:./FreeRTOS/stream_buffer.c ****         }
 938:./FreeRTOS/stream_buffer.c ****         else
 939:./FreeRTOS/stream_buffer.c ****         {
 940:./FreeRTOS/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
 941:./FreeRTOS/stream_buffer.c ****         }
 942:./FreeRTOS/stream_buffer.c ****     }
 943:./FreeRTOS/stream_buffer.c ****     else
 944:./FreeRTOS/stream_buffer.c ****     {
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 18


 945:./FreeRTOS/stream_buffer.c ****         xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 946:./FreeRTOS/stream_buffer.c ****     }
 947:./FreeRTOS/stream_buffer.c **** 
 948:./FreeRTOS/stream_buffer.c ****     /* Whether receiving a discrete message (where xBytesToStoreMessageLength
 949:./FreeRTOS/stream_buffer.c ****      * holds the number of bytes used to store the message length) or a stream of
 950:./FreeRTOS/stream_buffer.c ****      * bytes (where xBytesToStoreMessageLength is zero), the number of bytes
 951:./FreeRTOS/stream_buffer.c ****      * available must be greater than xBytesToStoreMessageLength to be able to
 952:./FreeRTOS/stream_buffer.c ****      * read bytes from the buffer. */
 953:./FreeRTOS/stream_buffer.c ****     if( xBytesAvailable > xBytesToStoreMessageLength )
 954:./FreeRTOS/stream_buffer.c ****     {
 955:./FreeRTOS/stream_buffer.c ****         xReceivedLength = prvReadMessageFromBuffer( pxStreamBuffer, pvRxData, xBufferLengthBytes, x
 956:./FreeRTOS/stream_buffer.c **** 
 957:./FreeRTOS/stream_buffer.c ****         /* Was a task waiting for space in the buffer? */
 958:./FreeRTOS/stream_buffer.c ****         if( xReceivedLength != ( size_t ) 0 )
 959:./FreeRTOS/stream_buffer.c ****         {
 960:./FreeRTOS/stream_buffer.c ****             traceSTREAM_BUFFER_RECEIVE( xStreamBuffer, xReceivedLength );
 961:./FreeRTOS/stream_buffer.c ****             prvRECEIVE_COMPLETED( xStreamBuffer );
 962:./FreeRTOS/stream_buffer.c ****         }
 963:./FreeRTOS/stream_buffer.c ****         else
 964:./FreeRTOS/stream_buffer.c ****         {
 965:./FreeRTOS/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
 966:./FreeRTOS/stream_buffer.c ****         }
 967:./FreeRTOS/stream_buffer.c ****     }
 968:./FreeRTOS/stream_buffer.c ****     else
 969:./FreeRTOS/stream_buffer.c ****     {
 970:./FreeRTOS/stream_buffer.c ****         traceSTREAM_BUFFER_RECEIVE_FAILED( xStreamBuffer );
 971:./FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 972:./FreeRTOS/stream_buffer.c ****     }
 973:./FreeRTOS/stream_buffer.c **** 
 974:./FreeRTOS/stream_buffer.c ****     return xReceivedLength;
 975:./FreeRTOS/stream_buffer.c **** }
 976:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 977:./FreeRTOS/stream_buffer.c **** 
 978:./FreeRTOS/stream_buffer.c **** size_t xStreamBufferNextMessageLengthBytes( StreamBufferHandle_t xStreamBuffer )
 979:./FreeRTOS/stream_buffer.c **** {
 980:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 981:./FreeRTOS/stream_buffer.c ****     size_t xReturn, xBytesAvailable;
 982:./FreeRTOS/stream_buffer.c ****     configMESSAGE_BUFFER_LENGTH_TYPE xTempReturn;
 983:./FreeRTOS/stream_buffer.c **** 
 984:./FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 985:./FreeRTOS/stream_buffer.c **** 
 986:./FreeRTOS/stream_buffer.c ****     /* Ensure the stream buffer is being used as a message buffer. */
 987:./FreeRTOS/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 988:./FreeRTOS/stream_buffer.c ****     {
 989:./FreeRTOS/stream_buffer.c ****         xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 990:./FreeRTOS/stream_buffer.c **** 
 991:./FreeRTOS/stream_buffer.c ****         if( xBytesAvailable > sbBYTES_TO_STORE_MESSAGE_LENGTH )
 992:./FreeRTOS/stream_buffer.c ****         {
 993:./FreeRTOS/stream_buffer.c ****             /* The number of bytes available is greater than the number of bytes
 994:./FreeRTOS/stream_buffer.c ****              * required to hold the length of the next message, so another message
 995:./FreeRTOS/stream_buffer.c ****              * is available. */
 996:./FreeRTOS/stream_buffer.c ****             ( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempReturn, sbBYTES_TO
 997:./FreeRTOS/stream_buffer.c ****             xReturn = ( size_t ) xTempReturn;
 998:./FreeRTOS/stream_buffer.c ****         }
 999:./FreeRTOS/stream_buffer.c ****         else
1000:./FreeRTOS/stream_buffer.c ****         {
1001:./FreeRTOS/stream_buffer.c ****             /* The minimum amount of bytes in a message buffer is
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 19


1002:./FreeRTOS/stream_buffer.c ****              * ( sbBYTES_TO_STORE_MESSAGE_LENGTH + 1 ), so if xBytesAvailable is
1003:./FreeRTOS/stream_buffer.c ****              * less than sbBYTES_TO_STORE_MESSAGE_LENGTH the only other valid
1004:./FreeRTOS/stream_buffer.c ****              * value is 0. */
1005:./FreeRTOS/stream_buffer.c ****             configASSERT( xBytesAvailable == 0 );
1006:./FreeRTOS/stream_buffer.c ****             xReturn = 0;
1007:./FreeRTOS/stream_buffer.c ****         }
1008:./FreeRTOS/stream_buffer.c ****     }
1009:./FreeRTOS/stream_buffer.c ****     else
1010:./FreeRTOS/stream_buffer.c ****     {
1011:./FreeRTOS/stream_buffer.c ****         xReturn = 0;
1012:./FreeRTOS/stream_buffer.c ****     }
1013:./FreeRTOS/stream_buffer.c **** 
1014:./FreeRTOS/stream_buffer.c ****     return xReturn;
1015:./FreeRTOS/stream_buffer.c **** }
1016:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
1017:./FreeRTOS/stream_buffer.c **** 
1018:./FreeRTOS/stream_buffer.c **** size_t xStreamBufferReceiveFromISR( StreamBufferHandle_t xStreamBuffer,
1019:./FreeRTOS/stream_buffer.c ****                                     void * pvRxData,
1020:./FreeRTOS/stream_buffer.c ****                                     size_t xBufferLengthBytes,
1021:./FreeRTOS/stream_buffer.c ****                                     BaseType_t * const pxHigherPriorityTaskWoken )
1022:./FreeRTOS/stream_buffer.c **** {
1023:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
1024:./FreeRTOS/stream_buffer.c ****     size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
1025:./FreeRTOS/stream_buffer.c **** 
1026:./FreeRTOS/stream_buffer.c ****     configASSERT( pvRxData );
1027:./FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
1028:./FreeRTOS/stream_buffer.c **** 
1029:./FreeRTOS/stream_buffer.c ****     /* This receive function is used by both message buffers, which store
1030:./FreeRTOS/stream_buffer.c ****      * discrete messages, and stream buffers, which store a continuous stream of
1031:./FreeRTOS/stream_buffer.c ****      * bytes.  Discrete messages include an additional
1032:./FreeRTOS/stream_buffer.c ****      * sbBYTES_TO_STORE_MESSAGE_LENGTH bytes that hold the length of the
1033:./FreeRTOS/stream_buffer.c ****      * message. */
1034:./FreeRTOS/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
1035:./FreeRTOS/stream_buffer.c ****     {
1036:./FreeRTOS/stream_buffer.c ****         xBytesToStoreMessageLength = sbBYTES_TO_STORE_MESSAGE_LENGTH;
1037:./FreeRTOS/stream_buffer.c ****     }
1038:./FreeRTOS/stream_buffer.c ****     else
1039:./FreeRTOS/stream_buffer.c ****     {
1040:./FreeRTOS/stream_buffer.c ****         xBytesToStoreMessageLength = 0;
1041:./FreeRTOS/stream_buffer.c ****     }
1042:./FreeRTOS/stream_buffer.c **** 
1043:./FreeRTOS/stream_buffer.c ****     xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
1044:./FreeRTOS/stream_buffer.c **** 
1045:./FreeRTOS/stream_buffer.c ****     /* Whether receiving a discrete message (where xBytesToStoreMessageLength
1046:./FreeRTOS/stream_buffer.c ****      * holds the number of bytes used to store the message length) or a stream of
1047:./FreeRTOS/stream_buffer.c ****      * bytes (where xBytesToStoreMessageLength is zero), the number of bytes
1048:./FreeRTOS/stream_buffer.c ****      * available must be greater than xBytesToStoreMessageLength to be able to
1049:./FreeRTOS/stream_buffer.c ****      * read bytes from the buffer. */
1050:./FreeRTOS/stream_buffer.c ****     if( xBytesAvailable > xBytesToStoreMessageLength )
1051:./FreeRTOS/stream_buffer.c ****     {
1052:./FreeRTOS/stream_buffer.c ****         xReceivedLength = prvReadMessageFromBuffer( pxStreamBuffer, pvRxData, xBufferLengthBytes, x
1053:./FreeRTOS/stream_buffer.c **** 
1054:./FreeRTOS/stream_buffer.c ****         /* Was a task waiting for space in the buffer? */
1055:./FreeRTOS/stream_buffer.c ****         if( xReceivedLength != ( size_t ) 0 )
1056:./FreeRTOS/stream_buffer.c ****         {
1057:./FreeRTOS/stream_buffer.c ****             prvRECEIVE_COMPLETED_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken );
1058:./FreeRTOS/stream_buffer.c ****         }
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 20


1059:./FreeRTOS/stream_buffer.c ****         else
1060:./FreeRTOS/stream_buffer.c ****         {
1061:./FreeRTOS/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
1062:./FreeRTOS/stream_buffer.c ****         }
1063:./FreeRTOS/stream_buffer.c ****     }
1064:./FreeRTOS/stream_buffer.c ****     else
1065:./FreeRTOS/stream_buffer.c ****     {
1066:./FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
1067:./FreeRTOS/stream_buffer.c ****     }
1068:./FreeRTOS/stream_buffer.c **** 
1069:./FreeRTOS/stream_buffer.c ****     traceSTREAM_BUFFER_RECEIVE_FROM_ISR( xStreamBuffer, xReceivedLength );
1070:./FreeRTOS/stream_buffer.c **** 
1071:./FreeRTOS/stream_buffer.c ****     return xReceivedLength;
1072:./FreeRTOS/stream_buffer.c **** }
1073:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
1074:./FreeRTOS/stream_buffer.c **** 
1075:./FreeRTOS/stream_buffer.c **** static size_t prvReadMessageFromBuffer( StreamBuffer_t * pxStreamBuffer,
1076:./FreeRTOS/stream_buffer.c ****                                         void * pvRxData,
1077:./FreeRTOS/stream_buffer.c ****                                         size_t xBufferLengthBytes,
1078:./FreeRTOS/stream_buffer.c ****                                         size_t xBytesAvailable )
1079:./FreeRTOS/stream_buffer.c **** {
1080:./FreeRTOS/stream_buffer.c ****     size_t xCount, xNextMessageLength;
1081:./FreeRTOS/stream_buffer.c ****     configMESSAGE_BUFFER_LENGTH_TYPE xTempNextMessageLength;
1082:./FreeRTOS/stream_buffer.c ****     size_t xNextTail = pxStreamBuffer->xTail;
1083:./FreeRTOS/stream_buffer.c **** 
1084:./FreeRTOS/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
1085:./FreeRTOS/stream_buffer.c ****     {
1086:./FreeRTOS/stream_buffer.c ****         /* A discrete message is being received.  First receive the length
1087:./FreeRTOS/stream_buffer.c ****          * of the message. */
1088:./FreeRTOS/stream_buffer.c ****         xNextTail = prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempNextMessageLength, 
1089:./FreeRTOS/stream_buffer.c ****         xNextMessageLength = ( size_t ) xTempNextMessageLength;
1090:./FreeRTOS/stream_buffer.c **** 
1091:./FreeRTOS/stream_buffer.c ****         /* Reduce the number of bytes available by the number of bytes just
1092:./FreeRTOS/stream_buffer.c ****          * read out. */
1093:./FreeRTOS/stream_buffer.c ****         xBytesAvailable -= sbBYTES_TO_STORE_MESSAGE_LENGTH;
1094:./FreeRTOS/stream_buffer.c **** 
1095:./FreeRTOS/stream_buffer.c ****         /* Check there is enough space in the buffer provided by the
1096:./FreeRTOS/stream_buffer.c ****          * user. */
1097:./FreeRTOS/stream_buffer.c ****         if( xNextMessageLength > xBufferLengthBytes )
1098:./FreeRTOS/stream_buffer.c ****         {
1099:./FreeRTOS/stream_buffer.c ****             /* The user has provided insufficient space to read the message. */
1100:./FreeRTOS/stream_buffer.c ****             xNextMessageLength = 0;
1101:./FreeRTOS/stream_buffer.c ****         }
1102:./FreeRTOS/stream_buffer.c ****         else
1103:./FreeRTOS/stream_buffer.c ****         {
1104:./FreeRTOS/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
1105:./FreeRTOS/stream_buffer.c ****         }
1106:./FreeRTOS/stream_buffer.c ****     }
1107:./FreeRTOS/stream_buffer.c ****     else
1108:./FreeRTOS/stream_buffer.c ****     {
1109:./FreeRTOS/stream_buffer.c ****         /* A stream of bytes is being received (as opposed to a discrete
1110:./FreeRTOS/stream_buffer.c ****          * message), so read as many bytes as possible. */
1111:./FreeRTOS/stream_buffer.c ****         xNextMessageLength = xBufferLengthBytes;
1112:./FreeRTOS/stream_buffer.c ****     }
1113:./FreeRTOS/stream_buffer.c **** 
1114:./FreeRTOS/stream_buffer.c ****     /* Use the minimum of the wanted bytes and the available bytes. */
1115:./FreeRTOS/stream_buffer.c ****     xCount = configMIN( xNextMessageLength, xBytesAvailable );
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 21


1116:./FreeRTOS/stream_buffer.c **** 
1117:./FreeRTOS/stream_buffer.c ****     if( xCount != ( size_t ) 0 )
1118:./FreeRTOS/stream_buffer.c ****     {
1119:./FreeRTOS/stream_buffer.c ****         /* Read the actual data and update the tail to mark the data as officially consumed. */
1120:./FreeRTOS/stream_buffer.c ****         pxStreamBuffer->xTail = prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) pvRxData, xCo
1121:./FreeRTOS/stream_buffer.c ****     }
1122:./FreeRTOS/stream_buffer.c **** 
1123:./FreeRTOS/stream_buffer.c ****     return xCount;
1124:./FreeRTOS/stream_buffer.c **** }
1125:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
1126:./FreeRTOS/stream_buffer.c **** 
1127:./FreeRTOS/stream_buffer.c **** BaseType_t xStreamBufferIsEmpty( StreamBufferHandle_t xStreamBuffer )
1128:./FreeRTOS/stream_buffer.c **** {
1129:./FreeRTOS/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
1130:./FreeRTOS/stream_buffer.c ****     BaseType_t xReturn;
1131:./FreeRTOS/stream_buffer.c ****     size_t xTail;
1132:./FreeRTOS/stream_buffer.c **** 
1133:./FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
1134:./FreeRTOS/stream_buffer.c **** 
1135:./FreeRTOS/stream_buffer.c ****     /* True if no bytes are available. */
1136:./FreeRTOS/stream_buffer.c ****     xTail = pxStreamBuffer->xTail;
1137:./FreeRTOS/stream_buffer.c **** 
1138:./FreeRTOS/stream_buffer.c ****     if( pxStreamBuffer->xHead == xTail )
1139:./FreeRTOS/stream_buffer.c ****     {
1140:./FreeRTOS/stream_buffer.c ****         xReturn = pdTRUE;
1141:./FreeRTOS/stream_buffer.c ****     }
1142:./FreeRTOS/stream_buffer.c ****     else
1143:./FreeRTOS/stream_buffer.c ****     {
1144:./FreeRTOS/stream_buffer.c ****         xReturn = pdFALSE;
1145:./FreeRTOS/stream_buffer.c ****     }
1146:./FreeRTOS/stream_buffer.c **** 
1147:./FreeRTOS/stream_buffer.c ****     return xReturn;
1148:./FreeRTOS/stream_buffer.c **** }
1149:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
1150:./FreeRTOS/stream_buffer.c **** 
1151:./FreeRTOS/stream_buffer.c **** BaseType_t xStreamBufferIsFull( StreamBufferHandle_t xStreamBuffer )
1152:./FreeRTOS/stream_buffer.c **** {
1153:./FreeRTOS/stream_buffer.c ****     BaseType_t xReturn;
1154:./FreeRTOS/stream_buffer.c ****     size_t xBytesToStoreMessageLength;
1155:./FreeRTOS/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
1156:./FreeRTOS/stream_buffer.c **** 
1157:./FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
1158:./FreeRTOS/stream_buffer.c **** 
1159:./FreeRTOS/stream_buffer.c ****     /* This generic version of the receive function is used by both message
1160:./FreeRTOS/stream_buffer.c ****      * buffers, which store discrete messages, and stream buffers, which store a
1161:./FreeRTOS/stream_buffer.c ****      * continuous stream of bytes.  Discrete messages include an additional
1162:./FreeRTOS/stream_buffer.c ****      * sbBYTES_TO_STORE_MESSAGE_LENGTH bytes that hold the length of the message. */
1163:./FreeRTOS/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
1164:./FreeRTOS/stream_buffer.c ****     {
1165:./FreeRTOS/stream_buffer.c ****         xBytesToStoreMessageLength = sbBYTES_TO_STORE_MESSAGE_LENGTH;
1166:./FreeRTOS/stream_buffer.c ****     }
1167:./FreeRTOS/stream_buffer.c ****     else
1168:./FreeRTOS/stream_buffer.c ****     {
1169:./FreeRTOS/stream_buffer.c ****         xBytesToStoreMessageLength = 0;
1170:./FreeRTOS/stream_buffer.c ****     }
1171:./FreeRTOS/stream_buffer.c **** 
1172:./FreeRTOS/stream_buffer.c ****     /* True if the available space equals zero. */
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 22


1173:./FreeRTOS/stream_buffer.c ****     if( xStreamBufferSpacesAvailable( xStreamBuffer ) <= xBytesToStoreMessageLength )
1174:./FreeRTOS/stream_buffer.c ****     {
1175:./FreeRTOS/stream_buffer.c ****         xReturn = pdTRUE;
1176:./FreeRTOS/stream_buffer.c ****     }
1177:./FreeRTOS/stream_buffer.c ****     else
1178:./FreeRTOS/stream_buffer.c ****     {
1179:./FreeRTOS/stream_buffer.c ****         xReturn = pdFALSE;
1180:./FreeRTOS/stream_buffer.c ****     }
1181:./FreeRTOS/stream_buffer.c **** 
1182:./FreeRTOS/stream_buffer.c ****     return xReturn;
1183:./FreeRTOS/stream_buffer.c **** }
1184:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
1185:./FreeRTOS/stream_buffer.c **** 
1186:./FreeRTOS/stream_buffer.c **** BaseType_t xStreamBufferSendCompletedFromISR( StreamBufferHandle_t xStreamBuffer,
1187:./FreeRTOS/stream_buffer.c ****                                               BaseType_t * pxHigherPriorityTaskWoken )
1188:./FreeRTOS/stream_buffer.c **** {
1189:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
1190:./FreeRTOS/stream_buffer.c ****     BaseType_t xReturn;
1191:./FreeRTOS/stream_buffer.c ****     UBaseType_t uxSavedInterruptStatus;
1192:./FreeRTOS/stream_buffer.c **** 
1193:./FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
1194:./FreeRTOS/stream_buffer.c **** 
1195:./FreeRTOS/stream_buffer.c ****     uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();
1196:./FreeRTOS/stream_buffer.c ****     {
1197:./FreeRTOS/stream_buffer.c ****         if( ( pxStreamBuffer )->xTaskWaitingToReceive != NULL )
1198:./FreeRTOS/stream_buffer.c ****         {
1199:./FreeRTOS/stream_buffer.c ****             ( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToReceive,
1200:./FreeRTOS/stream_buffer.c ****                                          ( uint32_t ) 0,
1201:./FreeRTOS/stream_buffer.c ****                                          eNoAction,
1202:./FreeRTOS/stream_buffer.c ****                                          pxHigherPriorityTaskWoken );
1203:./FreeRTOS/stream_buffer.c ****             ( pxStreamBuffer )->xTaskWaitingToReceive = NULL;
1204:./FreeRTOS/stream_buffer.c ****             xReturn = pdTRUE;
1205:./FreeRTOS/stream_buffer.c ****         }
1206:./FreeRTOS/stream_buffer.c ****         else
1207:./FreeRTOS/stream_buffer.c ****         {
1208:./FreeRTOS/stream_buffer.c ****             xReturn = pdFALSE;
1209:./FreeRTOS/stream_buffer.c ****         }
1210:./FreeRTOS/stream_buffer.c ****     }
1211:./FreeRTOS/stream_buffer.c ****     portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1212:./FreeRTOS/stream_buffer.c **** 
1213:./FreeRTOS/stream_buffer.c ****     return xReturn;
1214:./FreeRTOS/stream_buffer.c **** }
1215:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
1216:./FreeRTOS/stream_buffer.c **** 
1217:./FreeRTOS/stream_buffer.c **** BaseType_t xStreamBufferReceiveCompletedFromISR( StreamBufferHandle_t xStreamBuffer,
1218:./FreeRTOS/stream_buffer.c ****                                                  BaseType_t * pxHigherPriorityTaskWoken )
1219:./FreeRTOS/stream_buffer.c **** {
1220:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
1221:./FreeRTOS/stream_buffer.c ****     BaseType_t xReturn;
1222:./FreeRTOS/stream_buffer.c ****     UBaseType_t uxSavedInterruptStatus;
1223:./FreeRTOS/stream_buffer.c **** 
1224:./FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
1225:./FreeRTOS/stream_buffer.c **** 
1226:./FreeRTOS/stream_buffer.c ****     uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();
1227:./FreeRTOS/stream_buffer.c ****     {
1228:./FreeRTOS/stream_buffer.c ****         if( ( pxStreamBuffer )->xTaskWaitingToSend != NULL )
1229:./FreeRTOS/stream_buffer.c ****         {
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 23


1230:./FreeRTOS/stream_buffer.c ****             ( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToSend,
1231:./FreeRTOS/stream_buffer.c ****                                          ( uint32_t ) 0,
1232:./FreeRTOS/stream_buffer.c ****                                          eNoAction,
1233:./FreeRTOS/stream_buffer.c ****                                          pxHigherPriorityTaskWoken );
1234:./FreeRTOS/stream_buffer.c ****             ( pxStreamBuffer )->xTaskWaitingToSend = NULL;
1235:./FreeRTOS/stream_buffer.c ****             xReturn = pdTRUE;
1236:./FreeRTOS/stream_buffer.c ****         }
1237:./FreeRTOS/stream_buffer.c ****         else
1238:./FreeRTOS/stream_buffer.c ****         {
1239:./FreeRTOS/stream_buffer.c ****             xReturn = pdFALSE;
1240:./FreeRTOS/stream_buffer.c ****         }
1241:./FreeRTOS/stream_buffer.c ****     }
1242:./FreeRTOS/stream_buffer.c ****     portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1243:./FreeRTOS/stream_buffer.c **** 
1244:./FreeRTOS/stream_buffer.c ****     return xReturn;
1245:./FreeRTOS/stream_buffer.c **** }
1246:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
1247:./FreeRTOS/stream_buffer.c **** 
1248:./FreeRTOS/stream_buffer.c **** static size_t prvWriteBytesToBuffer( StreamBuffer_t * const pxStreamBuffer,
1249:./FreeRTOS/stream_buffer.c ****                                      const uint8_t * pucData,
1250:./FreeRTOS/stream_buffer.c ****                                      size_t xCount,
1251:./FreeRTOS/stream_buffer.c ****                                      size_t xHead )
1252:./FreeRTOS/stream_buffer.c **** {
1253:./FreeRTOS/stream_buffer.c ****     size_t xFirstLength;
1254:./FreeRTOS/stream_buffer.c **** 
1255:./FreeRTOS/stream_buffer.c ****     configASSERT( xCount > ( size_t ) 0 );
1256:./FreeRTOS/stream_buffer.c **** 
1257:./FreeRTOS/stream_buffer.c ****     /* Calculate the number of bytes that can be added in the first write -
1258:./FreeRTOS/stream_buffer.c ****      * which may be less than the total number of bytes that need to be added if
1259:./FreeRTOS/stream_buffer.c ****      * the buffer will wrap back to the beginning. */
1260:./FreeRTOS/stream_buffer.c ****     xFirstLength = configMIN( pxStreamBuffer->xLength - xHead, xCount );
1261:./FreeRTOS/stream_buffer.c **** 
1262:./FreeRTOS/stream_buffer.c ****     /* Write as many bytes as can be written in the first write. */
1263:./FreeRTOS/stream_buffer.c ****     configASSERT( ( xHead + xFirstLength ) <= pxStreamBuffer->xLength );
1264:./FreeRTOS/stream_buffer.c ****     ( void ) memcpy( ( void * ) ( &( pxStreamBuffer->pucBuffer[ xHead ] ) ), ( const void * ) pucDa
1265:./FreeRTOS/stream_buffer.c **** 
1266:./FreeRTOS/stream_buffer.c ****     /* If the number of bytes written was less than the number that could be
1267:./FreeRTOS/stream_buffer.c ****      * written in the first write... */
1268:./FreeRTOS/stream_buffer.c ****     if( xCount > xFirstLength )
1269:./FreeRTOS/stream_buffer.c ****     {
1270:./FreeRTOS/stream_buffer.c ****         /* ...then write the remaining bytes to the start of the buffer. */
1271:./FreeRTOS/stream_buffer.c ****         configASSERT( ( xCount - xFirstLength ) <= pxStreamBuffer->xLength );
1272:./FreeRTOS/stream_buffer.c ****         ( void ) memcpy( ( void * ) pxStreamBuffer->pucBuffer, ( const void * ) &( pucData[ xFirstL
1273:./FreeRTOS/stream_buffer.c ****     }
1274:./FreeRTOS/stream_buffer.c ****     else
1275:./FreeRTOS/stream_buffer.c ****     {
1276:./FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
1277:./FreeRTOS/stream_buffer.c ****     }
1278:./FreeRTOS/stream_buffer.c **** 
1279:./FreeRTOS/stream_buffer.c ****     xHead += xCount;
1280:./FreeRTOS/stream_buffer.c **** 
1281:./FreeRTOS/stream_buffer.c ****     if( xHead >= pxStreamBuffer->xLength )
1282:./FreeRTOS/stream_buffer.c ****     {
1283:./FreeRTOS/stream_buffer.c ****         xHead -= pxStreamBuffer->xLength;
1284:./FreeRTOS/stream_buffer.c ****     }
1285:./FreeRTOS/stream_buffer.c ****     else
1286:./FreeRTOS/stream_buffer.c ****     {
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 24


1287:./FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
1288:./FreeRTOS/stream_buffer.c ****     }
1289:./FreeRTOS/stream_buffer.c **** 
1290:./FreeRTOS/stream_buffer.c ****     return xHead;
1291:./FreeRTOS/stream_buffer.c **** }
1292:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
1293:./FreeRTOS/stream_buffer.c **** 
1294:./FreeRTOS/stream_buffer.c **** static size_t prvReadBytesFromBuffer( StreamBuffer_t * pxStreamBuffer,
1295:./FreeRTOS/stream_buffer.c ****                                       uint8_t * pucData,
1296:./FreeRTOS/stream_buffer.c ****                                       size_t xCount,
1297:./FreeRTOS/stream_buffer.c ****                                       size_t xTail )
1298:./FreeRTOS/stream_buffer.c **** {
1299:./FreeRTOS/stream_buffer.c ****     size_t xFirstLength;
1300:./FreeRTOS/stream_buffer.c **** 
1301:./FreeRTOS/stream_buffer.c ****     configASSERT( xCount != ( size_t ) 0 );
1302:./FreeRTOS/stream_buffer.c **** 
1303:./FreeRTOS/stream_buffer.c ****     /* Calculate the number of bytes that can be read - which may be
1304:./FreeRTOS/stream_buffer.c ****      * less than the number wanted if the data wraps around to the start of
1305:./FreeRTOS/stream_buffer.c ****      * the buffer. */
1306:./FreeRTOS/stream_buffer.c ****     xFirstLength = configMIN( pxStreamBuffer->xLength - xTail, xCount );
1307:./FreeRTOS/stream_buffer.c **** 
1308:./FreeRTOS/stream_buffer.c ****     /* Obtain the number of bytes it is possible to obtain in the first
1309:./FreeRTOS/stream_buffer.c ****      * read.  Asserts check bounds of read and write. */
1310:./FreeRTOS/stream_buffer.c ****     configASSERT( xFirstLength <= xCount );
1311:./FreeRTOS/stream_buffer.c ****     configASSERT( ( xTail + xFirstLength ) <= pxStreamBuffer->xLength );
1312:./FreeRTOS/stream_buffer.c ****     ( void ) memcpy( ( void * ) pucData, ( const void * ) &( pxStreamBuffer->pucBuffer[ xTail ] ), 
1313:./FreeRTOS/stream_buffer.c **** 
1314:./FreeRTOS/stream_buffer.c ****     /* If the total number of wanted bytes is greater than the number
1315:./FreeRTOS/stream_buffer.c ****      * that could be read in the first read... */
1316:./FreeRTOS/stream_buffer.c ****     if( xCount > xFirstLength )
1317:./FreeRTOS/stream_buffer.c ****     {
1318:./FreeRTOS/stream_buffer.c ****         /* ...then read the remaining bytes from the start of the buffer. */
1319:./FreeRTOS/stream_buffer.c ****         ( void ) memcpy( ( void * ) &( pucData[ xFirstLength ] ), ( void * ) ( pxStreamBuffer->pucB
1320:./FreeRTOS/stream_buffer.c ****     }
1321:./FreeRTOS/stream_buffer.c ****     else
1322:./FreeRTOS/stream_buffer.c ****     {
1323:./FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
1324:./FreeRTOS/stream_buffer.c ****     }
1325:./FreeRTOS/stream_buffer.c **** 
1326:./FreeRTOS/stream_buffer.c ****     /* Move the tail pointer to effectively remove the data read from the buffer. */
1327:./FreeRTOS/stream_buffer.c ****     xTail += xCount;
1328:./FreeRTOS/stream_buffer.c **** 
1329:./FreeRTOS/stream_buffer.c ****     if( xTail >= pxStreamBuffer->xLength )
1330:./FreeRTOS/stream_buffer.c ****     {
1331:./FreeRTOS/stream_buffer.c ****         xTail -= pxStreamBuffer->xLength;
1332:./FreeRTOS/stream_buffer.c ****     }
1333:./FreeRTOS/stream_buffer.c **** 
1334:./FreeRTOS/stream_buffer.c ****     return xTail;
1335:./FreeRTOS/stream_buffer.c **** }
1336:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
1337:./FreeRTOS/stream_buffer.c **** 
1338:./FreeRTOS/stream_buffer.c **** static size_t prvBytesInBuffer( const StreamBuffer_t * const pxStreamBuffer )
1339:./FreeRTOS/stream_buffer.c **** {
  27              		.loc 1 1339 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 25


  31              		@ link register save eliminated.
1340:./FreeRTOS/stream_buffer.c **** /* Returns the distance between xTail and xHead. */
1341:./FreeRTOS/stream_buffer.c ****     size_t xCount;
  32              		.loc 1 1341 5 view .LVU1
1342:./FreeRTOS/stream_buffer.c **** 
1343:./FreeRTOS/stream_buffer.c ****     xCount = pxStreamBuffer->xLength + pxStreamBuffer->xHead;
  33              		.loc 1 1343 5 view .LVU2
  34              		.loc 1 1343 28 is_stmt 0 view .LVU3
  35 0000 8268     		ldr	r2, [r0, #8]
  36              		.loc 1 1343 54 view .LVU4
  37 0002 4368     		ldr	r3, [r0, #4]
  38              		.loc 1 1343 12 view .LVU5
  39 0004 1344     		add	r3, r3, r2
  40              	.LVL1:
1344:./FreeRTOS/stream_buffer.c ****     xCount -= pxStreamBuffer->xTail;
  41              		.loc 1 1344 5 is_stmt 1 view .LVU6
  42              		.loc 1 1344 29 is_stmt 0 view .LVU7
  43 0006 0068     		ldr	r0, [r0]
  44              	.LVL2:
  45              		.loc 1 1344 12 view .LVU8
  46 0008 181A     		subs	r0, r3, r0
  47              	.LVL3:
1345:./FreeRTOS/stream_buffer.c **** 
1346:./FreeRTOS/stream_buffer.c ****     if( xCount >= pxStreamBuffer->xLength )
  48              		.loc 1 1346 5 is_stmt 1 view .LVU9
  49              		.loc 1 1346 7 is_stmt 0 view .LVU10
  50 000a 8242     		cmp	r2, r0
  51 000c 00D8     		bhi	.L1
1347:./FreeRTOS/stream_buffer.c ****     {
1348:./FreeRTOS/stream_buffer.c ****         xCount -= pxStreamBuffer->xLength;
  52              		.loc 1 1348 9 is_stmt 1 view .LVU11
  53              		.loc 1 1348 16 is_stmt 0 view .LVU12
  54 000e 801A     		subs	r0, r0, r2
  55              	.LVL4:
1349:./FreeRTOS/stream_buffer.c ****     }
1350:./FreeRTOS/stream_buffer.c ****     else
1351:./FreeRTOS/stream_buffer.c ****     {
1352:./FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
  56              		.loc 1 1352 33 is_stmt 1 view .LVU13
1353:./FreeRTOS/stream_buffer.c ****     }
1354:./FreeRTOS/stream_buffer.c **** 
1355:./FreeRTOS/stream_buffer.c ****     return xCount;
  57              		.loc 1 1355 5 view .LVU14
  58              	.L1:
1356:./FreeRTOS/stream_buffer.c **** }
  59              		.loc 1 1356 1 is_stmt 0 view .LVU15
  60 0010 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE53:
  64              		.section	.text.prvInitialiseNewStreamBuffer,"ax",%progbits
  65              		.align	1
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  70              	prvInitialiseNewStreamBuffer:
  71              	.LVL5:
  72              	.LFB54:
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 26


1357:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
1358:./FreeRTOS/stream_buffer.c **** 
1359:./FreeRTOS/stream_buffer.c **** static void prvInitialiseNewStreamBuffer( StreamBuffer_t * const pxStreamBuffer,
1360:./FreeRTOS/stream_buffer.c ****                                           uint8_t * const pucBuffer,
1361:./FreeRTOS/stream_buffer.c ****                                           size_t xBufferSizeBytes,
1362:./FreeRTOS/stream_buffer.c ****                                           size_t xTriggerLevelBytes,
1363:./FreeRTOS/stream_buffer.c ****                                           uint8_t ucFlags,
1364:./FreeRTOS/stream_buffer.c ****                                           StreamBufferCallbackFunction_t pxSendCompletedCallback,
1365:./FreeRTOS/stream_buffer.c ****                                           StreamBufferCallbackFunction_t pxReceiveCompletedCallback
1366:./FreeRTOS/stream_buffer.c **** {
  73              		.loc 1 1366 1 is_stmt 1 view -0
  74              		.cfi_startproc
  75              		@ args = 12, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		.loc 1 1366 1 is_stmt 0 view .LVU17
  78 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  79              	.LCFI0:
  80              		.cfi_def_cfa_offset 24
  81              		.cfi_offset 3, -24
  82              		.cfi_offset 4, -20
  83              		.cfi_offset 5, -16
  84              		.cfi_offset 6, -12
  85              		.cfi_offset 7, -8
  86              		.cfi_offset 14, -4
  87 0002 0446     		mov	r4, r0
  88 0004 0F46     		mov	r7, r1
  89 0006 1646     		mov	r6, r2
  90 0008 1D46     		mov	r5, r3
1367:./FreeRTOS/stream_buffer.c ****     /* Assert here is deliberately writing to the entire buffer to ensure it can
1368:./FreeRTOS/stream_buffer.c ****      * be written to without generating exceptions, and is setting the buffer to a
1369:./FreeRTOS/stream_buffer.c ****      * known value to assist in development/debugging. */
1370:./FreeRTOS/stream_buffer.c ****     #if ( configASSERT_DEFINED == 1 )
1371:./FreeRTOS/stream_buffer.c ****     {
1372:./FreeRTOS/stream_buffer.c ****         /* The value written just has to be identifiable when looking at the
1373:./FreeRTOS/stream_buffer.c ****          * memory.  Don't use 0xA5 as that is the stack fill value and could
1374:./FreeRTOS/stream_buffer.c ****          * result in confusion as to what is actually being observed. */
1375:./FreeRTOS/stream_buffer.c ****         const BaseType_t xWriteValue = 0x55;
1376:./FreeRTOS/stream_buffer.c ****         configASSERT( memset( pucBuffer, ( int ) xWriteValue, xBufferSizeBytes ) == pucBuffer );
1377:./FreeRTOS/stream_buffer.c ****     } /*lint !e529 !e438 xWriteValue is only used if configASSERT() is defined. */
1378:./FreeRTOS/stream_buffer.c ****     #endif
1379:./FreeRTOS/stream_buffer.c **** 
1380:./FreeRTOS/stream_buffer.c ****     ( void ) memset( ( void * ) pxStreamBuffer, 0x00, sizeof( StreamBuffer_t ) ); /*lint !e9087 mem
  91              		.loc 1 1380 5 is_stmt 1 view .LVU18
  92              		.loc 1 1380 14 is_stmt 0 view .LVU19
  93 000a 2022     		movs	r2, #32
  94              	.LVL6:
  95              		.loc 1 1380 14 view .LVU20
  96 000c 0021     		movs	r1, #0
  97              	.LVL7:
  98              		.loc 1 1380 14 view .LVU21
  99 000e FFF7FEFF 		bl	memset
 100              	.LVL8:
1381:./FreeRTOS/stream_buffer.c ****     pxStreamBuffer->pucBuffer = pucBuffer;
 101              		.loc 1 1381 5 is_stmt 1 view .LVU22
 102              		.loc 1 1381 31 is_stmt 0 view .LVU23
 103 0012 A761     		str	r7, [r4, #24]
1382:./FreeRTOS/stream_buffer.c ****     pxStreamBuffer->xLength = xBufferSizeBytes;
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 27


 104              		.loc 1 1382 5 is_stmt 1 view .LVU24
 105              		.loc 1 1382 29 is_stmt 0 view .LVU25
 106 0014 A660     		str	r6, [r4, #8]
1383:./FreeRTOS/stream_buffer.c ****     pxStreamBuffer->xTriggerLevelBytes = xTriggerLevelBytes;
 107              		.loc 1 1383 5 is_stmt 1 view .LVU26
 108              		.loc 1 1383 40 is_stmt 0 view .LVU27
 109 0016 E560     		str	r5, [r4, #12]
1384:./FreeRTOS/stream_buffer.c ****     pxStreamBuffer->ucFlags = ucFlags;
 110              		.loc 1 1384 5 is_stmt 1 view .LVU28
 111              		.loc 1 1384 29 is_stmt 0 view .LVU29
 112 0018 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 113 001c 2377     		strb	r3, [r4, #28]
1385:./FreeRTOS/stream_buffer.c ****     #if ( configUSE_SB_COMPLETED_CALLBACK == 1 )
1386:./FreeRTOS/stream_buffer.c ****     {
1387:./FreeRTOS/stream_buffer.c ****         pxStreamBuffer->pxSendCompletedCallback = pxSendCompletedCallback;
1388:./FreeRTOS/stream_buffer.c ****         pxStreamBuffer->pxReceiveCompletedCallback = pxReceiveCompletedCallback;
1389:./FreeRTOS/stream_buffer.c ****     }
1390:./FreeRTOS/stream_buffer.c ****     #else
1391:./FreeRTOS/stream_buffer.c ****     {
1392:./FreeRTOS/stream_buffer.c ****         ( void ) pxSendCompletedCallback;
 114              		.loc 1 1392 9 is_stmt 1 view .LVU30
1393:./FreeRTOS/stream_buffer.c ****         ( void ) pxReceiveCompletedCallback;
 115              		.loc 1 1393 9 view .LVU31
1394:./FreeRTOS/stream_buffer.c ****     }
1395:./FreeRTOS/stream_buffer.c ****     #endif
1396:./FreeRTOS/stream_buffer.c **** }
 116              		.loc 1 1396 1 is_stmt 0 view .LVU32
 117 001e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 118              		.loc 1 1396 1 view .LVU33
 119              		.cfi_endproc
 120              	.LFE54:
 122              		.section	.text.prvWriteBytesToBuffer,"ax",%progbits
 123              		.align	1
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 128              	prvWriteBytesToBuffer:
 129              	.LVL9:
 130              	.LFB51:
1252:./FreeRTOS/stream_buffer.c ****     size_t xFirstLength;
 131              		.loc 1 1252 1 is_stmt 1 view -0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
1252:./FreeRTOS/stream_buffer.c ****     size_t xFirstLength;
 135              		.loc 1 1252 1 is_stmt 0 view .LVU35
 136 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 137              	.LCFI1:
 138              		.cfi_def_cfa_offset 24
 139              		.cfi_offset 4, -24
 140              		.cfi_offset 5, -20
 141              		.cfi_offset 6, -16
 142              		.cfi_offset 7, -12
 143              		.cfi_offset 8, -8
 144              		.cfi_offset 14, -4
 145 0004 0646     		mov	r6, r0
 146 0006 8846     		mov	r8, r1
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 28


 147 0008 1746     		mov	r7, r2
 148 000a 1C46     		mov	r4, r3
1253:./FreeRTOS/stream_buffer.c **** 
 149              		.loc 1 1253 5 is_stmt 1 view .LVU36
1255:./FreeRTOS/stream_buffer.c **** 
 150              		.loc 1 1255 42 view .LVU37
1260:./FreeRTOS/stream_buffer.c **** 
 151              		.loc 1 1260 5 view .LVU38
1260:./FreeRTOS/stream_buffer.c **** 
 152              		.loc 1 1260 20 is_stmt 0 view .LVU39
 153 000c 8568     		ldr	r5, [r0, #8]
 154 000e ED1A     		subs	r5, r5, r3
1260:./FreeRTOS/stream_buffer.c **** 
 155              		.loc 1 1260 18 view .LVU40
 156 0010 9542     		cmp	r5, r2
 157 0012 28BF     		it	cs
 158 0014 1546     		movcs	r5, r2
 159              	.LVL10:
1263:./FreeRTOS/stream_buffer.c ****     ( void ) memcpy( ( void * ) ( &( pxStreamBuffer->pucBuffer[ xHead ] ) ), ( const void * ) pucDa
 160              		.loc 1 1263 72 is_stmt 1 view .LVU41
1264:./FreeRTOS/stream_buffer.c **** 
 161              		.loc 1 1264 5 view .LVU42
1264:./FreeRTOS/stream_buffer.c **** 
 162              		.loc 1 1264 52 is_stmt 0 view .LVU43
 163 0016 8069     		ldr	r0, [r0, #24]
 164              	.LVL11:
1264:./FreeRTOS/stream_buffer.c **** 
 165              		.loc 1 1264 14 view .LVU44
 166 0018 2A46     		mov	r2, r5
 167              	.LVL12:
1264:./FreeRTOS/stream_buffer.c **** 
 168              		.loc 1 1264 14 view .LVU45
 169 001a 1844     		add	r0, r0, r3
 170 001c FFF7FEFF 		bl	memcpy
 171              	.LVL13:
1268:./FreeRTOS/stream_buffer.c ****     {
 172              		.loc 1 1268 5 is_stmt 1 view .LVU46
1268:./FreeRTOS/stream_buffer.c ****     {
 173              		.loc 1 1268 7 is_stmt 0 view .LVU47
 174 0020 AF42     		cmp	r7, r5
 175 0022 06D8     		bhi	.L9
 176              	.L6:
1276:./FreeRTOS/stream_buffer.c ****     }
 177              		.loc 1 1276 33 is_stmt 1 view .LVU48
1279:./FreeRTOS/stream_buffer.c **** 
 178              		.loc 1 1279 5 view .LVU49
1279:./FreeRTOS/stream_buffer.c **** 
 179              		.loc 1 1279 11 is_stmt 0 view .LVU50
 180 0024 E019     		adds	r0, r4, r7
 181              	.LVL14:
1281:./FreeRTOS/stream_buffer.c ****     {
 182              		.loc 1 1281 5 is_stmt 1 view .LVU51
1281:./FreeRTOS/stream_buffer.c ****     {
 183              		.loc 1 1281 32 is_stmt 0 view .LVU52
 184 0026 B368     		ldr	r3, [r6, #8]
1281:./FreeRTOS/stream_buffer.c ****     {
 185              		.loc 1 1281 7 view .LVU53
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 29


 186 0028 8342     		cmp	r3, r0
 187 002a 00D8     		bhi	.L5
1283:./FreeRTOS/stream_buffer.c ****     }
 188              		.loc 1 1283 9 is_stmt 1 view .LVU54
1283:./FreeRTOS/stream_buffer.c ****     }
 189              		.loc 1 1283 15 is_stmt 0 view .LVU55
 190 002c C01A     		subs	r0, r0, r3
 191              	.LVL15:
1287:./FreeRTOS/stream_buffer.c ****     }
 192              		.loc 1 1287 33 is_stmt 1 view .LVU56
1290:./FreeRTOS/stream_buffer.c **** }
 193              		.loc 1 1290 5 view .LVU57
 194              	.L5:
1291:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 195              		.loc 1 1291 1 is_stmt 0 view .LVU58
 196 002e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 197              	.LVL16:
 198              	.L9:
1271:./FreeRTOS/stream_buffer.c ****         ( void ) memcpy( ( void * ) pxStreamBuffer->pucBuffer, ( const void * ) &( pucData[ xFirstL
 199              		.loc 1 1271 77 is_stmt 1 view .LVU59
1272:./FreeRTOS/stream_buffer.c ****     }
 200              		.loc 1 1272 9 view .LVU60
1272:./FreeRTOS/stream_buffer.c ****     }
 201              		.loc 1 1272 18 is_stmt 0 view .LVU61
 202 0032 7A1B     		subs	r2, r7, r5
 203 0034 08EB0501 		add	r1, r8, r5
 204 0038 B069     		ldr	r0, [r6, #24]
 205 003a FFF7FEFF 		bl	memcpy
 206              	.LVL17:
 207 003e F1E7     		b	.L6
 208              		.cfi_endproc
 209              	.LFE51:
 211              		.section	.text.prvWriteMessageToBuffer,"ax",%progbits
 212              		.align	1
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 217              	prvWriteMessageToBuffer:
 218              	.LVL18:
 219              	.LFB42:
 829:./FreeRTOS/stream_buffer.c ****     size_t xNextHead = pxStreamBuffer->xHead;
 220              		.loc 1 829 1 is_stmt 1 view -0
 221              		.cfi_startproc
 222              		@ args = 4, pretend = 0, frame = 8
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 829:./FreeRTOS/stream_buffer.c ****     size_t xNextHead = pxStreamBuffer->xHead;
 224              		.loc 1 829 1 is_stmt 0 view .LVU63
 225 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 226              	.LCFI2:
 227              		.cfi_def_cfa_offset 20
 228              		.cfi_offset 4, -20
 229              		.cfi_offset 5, -16
 230              		.cfi_offset 6, -12
 231              		.cfi_offset 7, -8
 232              		.cfi_offset 14, -4
 233 0002 83B0     		sub	sp, sp, #12
 234              	.LCFI3:
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 30


 235              		.cfi_def_cfa_offset 32
 236 0004 0546     		mov	r5, r0
 237 0006 0F46     		mov	r7, r1
 238 0008 1646     		mov	r6, r2
 239 000a 1C46     		mov	r4, r3
 830:./FreeRTOS/stream_buffer.c ****     configMESSAGE_BUFFER_LENGTH_TYPE xMessageLength;
 240              		.loc 1 830 5 is_stmt 1 view .LVU64
 830:./FreeRTOS/stream_buffer.c ****     configMESSAGE_BUFFER_LENGTH_TYPE xMessageLength;
 241              		.loc 1 830 12 is_stmt 0 view .LVU65
 242 000c 4368     		ldr	r3, [r0, #4]
 243              	.LVL19:
 831:./FreeRTOS/stream_buffer.c **** 
 244              		.loc 1 831 5 is_stmt 1 view .LVU66
 833:./FreeRTOS/stream_buffer.c ****     {
 245              		.loc 1 833 5 view .LVU67
 833:./FreeRTOS/stream_buffer.c ****     {
 246              		.loc 1 833 25 is_stmt 0 view .LVU68
 247 000e 027F     		ldrb	r2, [r0, #28]	@ zero_extendqisi2
 248              	.LVL20:
 833:./FreeRTOS/stream_buffer.c ****     {
 249              		.loc 1 833 7 view .LVU69
 250 0010 12F0010F 		tst	r2, #1
 251 0014 0DD0     		beq	.L11
 838:./FreeRTOS/stream_buffer.c **** 
 252              		.loc 1 838 9 is_stmt 1 view .LVU70
 838:./FreeRTOS/stream_buffer.c **** 
 253              		.loc 1 838 24 is_stmt 0 view .LVU71
 254 0016 0196     		str	r6, [sp, #4]
 841:./FreeRTOS/stream_buffer.c **** 
 255              		.loc 1 841 70 is_stmt 1 view .LVU72
 843:./FreeRTOS/stream_buffer.c ****         {
 256              		.loc 1 843 9 view .LVU73
 843:./FreeRTOS/stream_buffer.c ****         {
 257              		.loc 1 843 11 is_stmt 0 view .LVU74
 258 0018 089A     		ldr	r2, [sp, #32]
 259 001a 9442     		cmp	r4, r2
 260 001c 01D2     		bcs	.L16
 853:./FreeRTOS/stream_buffer.c ****         }
 261              		.loc 1 853 30 view .LVU75
 262 001e 0024     		movs	r4, #0
 263              	.LVL21:
 870:./FreeRTOS/stream_buffer.c **** }
 264              		.loc 1 870 5 is_stmt 1 view .LVU76
 870:./FreeRTOS/stream_buffer.c **** }
 265              		.loc 1 870 12 is_stmt 0 view .LVU77
 266 0020 0BE0     		b	.L10
 267              	.LVL22:
 268              	.L16:
 848:./FreeRTOS/stream_buffer.c ****         }
 269              		.loc 1 848 13 is_stmt 1 view .LVU78
 848:./FreeRTOS/stream_buffer.c ****         }
 270              		.loc 1 848 25 is_stmt 0 view .LVU79
 271 0022 0422     		movs	r2, #4
 272 0024 0DEB0201 		add	r1, sp, r2
 273              	.LVL23:
 848:./FreeRTOS/stream_buffer.c ****         }
 274              		.loc 1 848 25 view .LVU80
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 31


 275 0028 FFF7FEFF 		bl	prvWriteBytesToBuffer
 276              	.LVL24:
 848:./FreeRTOS/stream_buffer.c ****         }
 277              		.loc 1 848 25 view .LVU81
 278 002c 0346     		mov	r3, r0
 279              	.LVL25:
 848:./FreeRTOS/stream_buffer.c ****         }
 280              		.loc 1 848 25 view .LVU82
 281 002e 3446     		mov	r4, r6
 282              	.LVL26:
 848:./FreeRTOS/stream_buffer.c ****         }
 283              		.loc 1 848 25 view .LVU83
 284 0030 02E0     		b	.L13
 285              	.LVL27:
 286              	.L11:
 861:./FreeRTOS/stream_buffer.c ****     }
 287              		.loc 1 861 9 is_stmt 1 view .LVU84
 861:./FreeRTOS/stream_buffer.c ****     }
 288              		.loc 1 861 26 is_stmt 0 view .LVU85
 289 0032 B442     		cmp	r4, r6
 290 0034 28BF     		it	cs
 291 0036 3446     		movcs	r4, r6
 292              	.LVL28:
 293              	.L13:
 864:./FreeRTOS/stream_buffer.c ****     {
 294              		.loc 1 864 5 is_stmt 1 view .LVU86
 864:./FreeRTOS/stream_buffer.c ****     {
 295              		.loc 1 864 7 is_stmt 0 view .LVU87
 296 0038 14B9     		cbnz	r4, .L17
 297              	.LVL29:
 298              	.L10:
 871:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 299              		.loc 1 871 1 view .LVU88
 300 003a 2046     		mov	r0, r4
 301 003c 03B0     		add	sp, sp, #12
 302              	.LCFI4:
 303              		.cfi_remember_state
 304              		.cfi_def_cfa_offset 20
 305              		@ sp needed
 306 003e F0BD     		pop	{r4, r5, r6, r7, pc}
 307              	.LVL30:
 308              	.L17:
 309              	.LCFI5:
 310              		.cfi_restore_state
 867:./FreeRTOS/stream_buffer.c ****     }
 311              		.loc 1 867 9 is_stmt 1 view .LVU89
 867:./FreeRTOS/stream_buffer.c ****     }
 312              		.loc 1 867 33 is_stmt 0 view .LVU90
 313 0040 2246     		mov	r2, r4
 314 0042 3946     		mov	r1, r7
 315 0044 2846     		mov	r0, r5
 316 0046 FFF7FEFF 		bl	prvWriteBytesToBuffer
 317              	.LVL31:
 867:./FreeRTOS/stream_buffer.c ****     }
 318              		.loc 1 867 31 view .LVU91
 319 004a 6860     		str	r0, [r5, #4]
 320 004c F5E7     		b	.L10
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 32


 321              		.cfi_endproc
 322              	.LFE42:
 324              		.section	.text.prvReadBytesFromBuffer,"ax",%progbits
 325              		.align	1
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 330              	prvReadBytesFromBuffer:
 331              	.LVL32:
 332              	.LFB52:
1298:./FreeRTOS/stream_buffer.c ****     size_t xFirstLength;
 333              		.loc 1 1298 1 is_stmt 1 view -0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
1298:./FreeRTOS/stream_buffer.c ****     size_t xFirstLength;
 337              		.loc 1 1298 1 is_stmt 0 view .LVU93
 338 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 339              	.LCFI6:
 340              		.cfi_def_cfa_offset 24
 341              		.cfi_offset 4, -24
 342              		.cfi_offset 5, -20
 343              		.cfi_offset 6, -16
 344              		.cfi_offset 7, -12
 345              		.cfi_offset 8, -8
 346              		.cfi_offset 14, -4
 347 0004 0646     		mov	r6, r0
 348 0006 8846     		mov	r8, r1
 349 0008 1746     		mov	r7, r2
 350 000a 1C46     		mov	r4, r3
1299:./FreeRTOS/stream_buffer.c **** 
 351              		.loc 1 1299 5 is_stmt 1 view .LVU94
1301:./FreeRTOS/stream_buffer.c **** 
 352              		.loc 1 1301 43 view .LVU95
1306:./FreeRTOS/stream_buffer.c **** 
 353              		.loc 1 1306 5 view .LVU96
1306:./FreeRTOS/stream_buffer.c **** 
 354              		.loc 1 1306 20 is_stmt 0 view .LVU97
 355 000c 8568     		ldr	r5, [r0, #8]
 356 000e ED1A     		subs	r5, r5, r3
1306:./FreeRTOS/stream_buffer.c **** 
 357              		.loc 1 1306 18 view .LVU98
 358 0010 9542     		cmp	r5, r2
 359 0012 28BF     		it	cs
 360 0014 1546     		movcs	r5, r2
 361              	.LVL33:
1310:./FreeRTOS/stream_buffer.c ****     configASSERT( ( xTail + xFirstLength ) <= pxStreamBuffer->xLength );
 362              		.loc 1 1310 43 is_stmt 1 view .LVU99
1311:./FreeRTOS/stream_buffer.c ****     ( void ) memcpy( ( void * ) pucData, ( const void * ) &( pxStreamBuffer->pucBuffer[ xTail ] ), 
 363              		.loc 1 1311 72 view .LVU100
1312:./FreeRTOS/stream_buffer.c **** 
 364              		.loc 1 1312 5 view .LVU101
1312:./FreeRTOS/stream_buffer.c **** 
 365              		.loc 1 1312 76 is_stmt 0 view .LVU102
 366 0016 8169     		ldr	r1, [r0, #24]
 367              	.LVL34:
1312:./FreeRTOS/stream_buffer.c **** 
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 33


 368              		.loc 1 1312 14 view .LVU103
 369 0018 2A46     		mov	r2, r5
 370              	.LVL35:
1312:./FreeRTOS/stream_buffer.c **** 
 371              		.loc 1 1312 14 view .LVU104
 372 001a 1944     		add	r1, r1, r3
 373 001c 4046     		mov	r0, r8
 374              	.LVL36:
1312:./FreeRTOS/stream_buffer.c **** 
 375              		.loc 1 1312 14 view .LVU105
 376 001e FFF7FEFF 		bl	memcpy
 377              	.LVL37:
1316:./FreeRTOS/stream_buffer.c ****     {
 378              		.loc 1 1316 5 is_stmt 1 view .LVU106
1316:./FreeRTOS/stream_buffer.c ****     {
 379              		.loc 1 1316 7 is_stmt 0 view .LVU107
 380 0022 AF42     		cmp	r7, r5
 381 0024 06D8     		bhi	.L22
 382              	.L19:
1323:./FreeRTOS/stream_buffer.c ****     }
 383              		.loc 1 1323 33 is_stmt 1 view .LVU108
1327:./FreeRTOS/stream_buffer.c **** 
 384              		.loc 1 1327 5 view .LVU109
1327:./FreeRTOS/stream_buffer.c **** 
 385              		.loc 1 1327 11 is_stmt 0 view .LVU110
 386 0026 E019     		adds	r0, r4, r7
 387              	.LVL38:
1329:./FreeRTOS/stream_buffer.c ****     {
 388              		.loc 1 1329 5 is_stmt 1 view .LVU111
1329:./FreeRTOS/stream_buffer.c ****     {
 389              		.loc 1 1329 32 is_stmt 0 view .LVU112
 390 0028 B368     		ldr	r3, [r6, #8]
1329:./FreeRTOS/stream_buffer.c ****     {
 391              		.loc 1 1329 7 view .LVU113
 392 002a 8342     		cmp	r3, r0
 393 002c 00D8     		bhi	.L18
1331:./FreeRTOS/stream_buffer.c ****     }
 394              		.loc 1 1331 9 is_stmt 1 view .LVU114
1331:./FreeRTOS/stream_buffer.c ****     }
 395              		.loc 1 1331 15 is_stmt 0 view .LVU115
 396 002e C01A     		subs	r0, r0, r3
 397              	.LVL39:
1334:./FreeRTOS/stream_buffer.c **** }
 398              		.loc 1 1334 5 is_stmt 1 view .LVU116
 399              	.L18:
1335:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 400              		.loc 1 1335 1 is_stmt 0 view .LVU117
 401 0030 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 402              	.LVL40:
 403              	.L22:
1319:./FreeRTOS/stream_buffer.c ****     }
 404              		.loc 1 1319 9 is_stmt 1 view .LVU118
1319:./FreeRTOS/stream_buffer.c ****     }
 405              		.loc 1 1319 18 is_stmt 0 view .LVU119
 406 0034 7A1B     		subs	r2, r7, r5
 407 0036 B169     		ldr	r1, [r6, #24]
 408 0038 08EB0500 		add	r0, r8, r5
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 34


 409 003c FFF7FEFF 		bl	memcpy
 410              	.LVL41:
 411 0040 F1E7     		b	.L19
 412              		.cfi_endproc
 413              	.LFE52:
 415              		.section	.text.prvReadMessageFromBuffer,"ax",%progbits
 416              		.align	1
 417              		.syntax unified
 418              		.thumb
 419              		.thumb_func
 421              	prvReadMessageFromBuffer:
 422              	.LVL42:
 423              	.LFB46:
1079:./FreeRTOS/stream_buffer.c ****     size_t xCount, xNextMessageLength;
 424              		.loc 1 1079 1 is_stmt 1 view -0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 8
 427              		@ frame_needed = 0, uses_anonymous_args = 0
1079:./FreeRTOS/stream_buffer.c ****     size_t xCount, xNextMessageLength;
 428              		.loc 1 1079 1 is_stmt 0 view .LVU121
 429 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 430              	.LCFI7:
 431              		.cfi_def_cfa_offset 20
 432              		.cfi_offset 4, -20
 433              		.cfi_offset 5, -16
 434              		.cfi_offset 6, -12
 435              		.cfi_offset 7, -8
 436              		.cfi_offset 14, -4
 437 0002 83B0     		sub	sp, sp, #12
 438              	.LCFI8:
 439              		.cfi_def_cfa_offset 32
 440 0004 0546     		mov	r5, r0
 441 0006 0F46     		mov	r7, r1
 442 0008 1646     		mov	r6, r2
 443 000a 1C46     		mov	r4, r3
1080:./FreeRTOS/stream_buffer.c ****     configMESSAGE_BUFFER_LENGTH_TYPE xTempNextMessageLength;
 444              		.loc 1 1080 5 is_stmt 1 view .LVU122
1081:./FreeRTOS/stream_buffer.c ****     size_t xNextTail = pxStreamBuffer->xTail;
 445              		.loc 1 1081 5 view .LVU123
1082:./FreeRTOS/stream_buffer.c **** 
 446              		.loc 1 1082 5 view .LVU124
1082:./FreeRTOS/stream_buffer.c **** 
 447              		.loc 1 1082 12 is_stmt 0 view .LVU125
 448 000c 0368     		ldr	r3, [r0]
 449              	.LVL43:
1084:./FreeRTOS/stream_buffer.c ****     {
 450              		.loc 1 1084 5 is_stmt 1 view .LVU126
1084:./FreeRTOS/stream_buffer.c ****     {
 451              		.loc 1 1084 25 is_stmt 0 view .LVU127
 452 000e 027F     		ldrb	r2, [r0, #28]	@ zero_extendqisi2
 453              	.LVL44:
1084:./FreeRTOS/stream_buffer.c ****     {
 454              		.loc 1 1084 7 view .LVU128
 455 0010 12F0010F 		tst	r2, #1
 456 0014 06D1     		bne	.L28
 457              	.LVL45:
 458              	.L24:
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 35


1115:./FreeRTOS/stream_buffer.c **** 
 459              		.loc 1 1115 5 is_stmt 1 view .LVU129
1115:./FreeRTOS/stream_buffer.c **** 
 460              		.loc 1 1115 12 is_stmt 0 view .LVU130
 461 0016 B442     		cmp	r4, r6
 462 0018 28BF     		it	cs
 463 001a 3446     		movcs	r4, r6
 464              	.LVL46:
1117:./FreeRTOS/stream_buffer.c ****     {
 465              		.loc 1 1117 5 is_stmt 1 view .LVU131
1117:./FreeRTOS/stream_buffer.c ****     {
 466              		.loc 1 1117 7 is_stmt 0 view .LVU132
 467 001c 84B9     		cbnz	r4, .L29
 468              	.LVL47:
 469              	.L23:
1124:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 470              		.loc 1 1124 1 view .LVU133
 471 001e 2046     		mov	r0, r4
 472 0020 03B0     		add	sp, sp, #12
 473              	.LCFI9:
 474              		.cfi_remember_state
 475              		.cfi_def_cfa_offset 20
 476              		@ sp needed
 477 0022 F0BD     		pop	{r4, r5, r6, r7, pc}
 478              	.LVL48:
 479              	.L28:
 480              	.LCFI10:
 481              		.cfi_restore_state
1088:./FreeRTOS/stream_buffer.c ****         xNextMessageLength = ( size_t ) xTempNextMessageLength;
 482              		.loc 1 1088 9 is_stmt 1 view .LVU134
1088:./FreeRTOS/stream_buffer.c ****         xNextMessageLength = ( size_t ) xTempNextMessageLength;
 483              		.loc 1 1088 21 is_stmt 0 view .LVU135
 484 0024 0422     		movs	r2, #4
 485 0026 0DEB0201 		add	r1, sp, r2
 486              	.LVL49:
1088:./FreeRTOS/stream_buffer.c ****         xNextMessageLength = ( size_t ) xTempNextMessageLength;
 487              		.loc 1 1088 21 view .LVU136
 488 002a FFF7FEFF 		bl	prvReadBytesFromBuffer
 489              	.LVL50:
1088:./FreeRTOS/stream_buffer.c ****         xNextMessageLength = ( size_t ) xTempNextMessageLength;
 490              		.loc 1 1088 21 view .LVU137
 491 002e 0346     		mov	r3, r0
 492              	.LVL51:
1089:./FreeRTOS/stream_buffer.c **** 
 493              		.loc 1 1089 9 is_stmt 1 view .LVU138
1089:./FreeRTOS/stream_buffer.c **** 
 494              		.loc 1 1089 28 is_stmt 0 view .LVU139
 495 0030 019A     		ldr	r2, [sp, #4]
 496              	.LVL52:
1093:./FreeRTOS/stream_buffer.c **** 
 497              		.loc 1 1093 9 is_stmt 1 view .LVU140
1093:./FreeRTOS/stream_buffer.c **** 
 498              		.loc 1 1093 25 is_stmt 0 view .LVU141
 499 0032 043C     		subs	r4, r4, #4
 500              	.LVL53:
1097:./FreeRTOS/stream_buffer.c ****         {
 501              		.loc 1 1097 9 is_stmt 1 view .LVU142
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 36


1097:./FreeRTOS/stream_buffer.c ****         {
 502              		.loc 1 1097 11 is_stmt 0 view .LVU143
 503 0034 9642     		cmp	r6, r2
 504 0036 01D3     		bcc	.L26
1089:./FreeRTOS/stream_buffer.c **** 
 505              		.loc 1 1089 28 view .LVU144
 506 0038 1646     		mov	r6, r2
 507              	.LVL54:
1089:./FreeRTOS/stream_buffer.c **** 
 508              		.loc 1 1089 28 view .LVU145
 509 003a ECE7     		b	.L24
 510              	.LVL55:
 511              	.L26:
1100:./FreeRTOS/stream_buffer.c ****         }
 512              		.loc 1 1100 32 view .LVU146
 513 003c 0026     		movs	r6, #0
 514              	.LVL56:
1100:./FreeRTOS/stream_buffer.c ****         }
 515              		.loc 1 1100 32 view .LVU147
 516 003e EAE7     		b	.L24
 517              	.LVL57:
 518              	.L29:
1120:./FreeRTOS/stream_buffer.c ****     }
 519              		.loc 1 1120 9 is_stmt 1 view .LVU148
1120:./FreeRTOS/stream_buffer.c ****     }
 520              		.loc 1 1120 33 is_stmt 0 view .LVU149
 521 0040 2246     		mov	r2, r4
 522 0042 3946     		mov	r1, r7
 523 0044 2846     		mov	r0, r5
 524 0046 FFF7FEFF 		bl	prvReadBytesFromBuffer
 525              	.LVL58:
1120:./FreeRTOS/stream_buffer.c ****     }
 526              		.loc 1 1120 31 view .LVU150
 527 004a 2860     		str	r0, [r5]
1123:./FreeRTOS/stream_buffer.c **** }
 528              		.loc 1 1123 5 is_stmt 1 view .LVU151
1123:./FreeRTOS/stream_buffer.c **** }
 529              		.loc 1 1123 12 is_stmt 0 view .LVU152
 530 004c E7E7     		b	.L23
 531              		.cfi_endproc
 532              	.LFE46:
 534              		.section	.text.xStreamBufferGenericCreate,"ax",%progbits
 535              		.align	1
 536              		.global	xStreamBufferGenericCreate
 537              		.syntax unified
 538              		.thumb
 539              		.thumb_func
 541              	xStreamBufferGenericCreate:
 542              	.LVL59:
 543              	.LFB34:
 326:./FreeRTOS/stream_buffer.c ****         uint8_t * pucAllocatedMemory;
 544              		.loc 1 326 5 is_stmt 1 view -0
 545              		.cfi_startproc
 546              		@ args = 4, pretend = 0, frame = 0
 547              		@ frame_needed = 0, uses_anonymous_args = 0
 326:./FreeRTOS/stream_buffer.c ****         uint8_t * pucAllocatedMemory;
 548              		.loc 1 326 5 is_stmt 0 view .LVU154
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 37


 549 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 550              	.LCFI11:
 551              		.cfi_def_cfa_offset 24
 552              		.cfi_offset 4, -24
 553              		.cfi_offset 5, -20
 554              		.cfi_offset 6, -16
 555              		.cfi_offset 7, -12
 556              		.cfi_offset 8, -8
 557              		.cfi_offset 14, -4
 558 0004 84B0     		sub	sp, sp, #16
 559              	.LCFI12:
 560              		.cfi_def_cfa_offset 40
 561 0006 0C46     		mov	r4, r1
 562 0008 1E46     		mov	r6, r3
 327:./FreeRTOS/stream_buffer.c ****         uint8_t ucFlags;
 563              		.loc 1 327 9 is_stmt 1 view .LVU155
 328:./FreeRTOS/stream_buffer.c **** 
 564              		.loc 1 328 9 view .LVU156
 334:./FreeRTOS/stream_buffer.c ****         {
 565              		.loc 1 334 9 view .LVU157
 334:./FreeRTOS/stream_buffer.c ****         {
 566              		.loc 1 334 11 is_stmt 0 view .LVU158
 567 000a 012A     		cmp	r2, #1
 568 000c 17D0     		beq	.L38
 343:./FreeRTOS/stream_buffer.c ****             configASSERT( xBufferSizeBytes > 0 );
 569              		.loc 1 343 21 view .LVU159
 570 000e 0027     		movs	r7, #0
 571              	.L31:
 572              	.LVL60:
 344:./FreeRTOS/stream_buffer.c ****         }
 573              		.loc 1 344 49 is_stmt 1 view .LVU160
 347:./FreeRTOS/stream_buffer.c **** 
 574              		.loc 1 347 63 view .LVU161
 351:./FreeRTOS/stream_buffer.c ****         {
 575              		.loc 1 351 9 view .LVU162
 351:./FreeRTOS/stream_buffer.c ****         {
 576              		.loc 1 351 11 is_stmt 0 view .LVU163
 577 0010 04B9     		cbnz	r4, .L32
 353:./FreeRTOS/stream_buffer.c ****         }
 578              		.loc 1 353 32 view .LVU164
 579 0012 0124     		movs	r4, #1
 580              	.L32:
 581              	.LVL61:
 364:./FreeRTOS/stream_buffer.c ****         {
 582              		.loc 1 364 9 is_stmt 1 view .LVU165
 364:./FreeRTOS/stream_buffer.c ****         {
 583              		.loc 1 364 11 is_stmt 0 view .LVU166
 584 0014 10F1220F 		cmn	r0, #34
 585 0018 13D8     		bhi	.L36
 366:./FreeRTOS/stream_buffer.c ****             pucAllocatedMemory = ( uint8_t * ) pvPortMalloc( xBufferSizeBytes + sizeof( StreamBuffe
 586              		.loc 1 366 13 is_stmt 1 view .LVU167
 366:./FreeRTOS/stream_buffer.c ****             pucAllocatedMemory = ( uint8_t * ) pvPortMalloc( xBufferSizeBytes + sizeof( StreamBuffe
 587              		.loc 1 366 29 is_stmt 0 view .LVU168
 588 001a 00F10108 		add	r8, r0, #1
 589              	.LVL62:
 367:./FreeRTOS/stream_buffer.c ****         }
 590              		.loc 1 367 13 is_stmt 1 view .LVU169
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 38


 367:./FreeRTOS/stream_buffer.c ****         }
 591              		.loc 1 367 48 is_stmt 0 view .LVU170
 592 001e 2130     		adds	r0, r0, #33
 593 0020 FFF7FEFF 		bl	pvPortMalloc
 594              	.LVL63:
 374:./FreeRTOS/stream_buffer.c ****         {
 595              		.loc 1 374 9 is_stmt 1 view .LVU171
 374:./FreeRTOS/stream_buffer.c ****         {
 596              		.loc 1 374 11 is_stmt 0 view .LVU172
 597 0024 0546     		mov	r5, r0
 598 0026 68B1     		cbz	r0, .L30
 376:./FreeRTOS/stream_buffer.c ****                                           pucAllocatedMemory + sizeof( StreamBuffer_t ), /* Storage
 599              		.loc 1 376 13 is_stmt 1 view .LVU173
 600 0028 0A9B     		ldr	r3, [sp, #40]
 601 002a 0293     		str	r3, [sp, #8]
 602 002c 0196     		str	r6, [sp, #4]
 603 002e 0097     		str	r7, [sp]
 604 0030 2346     		mov	r3, r4
 605 0032 4246     		mov	r2, r8
 606 0034 00F12001 		add	r1, r0, #32
 607 0038 FFF7FEFF 		bl	prvInitialiseNewStreamBuffer
 608              	.LVL64:
 384:./FreeRTOS/stream_buffer.c ****         }
 609              		.loc 1 384 103 view .LVU174
 610 003c 02E0     		b	.L30
 611              	.LVL65:
 612              	.L38:
 337:./FreeRTOS/stream_buffer.c ****             configASSERT( xBufferSizeBytes > sbBYTES_TO_STORE_MESSAGE_LENGTH );
 613              		.loc 1 337 21 is_stmt 0 view .LVU175
 614 003e 0127     		movs	r7, #1
 615 0040 E6E7     		b	.L31
 616              	.LVL66:
 617              	.L36:
 371:./FreeRTOS/stream_buffer.c ****         }
 618              		.loc 1 371 32 view .LVU176
 619 0042 0025     		movs	r5, #0
 620              	.LVL67:
 388:./FreeRTOS/stream_buffer.c ****         }
 621              		.loc 1 388 65 is_stmt 1 view .LVU177
 391:./FreeRTOS/stream_buffer.c ****     }
 622              		.loc 1 391 9 view .LVU178
 623              	.L30:
 392:./FreeRTOS/stream_buffer.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 624              		.loc 1 392 5 is_stmt 0 view .LVU179
 625 0044 2846     		mov	r0, r5
 626 0046 04B0     		add	sp, sp, #16
 627              	.LCFI13:
 628              		.cfi_def_cfa_offset 24
 629              		@ sp needed
 630 0048 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 392:./FreeRTOS/stream_buffer.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 631              		.loc 1 392 5 view .LVU180
 632              		.cfi_endproc
 633              	.LFE34:
 635              		.section	.text.vStreamBufferDelete,"ax",%progbits
 636              		.align	1
 637              		.global	vStreamBufferDelete
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 39


 638              		.syntax unified
 639              		.thumb
 640              		.thumb_func
 642              	vStreamBufferDelete:
 643              	.LVL68:
 644              	.LFB35:
 478:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * pxStreamBuffer = xStreamBuffer;
 645              		.loc 1 478 1 is_stmt 1 view -0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 0
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 478:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * pxStreamBuffer = xStreamBuffer;
 649              		.loc 1 478 1 is_stmt 0 view .LVU182
 650 0000 08B5     		push	{r3, lr}
 651              	.LCFI14:
 652              		.cfi_def_cfa_offset 8
 653              		.cfi_offset 3, -8
 654              		.cfi_offset 14, -4
 479:./FreeRTOS/stream_buffer.c **** 
 655              		.loc 1 479 5 is_stmt 1 view .LVU183
 656              	.LVL69:
 481:./FreeRTOS/stream_buffer.c **** 
 657              		.loc 1 481 35 view .LVU184
 483:./FreeRTOS/stream_buffer.c **** 
 658              		.loc 1 483 47 view .LVU185
 485:./FreeRTOS/stream_buffer.c ****     {
 659              		.loc 1 485 5 view .LVU186
 485:./FreeRTOS/stream_buffer.c ****     {
 660              		.loc 1 485 25 is_stmt 0 view .LVU187
 661 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 485:./FreeRTOS/stream_buffer.c ****     {
 662              		.loc 1 485 7 view .LVU188
 663 0004 13F0020F 		tst	r3, #2
 664 0008 02D1     		bne	.L40
 491:./FreeRTOS/stream_buffer.c ****         }
 665              		.loc 1 491 13 is_stmt 1 view .LVU189
 666 000a FFF7FEFF 		bl	vPortFree
 667              	.LVL70:
 668              	.L39:
 507:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 669              		.loc 1 507 1 is_stmt 0 view .LVU190
 670 000e 08BD     		pop	{r3, pc}
 671              	.LVL71:
 672              	.L40:
 505:./FreeRTOS/stream_buffer.c ****     }
 673              		.loc 1 505 9 is_stmt 1 view .LVU191
 505:./FreeRTOS/stream_buffer.c ****     }
 674              		.loc 1 505 18 is_stmt 0 view .LVU192
 675 0010 2022     		movs	r2, #32
 676 0012 0021     		movs	r1, #0
 677 0014 FFF7FEFF 		bl	memset
 678              	.LVL72:
 507:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 679              		.loc 1 507 1 view .LVU193
 680 0018 F9E7     		b	.L39
 681              		.cfi_endproc
 682              	.LFE35:
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 40


 684              		.section	.text.xStreamBufferReset,"ax",%progbits
 685              		.align	1
 686              		.global	xStreamBufferReset
 687              		.syntax unified
 688              		.thumb
 689              		.thumb_func
 691              	xStreamBufferReset:
 692              	.LVL73:
 693              	.LFB36:
 511:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 694              		.loc 1 511 1 is_stmt 1 view -0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 0
 697              		@ frame_needed = 0, uses_anonymous_args = 0
 511:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 698              		.loc 1 511 1 is_stmt 0 view .LVU195
 699 0000 10B5     		push	{r4, lr}
 700              	.LCFI15:
 701              		.cfi_def_cfa_offset 8
 702              		.cfi_offset 4, -8
 703              		.cfi_offset 14, -4
 704 0002 84B0     		sub	sp, sp, #16
 705              	.LCFI16:
 706              		.cfi_def_cfa_offset 24
 707 0004 0446     		mov	r4, r0
 512:./FreeRTOS/stream_buffer.c ****     BaseType_t xReturn = pdFAIL;
 708              		.loc 1 512 5 is_stmt 1 view .LVU196
 709              	.LVL74:
 513:./FreeRTOS/stream_buffer.c ****     StreamBufferCallbackFunction_t pxSendCallback = NULL, pxReceiveCallback = NULL;
 710              		.loc 1 513 5 view .LVU197
 514:./FreeRTOS/stream_buffer.c **** 
 711              		.loc 1 514 5 view .LVU198
 520:./FreeRTOS/stream_buffer.c **** 
 712              		.loc 1 520 35 view .LVU199
 531:./FreeRTOS/stream_buffer.c ****     {
 713              		.loc 1 531 5 view .LVU200
 714 0006 FFF7FEFF 		bl	vPortEnterCritical
 715              	.LVL75:
 533:./FreeRTOS/stream_buffer.c ****         {
 716              		.loc 1 533 9 view .LVU201
 533:./FreeRTOS/stream_buffer.c ****         {
 717              		.loc 1 533 29 is_stmt 0 view .LVU202
 718 000a 2369     		ldr	r3, [r4, #16]
 533:./FreeRTOS/stream_buffer.c ****         {
 719              		.loc 1 533 11 view .LVU203
 720 000c 2BB1     		cbz	r3, .L48
 513:./FreeRTOS/stream_buffer.c ****     StreamBufferCallbackFunction_t pxSendCallback = NULL, pxReceiveCallback = NULL;
 721              		.loc 1 513 16 view .LVU204
 722 000e 0024     		movs	r4, #0
 723              	.LVL76:
 724              	.L44:
 561:./FreeRTOS/stream_buffer.c **** 
 725              		.loc 1 561 5 is_stmt 1 view .LVU205
 726 0010 FFF7FEFF 		bl	vPortExitCritical
 727              	.LVL77:
 563:./FreeRTOS/stream_buffer.c **** }
 728              		.loc 1 563 5 view .LVU206
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 41


 564:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 729              		.loc 1 564 1 is_stmt 0 view .LVU207
 730 0014 2046     		mov	r0, r4
 731 0016 04B0     		add	sp, sp, #16
 732              	.LCFI17:
 733              		.cfi_remember_state
 734              		.cfi_def_cfa_offset 8
 735              		@ sp needed
 736 0018 10BD     		pop	{r4, pc}
 737              	.LVL78:
 738              	.L48:
 739              	.LCFI18:
 740              		.cfi_restore_state
 533:./FreeRTOS/stream_buffer.c ****         {
 741              		.loc 1 533 82 discriminator 1 view .LVU208
 742 001a 6369     		ldr	r3, [r4, #20]
 533:./FreeRTOS/stream_buffer.c ****         {
 743              		.loc 1 533 63 discriminator 1 view .LVU209
 744 001c 0BB1     		cbz	r3, .L49
 513:./FreeRTOS/stream_buffer.c ****     StreamBufferCallbackFunction_t pxSendCallback = NULL, pxReceiveCallback = NULL;
 745              		.loc 1 513 16 view .LVU210
 746 001e 0024     		movs	r4, #0
 747              	.LVL79:
 513:./FreeRTOS/stream_buffer.c ****     StreamBufferCallbackFunction_t pxSendCallback = NULL, pxReceiveCallback = NULL;
 748              		.loc 1 513 16 view .LVU211
 749 0020 F6E7     		b	.L44
 750              	.LVL80:
 751              	.L49:
 542:./FreeRTOS/stream_buffer.c ****                                           pxStreamBuffer->pucBuffer,
 752              		.loc 1 542 13 is_stmt 1 view .LVU212
 753 0022 0293     		str	r3, [sp, #8]
 754 0024 0193     		str	r3, [sp, #4]
 755 0026 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 756 0028 0093     		str	r3, [sp]
 757 002a E368     		ldr	r3, [r4, #12]
 758 002c A268     		ldr	r2, [r4, #8]
 759 002e A169     		ldr	r1, [r4, #24]
 760 0030 2046     		mov	r0, r4
 761 0032 FFF7FEFF 		bl	prvInitialiseNewStreamBuffer
 762              	.LVL81:
 556:./FreeRTOS/stream_buffer.c **** 
 763              		.loc 1 556 54 view .LVU213
 558:./FreeRTOS/stream_buffer.c ****         }
 764              		.loc 1 558 13 view .LVU214
 558:./FreeRTOS/stream_buffer.c ****         }
 765              		.loc 1 558 21 is_stmt 0 view .LVU215
 766 0036 0124     		movs	r4, #1
 767              	.LVL82:
 558:./FreeRTOS/stream_buffer.c ****         }
 768              		.loc 1 558 21 view .LVU216
 769 0038 EAE7     		b	.L44
 770              		.cfi_endproc
 771              	.LFE36:
 773              		.section	.text.xStreamBufferSetTriggerLevel,"ax",%progbits
 774              		.align	1
 775              		.global	xStreamBufferSetTriggerLevel
 776              		.syntax unified
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 42


 777              		.thumb
 778              		.thumb_func
 780              	xStreamBufferSetTriggerLevel:
 781              	.LVL83:
 782              	.LFB37:
 569:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 783              		.loc 1 569 1 is_stmt 1 view -0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 0
 786              		@ frame_needed = 0, uses_anonymous_args = 0
 787              		@ link register save eliminated.
 570:./FreeRTOS/stream_buffer.c ****     BaseType_t xReturn;
 788              		.loc 1 570 5 view .LVU218
 571:./FreeRTOS/stream_buffer.c **** 
 789              		.loc 1 571 5 view .LVU219
 573:./FreeRTOS/stream_buffer.c **** 
 790              		.loc 1 573 35 view .LVU220
 576:./FreeRTOS/stream_buffer.c ****     {
 791              		.loc 1 576 5 view .LVU221
 576:./FreeRTOS/stream_buffer.c ****     {
 792              		.loc 1 576 7 is_stmt 0 view .LVU222
 793 0000 0B46     		mov	r3, r1
 794 0002 01B9     		cbnz	r1, .L51
 578:./FreeRTOS/stream_buffer.c ****     }
 795              		.loc 1 578 23 view .LVU223
 796 0004 0123     		movs	r3, #1
 797              	.L51:
 798              	.LVL84:
 583:./FreeRTOS/stream_buffer.c ****     {
 799              		.loc 1 583 5 is_stmt 1 view .LVU224
 583:./FreeRTOS/stream_buffer.c ****     {
 800              		.loc 1 583 39 is_stmt 0 view .LVU225
 801 0006 8268     		ldr	r2, [r0, #8]
 583:./FreeRTOS/stream_buffer.c ****     {
 802              		.loc 1 583 7 view .LVU226
 803 0008 9A42     		cmp	r2, r3
 804 000a 02D9     		bls	.L54
 585:./FreeRTOS/stream_buffer.c ****         xReturn = pdPASS;
 805              		.loc 1 585 9 is_stmt 1 view .LVU227
 585:./FreeRTOS/stream_buffer.c ****         xReturn = pdPASS;
 806              		.loc 1 585 44 is_stmt 0 view .LVU228
 807 000c C360     		str	r3, [r0, #12]
 586:./FreeRTOS/stream_buffer.c ****     }
 808              		.loc 1 586 9 is_stmt 1 view .LVU229
 809              	.LVL85:
 586:./FreeRTOS/stream_buffer.c ****     }
 810              		.loc 1 586 17 is_stmt 0 view .LVU230
 811 000e 0120     		movs	r0, #1
 812              	.LVL86:
 586:./FreeRTOS/stream_buffer.c ****     }
 813              		.loc 1 586 17 view .LVU231
 814 0010 7047     		bx	lr
 815              	.LVL87:
 816              	.L54:
 590:./FreeRTOS/stream_buffer.c ****     }
 817              		.loc 1 590 17 view .LVU232
 818 0012 0020     		movs	r0, #0
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 43


 819              	.LVL88:
 593:./FreeRTOS/stream_buffer.c **** }
 820              		.loc 1 593 5 is_stmt 1 view .LVU233
 594:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 821              		.loc 1 594 1 is_stmt 0 view .LVU234
 822 0014 7047     		bx	lr
 823              		.cfi_endproc
 824              	.LFE37:
 826              		.section	.text.xStreamBufferSpacesAvailable,"ax",%progbits
 827              		.align	1
 828              		.global	xStreamBufferSpacesAvailable
 829              		.syntax unified
 830              		.thumb
 831              		.thumb_func
 833              	xStreamBufferSpacesAvailable:
 834              	.LFB38:
 598:./FreeRTOS/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 835              		.loc 1 598 1 is_stmt 1 view -0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 0, uses_anonymous_args = 0
 839              		@ link register save eliminated.
 840              	.LVL89:
 598:./FreeRTOS/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 841              		.loc 1 598 1 is_stmt 0 view .LVU236
 842 0000 10B4     		push	{r4}
 843              	.LCFI19:
 844              		.cfi_def_cfa_offset 4
 845              		.cfi_offset 4, -4
 846              	.L56:
 600:./FreeRTOS/stream_buffer.c ****     size_t xOriginalTail;
 847              		.loc 1 600 5 is_stmt 1 discriminator 1 view .LVU237
 601:./FreeRTOS/stream_buffer.c **** 
 848              		.loc 1 601 5 discriminator 1 view .LVU238
 603:./FreeRTOS/stream_buffer.c **** 
 849              		.loc 1 603 35 discriminator 1 view .LVU239
 608:./FreeRTOS/stream_buffer.c ****     {
 850              		.loc 1 608 5 discriminator 1 view .LVU240
 610:./FreeRTOS/stream_buffer.c ****         xSpace = pxStreamBuffer->xLength + pxStreamBuffer->xTail;
 851              		.loc 1 610 9 discriminator 1 view .LVU241
 610:./FreeRTOS/stream_buffer.c ****         xSpace = pxStreamBuffer->xLength + pxStreamBuffer->xTail;
 852              		.loc 1 610 23 is_stmt 0 discriminator 1 view .LVU242
 853 0002 0168     		ldr	r1, [r0]
 854              	.LVL90:
 611:./FreeRTOS/stream_buffer.c ****         xSpace -= pxStreamBuffer->xHead;
 855              		.loc 1 611 9 is_stmt 1 discriminator 1 view .LVU243
 611:./FreeRTOS/stream_buffer.c ****         xSpace -= pxStreamBuffer->xHead;
 856              		.loc 1 611 32 is_stmt 0 discriminator 1 view .LVU244
 857 0004 8268     		ldr	r2, [r0, #8]
 611:./FreeRTOS/stream_buffer.c ****         xSpace -= pxStreamBuffer->xHead;
 858              		.loc 1 611 58 discriminator 1 view .LVU245
 859 0006 0368     		ldr	r3, [r0]
 611:./FreeRTOS/stream_buffer.c ****         xSpace -= pxStreamBuffer->xHead;
 860              		.loc 1 611 16 discriminator 1 view .LVU246
 861 0008 1344     		add	r3, r3, r2
 862              	.LVL91:
 612:./FreeRTOS/stream_buffer.c ****     } while( xOriginalTail != pxStreamBuffer->xTail );
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 44


 863              		.loc 1 612 9 is_stmt 1 discriminator 1 view .LVU247
 612:./FreeRTOS/stream_buffer.c ****     } while( xOriginalTail != pxStreamBuffer->xTail );
 864              		.loc 1 612 33 is_stmt 0 discriminator 1 view .LVU248
 865 000a 4468     		ldr	r4, [r0, #4]
 612:./FreeRTOS/stream_buffer.c ****     } while( xOriginalTail != pxStreamBuffer->xTail );
 866              		.loc 1 612 16 discriminator 1 view .LVU249
 867 000c 1B1B     		subs	r3, r3, r4
 868              	.LVL92:
 613:./FreeRTOS/stream_buffer.c **** 
 869              		.loc 1 613 28 is_stmt 1 discriminator 1 view .LVU250
 613:./FreeRTOS/stream_buffer.c **** 
 870              		.loc 1 613 45 is_stmt 0 discriminator 1 view .LVU251
 871 000e 0468     		ldr	r4, [r0]
 613:./FreeRTOS/stream_buffer.c **** 
 872              		.loc 1 613 28 discriminator 1 view .LVU252
 873 0010 8C42     		cmp	r4, r1
 874 0012 F6D1     		bne	.L56
 615:./FreeRTOS/stream_buffer.c **** 
 875              		.loc 1 615 5 is_stmt 1 view .LVU253
 615:./FreeRTOS/stream_buffer.c **** 
 876              		.loc 1 615 12 is_stmt 0 view .LVU254
 877 0014 581E     		subs	r0, r3, #1
 878              	.LVL93:
 617:./FreeRTOS/stream_buffer.c ****     {
 879              		.loc 1 617 5 is_stmt 1 view .LVU255
 617:./FreeRTOS/stream_buffer.c ****     {
 880              		.loc 1 617 7 is_stmt 0 view .LVU256
 881 0016 8242     		cmp	r2, r0
 882 0018 00D8     		bhi	.L55
 619:./FreeRTOS/stream_buffer.c ****     }
 883              		.loc 1 619 9 is_stmt 1 view .LVU257
 619:./FreeRTOS/stream_buffer.c ****     }
 884              		.loc 1 619 16 is_stmt 0 view .LVU258
 885 001a 801A     		subs	r0, r0, r2
 886              	.LVL94:
 623:./FreeRTOS/stream_buffer.c ****     }
 887              		.loc 1 623 33 is_stmt 1 view .LVU259
 626:./FreeRTOS/stream_buffer.c **** }
 888              		.loc 1 626 5 view .LVU260
 889              	.L55:
 627:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 890              		.loc 1 627 1 is_stmt 0 view .LVU261
 891 001c 10BC     		pop	{r4}
 892              	.LCFI20:
 893              		.cfi_restore 4
 894              		.cfi_def_cfa_offset 0
 895 001e 7047     		bx	lr
 896              		.cfi_endproc
 897              	.LFE38:
 899              		.section	.text.xStreamBufferBytesAvailable,"ax",%progbits
 900              		.align	1
 901              		.global	xStreamBufferBytesAvailable
 902              		.syntax unified
 903              		.thumb
 904              		.thumb_func
 906              	xStreamBufferBytesAvailable:
 907              	.LVL95:
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 45


 908              	.LFB39:
 631:./FreeRTOS/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 909              		.loc 1 631 1 is_stmt 1 view -0
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 0
 912              		@ frame_needed = 0, uses_anonymous_args = 0
 631:./FreeRTOS/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 913              		.loc 1 631 1 is_stmt 0 view .LVU263
 914 0000 08B5     		push	{r3, lr}
 915              	.LCFI21:
 916              		.cfi_def_cfa_offset 8
 917              		.cfi_offset 3, -8
 918              		.cfi_offset 14, -4
 632:./FreeRTOS/stream_buffer.c ****     size_t xReturn;
 919              		.loc 1 632 5 is_stmt 1 view .LVU264
 920              	.LVL96:
 633:./FreeRTOS/stream_buffer.c **** 
 921              		.loc 1 633 5 view .LVU265
 635:./FreeRTOS/stream_buffer.c **** 
 922              		.loc 1 635 35 view .LVU266
 637:./FreeRTOS/stream_buffer.c ****     return xReturn;
 923              		.loc 1 637 5 view .LVU267
 637:./FreeRTOS/stream_buffer.c ****     return xReturn;
 924              		.loc 1 637 15 is_stmt 0 view .LVU268
 925 0002 FFF7FEFF 		bl	prvBytesInBuffer
 926              	.LVL97:
 638:./FreeRTOS/stream_buffer.c **** }
 927              		.loc 1 638 5 is_stmt 1 view .LVU269
 639:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 928              		.loc 1 639 1 is_stmt 0 view .LVU270
 929 0006 08BD     		pop	{r3, pc}
 930              		.cfi_endproc
 931              	.LFE39:
 933              		.section	.text.xStreamBufferSend,"ax",%progbits
 934              		.align	1
 935              		.global	xStreamBufferSend
 936              		.syntax unified
 937              		.thumb
 938              		.thumb_func
 940              	xStreamBufferSend:
 941              	.LVL98:
 942              	.LFB40:
 646:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 943              		.loc 1 646 1 is_stmt 1 view -0
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 16
 946              		@ frame_needed = 0, uses_anonymous_args = 0
 646:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 947              		.loc 1 646 1 is_stmt 0 view .LVU272
 948 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 949              	.LCFI22:
 950              		.cfi_def_cfa_offset 24
 951              		.cfi_offset 4, -24
 952              		.cfi_offset 5, -20
 953              		.cfi_offset 6, -16
 954              		.cfi_offset 7, -12
 955              		.cfi_offset 8, -8
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 46


 956              		.cfi_offset 14, -4
 957 0004 86B0     		sub	sp, sp, #24
 958              	.LCFI23:
 959              		.cfi_def_cfa_offset 48
 960 0006 0546     		mov	r5, r0
 961 0008 8846     		mov	r8, r1
 962 000a 1746     		mov	r7, r2
 963 000c 0393     		str	r3, [sp, #12]
 647:./FreeRTOS/stream_buffer.c ****     size_t xReturn, xSpace = 0;
 964              		.loc 1 647 5 is_stmt 1 view .LVU273
 965              	.LVL99:
 648:./FreeRTOS/stream_buffer.c ****     size_t xRequiredSpace = xDataLengthBytes;
 966              		.loc 1 648 5 view .LVU274
 649:./FreeRTOS/stream_buffer.c ****     TimeOut_t xTimeOut;
 967              		.loc 1 649 5 view .LVU275
 650:./FreeRTOS/stream_buffer.c ****     size_t xMaxReportedSpace = 0;
 968              		.loc 1 650 5 view .LVU276
 651:./FreeRTOS/stream_buffer.c **** 
 969              		.loc 1 651 5 view .LVU277
 653:./FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 970              		.loc 1 653 29 view .LVU278
 654:./FreeRTOS/stream_buffer.c **** 
 971              		.loc 1 654 35 view .LVU279
 658:./FreeRTOS/stream_buffer.c **** 
 972              		.loc 1 658 5 view .LVU280
 658:./FreeRTOS/stream_buffer.c **** 
 973              		.loc 1 658 39 is_stmt 0 view .LVU281
 974 000e 8368     		ldr	r3, [r0, #8]
 975              	.LVL100:
 658:./FreeRTOS/stream_buffer.c **** 
 976              		.loc 1 658 23 view .LVU282
 977 0010 013B     		subs	r3, r3, #1
 978              	.LVL101:
 664:./FreeRTOS/stream_buffer.c ****     {
 979              		.loc 1 664 5 is_stmt 1 view .LVU283
 664:./FreeRTOS/stream_buffer.c ****     {
 980              		.loc 1 664 25 is_stmt 0 view .LVU284
 981 0012 027F     		ldrb	r2, [r0, #28]	@ zero_extendqisi2
 982              	.LVL102:
 664:./FreeRTOS/stream_buffer.c ****     {
 983              		.loc 1 664 7 view .LVU285
 984 0014 12F0010F 		tst	r2, #1
 985 0018 2BD0     		beq	.L62
 666:./FreeRTOS/stream_buffer.c **** 
 986              		.loc 1 666 9 is_stmt 1 view .LVU286
 666:./FreeRTOS/stream_buffer.c **** 
 987              		.loc 1 666 24 is_stmt 0 view .LVU287
 988 001a 3E1D     		adds	r6, r7, #4
 989              	.LVL103:
 669:./FreeRTOS/stream_buffer.c **** 
 990              		.loc 1 669 58 is_stmt 1 view .LVU288
 673:./FreeRTOS/stream_buffer.c ****         {
 991              		.loc 1 673 9 view .LVU289
 673:./FreeRTOS/stream_buffer.c ****         {
 992              		.loc 1 673 11 is_stmt 0 view .LVU290
 993 001c B342     		cmp	r3, r6
 994 001e 01D2     		bcs	.L63
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 47


 677:./FreeRTOS/stream_buffer.c ****         }
 995              		.loc 1 677 13 is_stmt 1 view .LVU291
 677:./FreeRTOS/stream_buffer.c ****         }
 996              		.loc 1 677 26 is_stmt 0 view .LVU292
 997 0020 0023     		movs	r3, #0
 998              	.LVL104:
 677:./FreeRTOS/stream_buffer.c ****         }
 999              		.loc 1 677 26 view .LVU293
 1000 0022 0393     		str	r3, [sp, #12]
 1001              	.LVL105:
 1002              	.L63:
 695:./FreeRTOS/stream_buffer.c ****         }
 1003              		.loc 1 695 37 is_stmt 1 view .LVU294
 699:./FreeRTOS/stream_buffer.c ****     {
 1004              		.loc 1 699 5 view .LVU295
 699:./FreeRTOS/stream_buffer.c ****     {
 1005              		.loc 1 699 22 is_stmt 0 view .LVU296
 1006 0024 039B     		ldr	r3, [sp, #12]
 699:./FreeRTOS/stream_buffer.c ****     {
 1007              		.loc 1 699 7 view .LVU297
 1008 0026 6BB3     		cbz	r3, .L64
 701:./FreeRTOS/stream_buffer.c **** 
 1009              		.loc 1 701 9 is_stmt 1 view .LVU298
 1010 0028 04A8     		add	r0, sp, #16
 1011              	.LVL106:
 701:./FreeRTOS/stream_buffer.c **** 
 1012              		.loc 1 701 9 is_stmt 0 view .LVU299
 1013 002a FFF7FEFF 		bl	vTaskSetTimeOutState
 1014              	.LVL107:
 1015              	.L66:
 703:./FreeRTOS/stream_buffer.c ****         {
 1016              		.loc 1 703 9 is_stmt 1 view .LVU300
 707:./FreeRTOS/stream_buffer.c ****             {
 1017              		.loc 1 707 13 view .LVU301
 1018 002e FFF7FEFF 		bl	vPortEnterCritical
 1019              	.LVL108:
 709:./FreeRTOS/stream_buffer.c **** 
 1020              		.loc 1 709 17 view .LVU302
 709:./FreeRTOS/stream_buffer.c **** 
 1021              		.loc 1 709 26 is_stmt 0 view .LVU303
 1022 0032 2846     		mov	r0, r5
 1023 0034 FFF7FEFF 		bl	xStreamBufferSpacesAvailable
 1024              	.LVL109:
 1025 0038 0446     		mov	r4, r0
 1026              	.LVL110:
 711:./FreeRTOS/stream_buffer.c ****                 {
 1027              		.loc 1 711 17 is_stmt 1 view .LVU304
 711:./FreeRTOS/stream_buffer.c ****                 {
 1028              		.loc 1 711 19 is_stmt 0 view .LVU305
 1029 003a 8642     		cmp	r6, r0
 1030 003c 1FD9     		bls	.L65
 714:./FreeRTOS/stream_buffer.c **** 
 1031              		.loc 1 714 21 is_stmt 1 view .LVU306
 714:./FreeRTOS/stream_buffer.c **** 
 1032              		.loc 1 714 30 is_stmt 0 view .LVU307
 1033 003e 0021     		movs	r1, #0
 1034 0040 0846     		mov	r0, r1
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 48


 1035              	.LVL111:
 714:./FreeRTOS/stream_buffer.c **** 
 1036              		.loc 1 714 30 view .LVU308
 1037 0042 FFF7FEFF 		bl	xTaskGenericNotifyStateClear
 1038              	.LVL112:
 717:./FreeRTOS/stream_buffer.c ****                     pxStreamBuffer->xTaskWaitingToSend = xTaskGetCurrentTaskHandle();
 1039              		.loc 1 717 79 is_stmt 1 view .LVU309
 718:./FreeRTOS/stream_buffer.c ****                 }
 1040              		.loc 1 718 21 view .LVU310
 718:./FreeRTOS/stream_buffer.c ****                 }
 1041              		.loc 1 718 58 is_stmt 0 view .LVU311
 1042 0046 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1043              	.LVL113:
 718:./FreeRTOS/stream_buffer.c ****                 }
 1044              		.loc 1 718 56 view .LVU312
 1045 004a 6861     		str	r0, [r5, #20]
 726:./FreeRTOS/stream_buffer.c **** 
 1046              		.loc 1 726 13 is_stmt 1 view .LVU313
 1047 004c FFF7FEFF 		bl	vPortExitCritical
 1048              	.LVL114:
 728:./FreeRTOS/stream_buffer.c ****             ( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
 1049              		.loc 1 728 65 view .LVU314
 729:./FreeRTOS/stream_buffer.c ****             pxStreamBuffer->xTaskWaitingToSend = NULL;
 1050              		.loc 1 729 13 view .LVU315
 1051 0050 039B     		ldr	r3, [sp, #12]
 729:./FreeRTOS/stream_buffer.c ****             pxStreamBuffer->xTaskWaitingToSend = NULL;
 1052              		.loc 1 729 22 is_stmt 0 view .LVU316
 1053 0052 0093     		str	r3, [sp]
 1054 0054 0023     		movs	r3, #0
 1055 0056 1A46     		mov	r2, r3
 1056 0058 1946     		mov	r1, r3
 1057 005a 1846     		mov	r0, r3
 1058 005c FFF7FEFF 		bl	xTaskGenericNotifyWait
 1059              	.LVL115:
 730:./FreeRTOS/stream_buffer.c ****         } while( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE );
 1060              		.loc 1 730 13 is_stmt 1 view .LVU317
 730:./FreeRTOS/stream_buffer.c ****         } while( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE );
 1061              		.loc 1 730 48 is_stmt 0 view .LVU318
 1062 0060 0023     		movs	r3, #0
 1063 0062 6B61     		str	r3, [r5, #20]
 731:./FreeRTOS/stream_buffer.c ****     }
 1064              		.loc 1 731 67 is_stmt 1 view .LVU319
 731:./FreeRTOS/stream_buffer.c ****     }
 1065              		.loc 1 731 18 is_stmt 0 view .LVU320
 1066 0064 03A9     		add	r1, sp, #12
 1067 0066 04A8     		add	r0, sp, #16
 1068 0068 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1069              	.LVL116:
 731:./FreeRTOS/stream_buffer.c ****     }
 1070              		.loc 1 731 67 view .LVU321
 1071 006c 0028     		cmp	r0, #0
 1072 006e DED0     		beq	.L66
 1073 0070 07E0     		b	.L67
 1074              	.LVL117:
 1075              	.L62:
 689:./FreeRTOS/stream_buffer.c ****         {
 1076              		.loc 1 689 9 is_stmt 1 view .LVU322
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 49


 689:./FreeRTOS/stream_buffer.c ****         {
 1077              		.loc 1 689 11 is_stmt 0 view .LVU323
 1078 0072 9F42     		cmp	r7, r3
 1079 0074 01D8     		bhi	.L71
 649:./FreeRTOS/stream_buffer.c ****     TimeOut_t xTimeOut;
 1080              		.loc 1 649 12 view .LVU324
 1081 0076 3E46     		mov	r6, r7
 1082 0078 D4E7     		b	.L63
 1083              	.L71:
 691:./FreeRTOS/stream_buffer.c ****         }
 1084              		.loc 1 691 28 view .LVU325
 1085 007a 1E46     		mov	r6, r3
 1086 007c D2E7     		b	.L63
 1087              	.LVL118:
 1088              	.L65:
 722:./FreeRTOS/stream_buffer.c ****                     break;
 1089              		.loc 1 722 21 is_stmt 1 view .LVU326
 1090 007e FFF7FEFF 		bl	vPortExitCritical
 1091              	.LVL119:
 723:./FreeRTOS/stream_buffer.c ****                 }
 1092              		.loc 1 723 21 view .LVU327
 1093              	.L67:
 735:./FreeRTOS/stream_buffer.c ****     }
 1094              		.loc 1 735 33 view .LVU328
 738:./FreeRTOS/stream_buffer.c ****     {
 1095              		.loc 1 738 5 view .LVU329
 738:./FreeRTOS/stream_buffer.c ****     {
 1096              		.loc 1 738 7 is_stmt 0 view .LVU330
 1097 0082 1CB9     		cbnz	r4, .L68
 1098              	.LVL120:
 1099              	.L64:
 740:./FreeRTOS/stream_buffer.c ****     }
 1100              		.loc 1 740 9 is_stmt 1 view .LVU331
 740:./FreeRTOS/stream_buffer.c ****     }
 1101              		.loc 1 740 18 is_stmt 0 view .LVU332
 1102 0084 2846     		mov	r0, r5
 1103 0086 FFF7FEFF 		bl	xStreamBufferSpacesAvailable
 1104              	.LVL121:
 1105 008a 0446     		mov	r4, r0
 1106              	.LVL122:
 1107              	.L68:
 744:./FreeRTOS/stream_buffer.c ****     }
 1108              		.loc 1 744 33 is_stmt 1 view .LVU333
 747:./FreeRTOS/stream_buffer.c **** 
 1109              		.loc 1 747 5 view .LVU334
 747:./FreeRTOS/stream_buffer.c **** 
 1110              		.loc 1 747 15 is_stmt 0 view .LVU335
 1111 008c 0096     		str	r6, [sp]
 1112 008e 2346     		mov	r3, r4
 1113 0090 3A46     		mov	r2, r7
 1114 0092 4146     		mov	r1, r8
 1115 0094 2846     		mov	r0, r5
 1116 0096 FFF7FEFF 		bl	prvWriteMessageToBuffer
 1117              	.LVL123:
 749:./FreeRTOS/stream_buffer.c ****     {
 1118              		.loc 1 749 5 is_stmt 1 view .LVU336
 749:./FreeRTOS/stream_buffer.c ****     {
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 50


 1119              		.loc 1 749 7 is_stmt 0 view .LVU337
 1120 009a 0446     		mov	r4, r0
 1121              	.LVL124:
 749:./FreeRTOS/stream_buffer.c ****     {
 1122              		.loc 1 749 7 view .LVU338
 1123 009c 18B9     		cbnz	r0, .L73
 1124              	.LVL125:
 1125              	.L61:
 770:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 1126              		.loc 1 770 1 view .LVU339
 1127 009e 2046     		mov	r0, r4
 1128 00a0 06B0     		add	sp, sp, #24
 1129              	.LCFI24:
 1130              		.cfi_remember_state
 1131              		.cfi_def_cfa_offset 24
 1132              		@ sp needed
 1133 00a2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1134              	.LVL126:
 1135              	.L73:
 1136              	.LCFI25:
 1137              		.cfi_restore_state
 751:./FreeRTOS/stream_buffer.c **** 
 1138              		.loc 1 751 58 is_stmt 1 view .LVU340
 754:./FreeRTOS/stream_buffer.c ****         {
 1139              		.loc 1 754 9 view .LVU341
 754:./FreeRTOS/stream_buffer.c ****         {
 1140              		.loc 1 754 13 is_stmt 0 view .LVU342
 1141 00a6 2846     		mov	r0, r5
 1142              	.LVL127:
 754:./FreeRTOS/stream_buffer.c ****         {
 1143              		.loc 1 754 13 view .LVU343
 1144 00a8 FFF7FEFF 		bl	prvBytesInBuffer
 1145              	.LVL128:
 754:./FreeRTOS/stream_buffer.c ****         {
 1146              		.loc 1 754 65 view .LVU344
 1147 00ac EB68     		ldr	r3, [r5, #12]
 754:./FreeRTOS/stream_buffer.c ****         {
 1148              		.loc 1 754 11 view .LVU345
 1149 00ae 9842     		cmp	r0, r3
 1150 00b0 F5D3     		bcc	.L61
 756:./FreeRTOS/stream_buffer.c ****         }
 1151              		.loc 1 756 13 is_stmt 1 view .LVU346
 1152 00b2 FFF7FEFF 		bl	vTaskSuspendAll
 1153              	.LVL129:
 756:./FreeRTOS/stream_buffer.c ****         }
 1154              		.loc 1 756 13 view .LVU347
 1155 00b6 2B69     		ldr	r3, [r5, #16]
 1156 00b8 43B1     		cbz	r3, .L70
 756:./FreeRTOS/stream_buffer.c ****         }
 1157              		.loc 1 756 13 discriminator 1 view .LVU348
 1158 00ba 2869     		ldr	r0, [r5, #16]
 1159 00bc 0026     		movs	r6, #0
 1160              	.LVL130:
 756:./FreeRTOS/stream_buffer.c ****         }
 1161              		.loc 1 756 13 is_stmt 0 discriminator 1 view .LVU349
 1162 00be 0096     		str	r6, [sp]
 1163 00c0 3346     		mov	r3, r6
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 51


 1164 00c2 3246     		mov	r2, r6
 1165 00c4 3146     		mov	r1, r6
 1166 00c6 FFF7FEFF 		bl	xTaskGenericNotify
 1167              	.LVL131:
 756:./FreeRTOS/stream_buffer.c ****         }
 1168              		.loc 1 756 13 is_stmt 1 discriminator 1 view .LVU350
 1169 00ca 2E61     		str	r6, [r5, #16]
 1170              	.L70:
 756:./FreeRTOS/stream_buffer.c ****         }
 1171              		.loc 1 756 13 discriminator 3 view .LVU351
 1172 00cc FFF7FEFF 		bl	xTaskResumeAll
 1173              	.LVL132:
 756:./FreeRTOS/stream_buffer.c ****         }
 1174              		.loc 1 756 48 discriminator 3 view .LVU352
 765:./FreeRTOS/stream_buffer.c ****         traceSTREAM_BUFFER_SEND_FAILED( xStreamBuffer );
 1175              		.loc 1 765 33 discriminator 3 view .LVU353
 766:./FreeRTOS/stream_buffer.c ****     }
 1176              		.loc 1 766 56 discriminator 3 view .LVU354
 769:./FreeRTOS/stream_buffer.c **** }
 1177              		.loc 1 769 5 discriminator 3 view .LVU355
 769:./FreeRTOS/stream_buffer.c **** }
 1178              		.loc 1 769 12 is_stmt 0 discriminator 3 view .LVU356
 1179 00d0 E5E7     		b	.L61
 1180              		.cfi_endproc
 1181              	.LFE40:
 1183              		.section	.text.xStreamBufferSendFromISR,"ax",%progbits
 1184              		.align	1
 1185              		.global	xStreamBufferSendFromISR
 1186              		.syntax unified
 1187              		.thumb
 1188              		.thumb_func
 1190              	xStreamBufferSendFromISR:
 1191              	.LVL133:
 1192              	.LFB41:
 777:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1193              		.loc 1 777 1 is_stmt 1 view -0
 1194              		.cfi_startproc
 1195              		@ args = 0, pretend = 0, frame = 0
 1196              		@ frame_needed = 0, uses_anonymous_args = 0
 777:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1197              		.loc 1 777 1 is_stmt 0 view .LVU358
 1198 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1199              	.LCFI26:
 1200              		.cfi_def_cfa_offset 24
 1201              		.cfi_offset 4, -24
 1202              		.cfi_offset 5, -20
 1203              		.cfi_offset 6, -16
 1204              		.cfi_offset 7, -12
 1205              		.cfi_offset 8, -8
 1206              		.cfi_offset 14, -4
 1207 0004 82B0     		sub	sp, sp, #8
 1208              	.LCFI27:
 1209              		.cfi_def_cfa_offset 32
 1210 0006 0446     		mov	r4, r0
 1211 0008 0E46     		mov	r6, r1
 1212 000a 1546     		mov	r5, r2
 1213 000c 9846     		mov	r8, r3
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 52


 778:./FreeRTOS/stream_buffer.c ****     size_t xReturn, xSpace;
 1214              		.loc 1 778 5 is_stmt 1 view .LVU359
 1215              	.LVL134:
 779:./FreeRTOS/stream_buffer.c ****     size_t xRequiredSpace = xDataLengthBytes;
 1216              		.loc 1 779 5 view .LVU360
 780:./FreeRTOS/stream_buffer.c **** 
 1217              		.loc 1 780 5 view .LVU361
 782:./FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1218              		.loc 1 782 29 view .LVU362
 783:./FreeRTOS/stream_buffer.c **** 
 1219              		.loc 1 783 35 view .LVU363
 789:./FreeRTOS/stream_buffer.c ****     {
 1220              		.loc 1 789 5 view .LVU364
 789:./FreeRTOS/stream_buffer.c ****     {
 1221              		.loc 1 789 25 is_stmt 0 view .LVU365
 1222 000e 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1223              	.LVL135:
 789:./FreeRTOS/stream_buffer.c ****     {
 1224              		.loc 1 789 7 view .LVU366
 1225 0010 13F0010F 		tst	r3, #1
 1226 0014 10D0     		beq	.L78
 791:./FreeRTOS/stream_buffer.c ****     }
 1227              		.loc 1 791 9 is_stmt 1 view .LVU367
 791:./FreeRTOS/stream_buffer.c ****     }
 1228              		.loc 1 791 24 is_stmt 0 view .LVU368
 1229 0016 171D     		adds	r7, r2, #4
 1230              	.LVL136:
 1231              	.L75:
 795:./FreeRTOS/stream_buffer.c ****     }
 1232              		.loc 1 795 33 is_stmt 1 view .LVU369
 798:./FreeRTOS/stream_buffer.c ****     xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequire
 1233              		.loc 1 798 5 view .LVU370
 798:./FreeRTOS/stream_buffer.c ****     xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequire
 1234              		.loc 1 798 14 is_stmt 0 view .LVU371
 1235 0018 2046     		mov	r0, r4
 1236              	.LVL137:
 798:./FreeRTOS/stream_buffer.c ****     xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequire
 1237              		.loc 1 798 14 view .LVU372
 1238 001a FFF7FEFF 		bl	xStreamBufferSpacesAvailable
 1239              	.LVL138:
 798:./FreeRTOS/stream_buffer.c ****     xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequire
 1240              		.loc 1 798 14 view .LVU373
 1241 001e 0346     		mov	r3, r0
 1242              	.LVL139:
 799:./FreeRTOS/stream_buffer.c **** 
 1243              		.loc 1 799 5 is_stmt 1 view .LVU374
 799:./FreeRTOS/stream_buffer.c **** 
 1244              		.loc 1 799 15 is_stmt 0 view .LVU375
 1245 0020 0097     		str	r7, [sp]
 1246 0022 2A46     		mov	r2, r5
 1247 0024 3146     		mov	r1, r6
 1248 0026 2046     		mov	r0, r4
 1249              	.LVL140:
 799:./FreeRTOS/stream_buffer.c **** 
 1250              		.loc 1 799 15 view .LVU376
 1251 0028 FFF7FEFF 		bl	prvWriteMessageToBuffer
 1252              	.LVL141:
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 53


 801:./FreeRTOS/stream_buffer.c ****     {
 1253              		.loc 1 801 5 is_stmt 1 view .LVU377
 801:./FreeRTOS/stream_buffer.c ****     {
 1254              		.loc 1 801 7 is_stmt 0 view .LVU378
 1255 002c 0546     		mov	r5, r0
 1256              	.LVL142:
 801:./FreeRTOS/stream_buffer.c ****     {
 1257              		.loc 1 801 7 view .LVU379
 1258 002e 28B9     		cbnz	r0, .L80
 1259              	.LVL143:
 1260              	.L74:
 821:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 1261              		.loc 1 821 1 view .LVU380
 1262 0030 2846     		mov	r0, r5
 1263 0032 02B0     		add	sp, sp, #8
 1264              	.LCFI28:
 1265              		.cfi_remember_state
 1266              		.cfi_def_cfa_offset 24
 1267              		@ sp needed
 1268 0034 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1269              	.LVL144:
 1270              	.L78:
 1271              	.LCFI29:
 1272              		.cfi_restore_state
 780:./FreeRTOS/stream_buffer.c **** 
 1273              		.loc 1 780 12 view .LVU381
 1274 0038 1746     		mov	r7, r2
 1275 003a EDE7     		b	.L75
 1276              	.LVL145:
 1277              	.L80:
 804:./FreeRTOS/stream_buffer.c ****         {
 1278              		.loc 1 804 9 is_stmt 1 view .LVU382
 804:./FreeRTOS/stream_buffer.c ****         {
 1279              		.loc 1 804 13 is_stmt 0 view .LVU383
 1280 003c 2046     		mov	r0, r4
 1281              	.LVL146:
 804:./FreeRTOS/stream_buffer.c ****         {
 1282              		.loc 1 804 13 view .LVU384
 1283 003e FFF7FEFF 		bl	prvBytesInBuffer
 1284              	.LVL147:
 804:./FreeRTOS/stream_buffer.c ****         {
 1285              		.loc 1 804 65 view .LVU385
 1286 0042 E368     		ldr	r3, [r4, #12]
 804:./FreeRTOS/stream_buffer.c ****         {
 1287              		.loc 1 804 11 view .LVU386
 1288 0044 9842     		cmp	r0, r3
 1289 0046 F3D3     		bcc	.L74
 1290              	.LBB20:
 806:./FreeRTOS/stream_buffer.c ****         }
 1291              		.loc 1 806 13 is_stmt 1 view .LVU387
 806:./FreeRTOS/stream_buffer.c ****         }
 1292              		.loc 1 806 13 view .LVU388
 1293              	.LBB21:
 1294              	.LBI21:
 1295              		.file 2 "FreeRTOS/portable/GCC/ARM_CM3/portmacro.h"
   1:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.5.1
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 54


   3:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  *
   5:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * SPDX-License-Identifier: MIT
   6:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  *
   7:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   9:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
  10:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * subject to the following conditions:
  13:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  *
  14:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  15:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  16:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  *
  17:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  *
  24:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * https://www.FreeRTOS.org
  25:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * https://github.com/FreeRTOS
  26:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  *
  27:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  */
  28:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** #include <stdlib.h>
  29:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** #include <string.h>
  30:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** #include <stdint.h>
  31:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** #include <FreeRTOSConfig.h>
  32:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** #include <projdefs.h>
  33:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
  34:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  35:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define PORTMACRO_H
  36:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
  37:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #ifdef __cplusplus
  38:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         extern "C" {
  39:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #endif
  40:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
  41:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  42:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  43:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  *
  44:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  45:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  46:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  *
  47:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
  48:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  49:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  */
  50:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
  51:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  52:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portCHAR          char
  53:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portFLOAT         float
  54:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portDOUBLE        double
  55:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portLONG          long
  56:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portSHORT         short
  57:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portSTACK_TYPE    uint32_t
  58:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portBASE_TYPE     long
  59:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 55


  60:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     typedef portSTACK_TYPE   StackType_t;
  61:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     typedef long             BaseType_t;
  62:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     typedef unsigned long    UBaseType_t;
  63:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
  64:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #if ( configUSE_16_BIT_TICKS == 1 )
  65:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         typedef uint16_t     TickType_t;
  66:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffff
  67:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #else
  68:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         typedef uint32_t     TickType_t;
  69:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
  70:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
  71:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  72:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * not need to be guarded with a critical section. */
  73:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #define portTICK_TYPE_IS_ATOMIC    1
  74:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #endif
  75:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  76:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
  77:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
  78:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portSTACK_GROWTH      ( -1 )
  79:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  80:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portBYTE_ALIGNMENT    8
  81:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portDONT_DISCARD      __attribute__( ( used ) )
  82:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  83:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
  84:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  85:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portYIELD()                                 \
  86:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {                                                   \
  87:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  88:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
  89:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****                                                         \
  90:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  91:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****          * within the specified behaviour for the architecture. */ \
  92:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
  93:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         __asm volatile ( "isb" );                                  \
  94:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     }
  95:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
  96:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  97:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
  98:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portEND_SWITCHING_ISR( xSwitchRequired )    do { if( xSwitchRequired != pdFALSE ) portY
  99:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portYIELD_FROM_ISR( x )                     portEND_SWITCHING_ISR( x )
 100:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 101:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 102:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
 103:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     extern void vPortEnterCritical( void );
 104:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     extern void vPortExitCritical( void );
 105:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 106:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 107:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
 108:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 109:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portENTER_CRITICAL()                      vPortEnterCritical()
 110:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portEXIT_CRITICAL()                       vPortExitCritical()
 111:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 112:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 113:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 114:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 115:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 116:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * (which build with all the ports) will build. */
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 56


 117:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParamete
 118:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParamete
 119:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 120:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 121:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 122:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #ifndef portSUPPRESS_TICKS_AND_SLEEP
 123:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 124:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xE
 125:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #endif
 126:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 127:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 128:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 129:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 130:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
 131:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #endif
 132:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 133:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 134:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 135:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* Generic helper function. */
 136:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t 
 137:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         {
 138:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             uint8_t ucReturn;
 139:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 140:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 141:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 142:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             return ucReturn;
 143:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         }
 144:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 145:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* Check the configuration. */
 146:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #if ( configMAX_PRIORITIES > 32 )
 147:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIO
 148:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #endif
 149:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 150:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* Store/clear the ready priorities in a bit map. */
 151:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities )
 152:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities )
 153:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 154:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 155:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 156:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 3
 157:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 158:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 159:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 160:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 161:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 162:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #ifdef configASSERT
 163:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         void vPortValidateInterruptPriority( void );
 164:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
 165:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #endif
 166:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 167:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 168:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portNOP()
 169:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 170:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portINLINE              __inline
 171:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 172:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #ifndef portFORCE_INLINE
 173:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 57


 174:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #endif
 175:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 176:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 177:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 178:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 179:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
 180:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         uint32_t ulCurrentInterrupt;
 181:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         BaseType_t xReturn;
 182:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 183:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         /* Obtain the number of the currently executing interrupt. */
 184:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 185:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 186:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         if( ulCurrentInterrupt == 0 )
 187:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         {
 188:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             xReturn = pdFALSE;
 189:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         }
 190:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         else
 191:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         {
 192:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             xReturn = pdTRUE;
 193:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         }
 194:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 195:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         return xReturn;
 196:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     }
 197:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 198:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 199:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 200:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 201:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
 202:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         uint32_t ulNewBASEPRI;
 203:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 204:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         __asm volatile
 205:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         (
 206:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             "	mov %0, %1												\n"\
 207:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             "	msr basepri, %0											\n"\
 208:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             "	isb														\n"\
 209:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             "	dsb														\n"\
 210:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             : "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 211:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         );
 212:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     }
 213:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 214:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 215:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 216:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1296              		.loc 2 216 38 view .LVU389
 1297              	.LBB22:
 217:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
 218:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1298              		.loc 2 218 9 view .LVU390
 219:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 220:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         __asm volatile
 1299              		.loc 2 220 9 view .LVU391
 1300              		.syntax unified
 1301              	@ 220 "FreeRTOS/portable/GCC/ARM_CM3/portmacro.h" 1
 1302 0048 EFF31186 			mrs r6, basepri											
 1303 004c 4FF0BF03 		mov r3, #191												
 1304 0050 83F31188 		msr basepri, r3											
 1305 0054 BFF36F8F 		isb														
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 58


 1306 0058 BFF34F8F 		dsb														
 1307              	
 1308              	@ 0 "" 2
 1309              	.LVL148:
 221:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         (
 222:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             "	mrs %0, basepri											\n"\
 223:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             "	mov %1, %2												\n"\
 224:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             "	msr basepri, %1											\n"\
 225:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             "	isb														\n"\
 226:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             "	dsb														\n"\
 227:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             : "=r" ( ulOriginalBASEPRI ), "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT
 228:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         );
 229:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 230:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         /* This return will not be reached but is necessary to prevent compiler
 231:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****          * warnings. */
 232:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         return ulOriginalBASEPRI;
 1310              		.loc 2 232 9 view .LVU392
 1311              		.loc 2 232 9 is_stmt 0 view .LVU393
 1312              		.thumb
 1313              		.syntax unified
 1314              	.LBE22:
 1315              	.LBE21:
 806:./FreeRTOS/stream_buffer.c ****         }
 1316              		.loc 1 806 13 is_stmt 1 view .LVU394
 1317 005c 2369     		ldr	r3, [r4, #16]
 1318 005e 53B1     		cbz	r3, .L77
 806:./FreeRTOS/stream_buffer.c ****         }
 1319              		.loc 1 806 13 discriminator 1 view .LVU395
 1320 0060 2069     		ldr	r0, [r4, #16]
 1321 0062 CDF80480 		str	r8, [sp, #4]
 1322 0066 0027     		movs	r7, #0
 1323              	.LVL149:
 806:./FreeRTOS/stream_buffer.c ****         }
 1324              		.loc 1 806 13 is_stmt 0 discriminator 1 view .LVU396
 1325 0068 0097     		str	r7, [sp]
 1326 006a 3B46     		mov	r3, r7
 1327 006c 3A46     		mov	r2, r7
 1328 006e 3946     		mov	r1, r7
 1329 0070 FFF7FEFF 		bl	xTaskGenericNotifyFromISR
 1330              	.LVL150:
 806:./FreeRTOS/stream_buffer.c ****         }
 1331              		.loc 1 806 13 is_stmt 1 discriminator 1 view .LVU397
 1332 0074 2761     		str	r7, [r4, #16]
 1333              	.L77:
 806:./FreeRTOS/stream_buffer.c ****         }
 1334              		.loc 1 806 13 discriminator 3 view .LVU398
 1335              	.LBB23:
 1336              	.LBI23:
 233:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     }
 234:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 235:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 236:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1337              		.loc 2 236 34 discriminator 3 view .LVU399
 1338              	.LBB24:
 237:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
 238:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         __asm volatile
 1339              		.loc 2 238 9 discriminator 3 view .LVU400
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 59


 1340              		.syntax unified
 1341              	@ 238 "FreeRTOS/portable/GCC/ARM_CM3/portmacro.h" 1
 1342 0076 86F31188 			msr basepri, r6	
 1343              	@ 0 "" 2
 1344              		.thumb
 1345              		.syntax unified
 1346              	.LBE24:
 1347              	.LBE23:
 1348              	.LBE20:
 815:./FreeRTOS/stream_buffer.c ****     }
 1349              		.loc 1 815 33 discriminator 3 view .LVU401
 818:./FreeRTOS/stream_buffer.c **** 
 1350              		.loc 1 818 63 discriminator 3 view .LVU402
 820:./FreeRTOS/stream_buffer.c **** }
 1351              		.loc 1 820 5 discriminator 3 view .LVU403
 820:./FreeRTOS/stream_buffer.c **** }
 1352              		.loc 1 820 12 is_stmt 0 discriminator 3 view .LVU404
 1353 007a D9E7     		b	.L74
 1354              		.cfi_endproc
 1355              	.LFE41:
 1357              		.section	.text.xStreamBufferReceive,"ax",%progbits
 1358              		.align	1
 1359              		.global	xStreamBufferReceive
 1360              		.syntax unified
 1361              		.thumb
 1362              		.thumb_func
 1364              	xStreamBufferReceive:
 1365              	.LVL151:
 1366              	.LFB43:
 878:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1367              		.loc 1 878 1 is_stmt 1 view -0
 1368              		.cfi_startproc
 1369              		@ args = 0, pretend = 0, frame = 0
 1370              		@ frame_needed = 0, uses_anonymous_args = 0
 878:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1371              		.loc 1 878 1 is_stmt 0 view .LVU406
 1372 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1373              	.LCFI30:
 1374              		.cfi_def_cfa_offset 28
 1375              		.cfi_offset 4, -28
 1376              		.cfi_offset 5, -24
 1377              		.cfi_offset 6, -20
 1378              		.cfi_offset 7, -16
 1379              		.cfi_offset 8, -12
 1380              		.cfi_offset 9, -8
 1381              		.cfi_offset 14, -4
 1382 0004 83B0     		sub	sp, sp, #12
 1383              	.LCFI31:
 1384              		.cfi_def_cfa_offset 40
 1385 0006 0446     		mov	r4, r0
 1386 0008 0E46     		mov	r6, r1
 1387 000a 1746     		mov	r7, r2
 1388 000c 9946     		mov	r9, r3
 879:./FreeRTOS/stream_buffer.c ****     size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
 1389              		.loc 1 879 5 is_stmt 1 view .LVU407
 1390              	.LVL152:
 880:./FreeRTOS/stream_buffer.c **** 
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 60


 1391              		.loc 1 880 5 view .LVU408
 882:./FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1392              		.loc 1 882 29 view .LVU409
 883:./FreeRTOS/stream_buffer.c **** 
 1393              		.loc 1 883 35 view .LVU410
 890:./FreeRTOS/stream_buffer.c ****     {
 1394              		.loc 1 890 5 view .LVU411
 890:./FreeRTOS/stream_buffer.c ****     {
 1395              		.loc 1 890 25 is_stmt 0 view .LVU412
 1396 000e 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1397              	.LVL153:
 890:./FreeRTOS/stream_buffer.c ****     {
 1398              		.loc 1 890 7 view .LVU413
 1399 0010 13F0010F 		tst	r3, #1
 1400 0014 1FD0     		beq	.L88
 892:./FreeRTOS/stream_buffer.c ****     }
 1401              		.loc 1 892 36 view .LVU414
 1402 0016 4FF00408 		mov	r8, #4
 1403              	.L82:
 1404              	.LVL154:
 899:./FreeRTOS/stream_buffer.c ****     {
 1405              		.loc 1 899 5 is_stmt 1 view .LVU415
 899:./FreeRTOS/stream_buffer.c ****     {
 1406              		.loc 1 899 7 is_stmt 0 view .LVU416
 1407 001a B9F1000F 		cmp	r9, #0
 1408 001e 25D0     		beq	.L83
 903:./FreeRTOS/stream_buffer.c ****         {
 1409              		.loc 1 903 9 is_stmt 1 view .LVU417
 1410 0020 FFF7FEFF 		bl	vPortEnterCritical
 1411              	.LVL155:
 905:./FreeRTOS/stream_buffer.c **** 
 1412              		.loc 1 905 13 view .LVU418
 905:./FreeRTOS/stream_buffer.c **** 
 1413              		.loc 1 905 31 is_stmt 0 view .LVU419
 1414 0024 2046     		mov	r0, r4
 1415 0026 FFF7FEFF 		bl	prvBytesInBuffer
 1416              	.LVL156:
 1417 002a 0546     		mov	r5, r0
 1418              	.LVL157:
 912:./FreeRTOS/stream_buffer.c ****             {
 1419              		.loc 1 912 13 is_stmt 1 view .LVU420
 912:./FreeRTOS/stream_buffer.c ****             {
 1420              		.loc 1 912 15 is_stmt 0 view .LVU421
 1421 002c 8045     		cmp	r8, r0
 1422 002e 15D2     		bcs	.L91
 1423              	.LVL158:
 1424              	.L84:
 923:./FreeRTOS/stream_buffer.c ****             }
 1425              		.loc 1 923 41 is_stmt 1 view .LVU422
 926:./FreeRTOS/stream_buffer.c **** 
 1426              		.loc 1 926 9 view .LVU423
 1427 0030 FFF7FEFF 		bl	vPortExitCritical
 1428              	.LVL159:
 928:./FreeRTOS/stream_buffer.c ****         {
 1429              		.loc 1 928 9 view .LVU424
 928:./FreeRTOS/stream_buffer.c ****         {
 1430              		.loc 1 928 11 is_stmt 0 view .LVU425
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 61


 1431 0034 A845     		cmp	r8, r5
 1432 0036 1DD3     		bcc	.L85
 931:./FreeRTOS/stream_buffer.c ****             ( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
 1433              		.loc 1 931 68 is_stmt 1 view .LVU426
 932:./FreeRTOS/stream_buffer.c ****             pxStreamBuffer->xTaskWaitingToReceive = NULL;
 1434              		.loc 1 932 13 view .LVU427
 932:./FreeRTOS/stream_buffer.c ****             pxStreamBuffer->xTaskWaitingToReceive = NULL;
 1435              		.loc 1 932 22 is_stmt 0 view .LVU428
 1436 0038 CDF80090 		str	r9, [sp]
 1437 003c 0023     		movs	r3, #0
 1438 003e 1A46     		mov	r2, r3
 1439 0040 1946     		mov	r1, r3
 1440 0042 1846     		mov	r0, r3
 1441 0044 FFF7FEFF 		bl	xTaskGenericNotifyWait
 1442              	.LVL160:
 933:./FreeRTOS/stream_buffer.c **** 
 1443              		.loc 1 933 13 is_stmt 1 view .LVU429
 933:./FreeRTOS/stream_buffer.c **** 
 1444              		.loc 1 933 51 is_stmt 0 view .LVU430
 1445 0048 0023     		movs	r3, #0
 1446 004a 2361     		str	r3, [r4, #16]
 936:./FreeRTOS/stream_buffer.c ****         }
 1447              		.loc 1 936 13 is_stmt 1 view .LVU431
 936:./FreeRTOS/stream_buffer.c ****         }
 1448              		.loc 1 936 31 is_stmt 0 view .LVU432
 1449 004c 2046     		mov	r0, r4
 1450 004e FFF7FEFF 		bl	prvBytesInBuffer
 1451              	.LVL161:
 1452 0052 0546     		mov	r5, r0
 1453              	.LVL162:
 936:./FreeRTOS/stream_buffer.c ****         }
 1454              		.loc 1 936 31 view .LVU433
 1455 0054 0EE0     		b	.L85
 1456              	.LVL163:
 1457              	.L88:
 896:./FreeRTOS/stream_buffer.c ****     }
 1458              		.loc 1 896 36 view .LVU434
 1459 0056 4FF00008 		mov	r8, #0
 1460 005a DEE7     		b	.L82
 1461              	.LVL164:
 1462              	.L91:
 915:./FreeRTOS/stream_buffer.c **** 
 1463              		.loc 1 915 17 is_stmt 1 view .LVU435
 915:./FreeRTOS/stream_buffer.c **** 
 1464              		.loc 1 915 26 is_stmt 0 view .LVU436
 1465 005c 0021     		movs	r1, #0
 1466 005e 0846     		mov	r0, r1
 1467              	.LVL165:
 915:./FreeRTOS/stream_buffer.c **** 
 1468              		.loc 1 915 26 view .LVU437
 1469 0060 FFF7FEFF 		bl	xTaskGenericNotifyStateClear
 1470              	.LVL166:
 918:./FreeRTOS/stream_buffer.c ****                 pxStreamBuffer->xTaskWaitingToReceive = xTaskGetCurrentTaskHandle();
 1471              		.loc 1 918 78 is_stmt 1 view .LVU438
 919:./FreeRTOS/stream_buffer.c ****             }
 1472              		.loc 1 919 17 view .LVU439
 919:./FreeRTOS/stream_buffer.c ****             }
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 62


 1473              		.loc 1 919 57 is_stmt 0 view .LVU440
 1474 0064 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1475              	.LVL167:
 919:./FreeRTOS/stream_buffer.c ****             }
 1476              		.loc 1 919 55 view .LVU441
 1477 0068 2061     		str	r0, [r4, #16]
 1478 006a E1E7     		b	.L84
 1479              	.LVL168:
 1480              	.L83:
 945:./FreeRTOS/stream_buffer.c ****     }
 1481              		.loc 1 945 9 is_stmt 1 view .LVU442
 945:./FreeRTOS/stream_buffer.c ****     }
 1482              		.loc 1 945 27 is_stmt 0 view .LVU443
 1483 006c 2046     		mov	r0, r4
 1484              	.LVL169:
 945:./FreeRTOS/stream_buffer.c ****     }
 1485              		.loc 1 945 27 view .LVU444
 1486 006e FFF7FEFF 		bl	prvBytesInBuffer
 1487              	.LVL170:
 945:./FreeRTOS/stream_buffer.c ****     }
 1488              		.loc 1 945 27 view .LVU445
 1489 0072 0546     		mov	r5, r0
 1490              	.LVL171:
 1491              	.L85:
 953:./FreeRTOS/stream_buffer.c ****     {
 1492              		.loc 1 953 5 is_stmt 1 view .LVU446
 953:./FreeRTOS/stream_buffer.c ****     {
 1493              		.loc 1 953 7 is_stmt 0 view .LVU447
 1494 0074 4545     		cmp	r5, r8
 1495 0076 04D8     		bhi	.L92
 880:./FreeRTOS/stream_buffer.c **** 
 1496              		.loc 1 880 12 view .LVU448
 1497 0078 0025     		movs	r5, #0
 1498              	.LVL172:
 970:./FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 1499              		.loc 1 970 59 is_stmt 1 view .LVU449
 971:./FreeRTOS/stream_buffer.c ****     }
 1500              		.loc 1 971 33 view .LVU450
 974:./FreeRTOS/stream_buffer.c **** }
 1501              		.loc 1 974 5 view .LVU451
 1502              	.L81:
 975:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 1503              		.loc 1 975 1 is_stmt 0 view .LVU452
 1504 007a 2846     		mov	r0, r5
 1505 007c 03B0     		add	sp, sp, #12
 1506              	.LCFI32:
 1507              		.cfi_remember_state
 1508              		.cfi_def_cfa_offset 28
 1509              		@ sp needed
 1510 007e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1511              	.LVL173:
 1512              	.L92:
 1513              	.LCFI33:
 1514              		.cfi_restore_state
 955:./FreeRTOS/stream_buffer.c **** 
 1515              		.loc 1 955 9 is_stmt 1 view .LVU453
 955:./FreeRTOS/stream_buffer.c **** 
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 63


 1516              		.loc 1 955 27 is_stmt 0 view .LVU454
 1517 0082 2B46     		mov	r3, r5
 1518 0084 3A46     		mov	r2, r7
 1519 0086 3146     		mov	r1, r6
 1520 0088 2046     		mov	r0, r4
 1521 008a FFF7FEFF 		bl	prvReadMessageFromBuffer
 1522              	.LVL174:
 958:./FreeRTOS/stream_buffer.c ****         {
 1523              		.loc 1 958 9 is_stmt 1 view .LVU455
 958:./FreeRTOS/stream_buffer.c ****         {
 1524              		.loc 1 958 11 is_stmt 0 view .LVU456
 1525 008e 0546     		mov	r5, r0
 1526              	.LVL175:
 958:./FreeRTOS/stream_buffer.c ****         {
 1527              		.loc 1 958 11 view .LVU457
 1528 0090 0028     		cmp	r0, #0
 1529 0092 F2D0     		beq	.L81
 960:./FreeRTOS/stream_buffer.c ****             prvRECEIVE_COMPLETED( xStreamBuffer );
 1530              		.loc 1 960 73 is_stmt 1 view .LVU458
 961:./FreeRTOS/stream_buffer.c ****         }
 1531              		.loc 1 961 13 view .LVU459
 1532 0094 FFF7FEFF 		bl	vTaskSuspendAll
 1533              	.LVL176:
 961:./FreeRTOS/stream_buffer.c ****         }
 1534              		.loc 1 961 13 view .LVU460
 1535 0098 6369     		ldr	r3, [r4, #20]
 1536 009a 43B1     		cbz	r3, .L87
 961:./FreeRTOS/stream_buffer.c ****         }
 1537              		.loc 1 961 13 discriminator 1 view .LVU461
 1538 009c 6069     		ldr	r0, [r4, #20]
 1539 009e 0026     		movs	r6, #0
 1540              	.LVL177:
 961:./FreeRTOS/stream_buffer.c ****         }
 1541              		.loc 1 961 13 is_stmt 0 discriminator 1 view .LVU462
 1542 00a0 0096     		str	r6, [sp]
 1543 00a2 3346     		mov	r3, r6
 1544 00a4 3246     		mov	r2, r6
 1545 00a6 3146     		mov	r1, r6
 1546 00a8 FFF7FEFF 		bl	xTaskGenericNotify
 1547              	.LVL178:
 961:./FreeRTOS/stream_buffer.c ****         }
 1548              		.loc 1 961 13 is_stmt 1 discriminator 1 view .LVU463
 1549 00ac 6661     		str	r6, [r4, #20]
 1550              	.L87:
 961:./FreeRTOS/stream_buffer.c ****         }
 1551              		.loc 1 961 13 discriminator 3 view .LVU464
 1552 00ae FFF7FEFF 		bl	xTaskResumeAll
 1553              	.LVL179:
 961:./FreeRTOS/stream_buffer.c ****         }
 1554              		.loc 1 961 50 discriminator 3 view .LVU465
 1555 00b2 E2E7     		b	.L81
 1556              		.cfi_endproc
 1557              	.LFE43:
 1559              		.section	.text.xStreamBufferNextMessageLengthBytes,"ax",%progbits
 1560              		.align	1
 1561              		.global	xStreamBufferNextMessageLengthBytes
 1562              		.syntax unified
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 64


 1563              		.thumb
 1564              		.thumb_func
 1566              	xStreamBufferNextMessageLengthBytes:
 1567              	.LVL180:
 1568              	.LFB44:
 979:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1569              		.loc 1 979 1 view -0
 1570              		.cfi_startproc
 1571              		@ args = 0, pretend = 0, frame = 8
 1572              		@ frame_needed = 0, uses_anonymous_args = 0
 980:./FreeRTOS/stream_buffer.c ****     size_t xReturn, xBytesAvailable;
 1573              		.loc 1 980 5 view .LVU467
 981:./FreeRTOS/stream_buffer.c ****     configMESSAGE_BUFFER_LENGTH_TYPE xTempReturn;
 1574              		.loc 1 981 5 view .LVU468
 982:./FreeRTOS/stream_buffer.c **** 
 1575              		.loc 1 982 5 view .LVU469
 984:./FreeRTOS/stream_buffer.c **** 
 1576              		.loc 1 984 35 view .LVU470
 987:./FreeRTOS/stream_buffer.c ****     {
 1577              		.loc 1 987 5 view .LVU471
 987:./FreeRTOS/stream_buffer.c ****     {
 1578              		.loc 1 987 25 is_stmt 0 view .LVU472
 1579 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 987:./FreeRTOS/stream_buffer.c ****     {
 1580              		.loc 1 987 7 view .LVU473
 1581 0002 13F0010F 		tst	r3, #1
 1582 0006 01D1     		bne	.L101
1011:./FreeRTOS/stream_buffer.c ****     }
 1583              		.loc 1 1011 17 view .LVU474
 1584 0008 0020     		movs	r0, #0
 1585              	.LVL181:
1015:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 1586              		.loc 1 1015 1 view .LVU475
 1587 000a 7047     		bx	lr
 1588              	.LVL182:
 1589              	.L101:
 979:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1590              		.loc 1 979 1 view .LVU476
 1591 000c 10B5     		push	{r4, lr}
 1592              	.LCFI34:
 1593              		.cfi_def_cfa_offset 8
 1594              		.cfi_offset 4, -8
 1595              		.cfi_offset 14, -4
 1596 000e 82B0     		sub	sp, sp, #8
 1597              	.LCFI35:
 1598              		.cfi_def_cfa_offset 16
 1599 0010 0446     		mov	r4, r0
 989:./FreeRTOS/stream_buffer.c **** 
 1600              		.loc 1 989 9 is_stmt 1 view .LVU477
 989:./FreeRTOS/stream_buffer.c **** 
 1601              		.loc 1 989 27 is_stmt 0 view .LVU478
 1602 0012 FFF7FEFF 		bl	prvBytesInBuffer
 1603              	.LVL183:
 991:./FreeRTOS/stream_buffer.c ****         {
 1604              		.loc 1 991 9 is_stmt 1 view .LVU479
 991:./FreeRTOS/stream_buffer.c ****         {
 1605              		.loc 1 991 11 is_stmt 0 view .LVU480
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 65


 1606 0016 0428     		cmp	r0, #4
 1607 0018 02D8     		bhi	.L102
1006:./FreeRTOS/stream_buffer.c ****         }
 1608              		.loc 1 1006 21 view .LVU481
 1609 001a 0020     		movs	r0, #0
 1610              	.LVL184:
1014:./FreeRTOS/stream_buffer.c **** }
 1611              		.loc 1 1014 5 is_stmt 1 view .LVU482
 1612              	.L93:
1015:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 1613              		.loc 1 1015 1 is_stmt 0 view .LVU483
 1614 001c 02B0     		add	sp, sp, #8
 1615              	.LCFI36:
 1616              		.cfi_remember_state
 1617              		.cfi_def_cfa_offset 8
 1618              		@ sp needed
 1619 001e 10BD     		pop	{r4, pc}
 1620              	.LVL185:
 1621              	.L102:
 1622              	.LCFI37:
 1623              		.cfi_restore_state
 996:./FreeRTOS/stream_buffer.c ****             xReturn = ( size_t ) xTempReturn;
 1624              		.loc 1 996 13 is_stmt 1 view .LVU484
 996:./FreeRTOS/stream_buffer.c ****             xReturn = ( size_t ) xTempReturn;
 1625              		.loc 1 996 137 is_stmt 0 view .LVU485
 1626 0020 2368     		ldr	r3, [r4]
 996:./FreeRTOS/stream_buffer.c ****             xReturn = ( size_t ) xTempReturn;
 1627              		.loc 1 996 22 view .LVU486
 1628 0022 0422     		movs	r2, #4
 1629 0024 0DEB0201 		add	r1, sp, r2
 1630 0028 2046     		mov	r0, r4
 1631              	.LVL186:
 996:./FreeRTOS/stream_buffer.c ****             xReturn = ( size_t ) xTempReturn;
 1632              		.loc 1 996 22 view .LVU487
 1633 002a FFF7FEFF 		bl	prvReadBytesFromBuffer
 1634              	.LVL187:
 997:./FreeRTOS/stream_buffer.c ****         }
 1635              		.loc 1 997 13 is_stmt 1 view .LVU488
 997:./FreeRTOS/stream_buffer.c ****         }
 1636              		.loc 1 997 21 is_stmt 0 view .LVU489
 1637 002e 0198     		ldr	r0, [sp, #4]
 1638              	.LVL188:
 997:./FreeRTOS/stream_buffer.c ****         }
 1639              		.loc 1 997 21 view .LVU490
 1640 0030 F4E7     		b	.L93
 1641              		.cfi_endproc
 1642              	.LFE44:
 1644              		.section	.text.xStreamBufferReceiveFromISR,"ax",%progbits
 1645              		.align	1
 1646              		.global	xStreamBufferReceiveFromISR
 1647              		.syntax unified
 1648              		.thumb
 1649              		.thumb_func
 1651              	xStreamBufferReceiveFromISR:
 1652              	.LVL189:
 1653              	.LFB45:
1022:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 66


 1654              		.loc 1 1022 1 is_stmt 1 view -0
 1655              		.cfi_startproc
 1656              		@ args = 0, pretend = 0, frame = 0
 1657              		@ frame_needed = 0, uses_anonymous_args = 0
1022:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1658              		.loc 1 1022 1 is_stmt 0 view .LVU492
 1659 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1660              	.LCFI38:
 1661              		.cfi_def_cfa_offset 24
 1662              		.cfi_offset 4, -24
 1663              		.cfi_offset 5, -20
 1664              		.cfi_offset 6, -16
 1665              		.cfi_offset 7, -12
 1666              		.cfi_offset 8, -8
 1667              		.cfi_offset 14, -4
 1668 0004 82B0     		sub	sp, sp, #8
 1669              	.LCFI39:
 1670              		.cfi_def_cfa_offset 32
 1671 0006 0446     		mov	r4, r0
 1672 0008 0D46     		mov	r5, r1
 1673 000a 1646     		mov	r6, r2
 1674 000c 1F46     		mov	r7, r3
1023:./FreeRTOS/stream_buffer.c ****     size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
 1675              		.loc 1 1023 5 is_stmt 1 view .LVU493
 1676              	.LVL190:
1024:./FreeRTOS/stream_buffer.c **** 
 1677              		.loc 1 1024 5 view .LVU494
1026:./FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1678              		.loc 1 1026 29 view .LVU495
1027:./FreeRTOS/stream_buffer.c **** 
 1679              		.loc 1 1027 35 view .LVU496
1034:./FreeRTOS/stream_buffer.c ****     {
 1680              		.loc 1 1034 5 view .LVU497
1034:./FreeRTOS/stream_buffer.c ****     {
 1681              		.loc 1 1034 25 is_stmt 0 view .LVU498
 1682 000e 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1683              	.LVL191:
1034:./FreeRTOS/stream_buffer.c ****     {
 1684              		.loc 1 1034 7 view .LVU499
 1685 0010 13F0010F 		tst	r3, #1
 1686 0014 0BD0     		beq	.L107
1036:./FreeRTOS/stream_buffer.c ****     }
 1687              		.loc 1 1036 36 view .LVU500
 1688 0016 4FF00408 		mov	r8, #4
 1689              	.L104:
 1690              	.LVL192:
1043:./FreeRTOS/stream_buffer.c **** 
 1691              		.loc 1 1043 5 is_stmt 1 view .LVU501
1043:./FreeRTOS/stream_buffer.c **** 
 1692              		.loc 1 1043 23 is_stmt 0 view .LVU502
 1693 001a 2046     		mov	r0, r4
 1694              	.LVL193:
1043:./FreeRTOS/stream_buffer.c **** 
 1695              		.loc 1 1043 23 view .LVU503
 1696 001c FFF7FEFF 		bl	prvBytesInBuffer
 1697              	.LVL194:
1050:./FreeRTOS/stream_buffer.c ****     {
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 67


 1698              		.loc 1 1050 5 is_stmt 1 view .LVU504
1050:./FreeRTOS/stream_buffer.c ****     {
 1699              		.loc 1 1050 7 is_stmt 0 view .LVU505
 1700 0020 8045     		cmp	r8, r0
 1701 0022 07D3     		bcc	.L110
1024:./FreeRTOS/stream_buffer.c **** 
 1702              		.loc 1 1024 12 view .LVU506
 1703 0024 0025     		movs	r5, #0
 1704              	.LVL195:
1066:./FreeRTOS/stream_buffer.c ****     }
 1705              		.loc 1 1066 33 is_stmt 1 view .LVU507
1069:./FreeRTOS/stream_buffer.c **** 
 1706              		.loc 1 1069 74 view .LVU508
1071:./FreeRTOS/stream_buffer.c **** }
 1707              		.loc 1 1071 5 view .LVU509
 1708              	.L103:
1072:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 1709              		.loc 1 1072 1 is_stmt 0 view .LVU510
 1710 0026 2846     		mov	r0, r5
 1711 0028 02B0     		add	sp, sp, #8
 1712              	.LCFI40:
 1713              		.cfi_remember_state
 1714              		.cfi_def_cfa_offset 24
 1715              		@ sp needed
 1716 002a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1717              	.LVL196:
 1718              	.L107:
 1719              	.LCFI41:
 1720              		.cfi_restore_state
1040:./FreeRTOS/stream_buffer.c ****     }
 1721              		.loc 1 1040 36 view .LVU511
 1722 002e 4FF00008 		mov	r8, #0
 1723 0032 F2E7     		b	.L104
 1724              	.LVL197:
 1725              	.L110:
1052:./FreeRTOS/stream_buffer.c **** 
 1726              		.loc 1 1052 9 is_stmt 1 view .LVU512
1052:./FreeRTOS/stream_buffer.c **** 
 1727              		.loc 1 1052 27 is_stmt 0 view .LVU513
 1728 0034 0346     		mov	r3, r0
 1729 0036 3246     		mov	r2, r6
 1730 0038 2946     		mov	r1, r5
 1731 003a 2046     		mov	r0, r4
 1732              	.LVL198:
1052:./FreeRTOS/stream_buffer.c **** 
 1733              		.loc 1 1052 27 view .LVU514
 1734 003c FFF7FEFF 		bl	prvReadMessageFromBuffer
 1735              	.LVL199:
1055:./FreeRTOS/stream_buffer.c ****         {
 1736              		.loc 1 1055 9 is_stmt 1 view .LVU515
1055:./FreeRTOS/stream_buffer.c ****         {
 1737              		.loc 1 1055 11 is_stmt 0 view .LVU516
 1738 0040 0546     		mov	r5, r0
 1739              	.LVL200:
1055:./FreeRTOS/stream_buffer.c ****         {
 1740              		.loc 1 1055 11 view .LVU517
 1741 0042 0028     		cmp	r0, #0
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 68


 1742 0044 EFD0     		beq	.L103
 1743              	.LBB25:
1057:./FreeRTOS/stream_buffer.c ****         }
 1744              		.loc 1 1057 13 is_stmt 1 view .LVU518
1057:./FreeRTOS/stream_buffer.c ****         }
 1745              		.loc 1 1057 13 view .LVU519
 1746              	.LBB26:
 1747              	.LBI26:
 216:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
 1748              		.loc 2 216 38 view .LVU520
 1749              	.LBB27:
 218:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 1750              		.loc 2 218 9 view .LVU521
 220:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         (
 1751              		.loc 2 220 9 view .LVU522
 1752              		.syntax unified
 1753              	@ 220 "FreeRTOS/portable/GCC/ARM_CM3/portmacro.h" 1
 1754 0046 EFF31186 			mrs r6, basepri											
 1755 004a 4FF0BF03 		mov r3, #191												
 1756 004e 83F31188 		msr basepri, r3											
 1757 0052 BFF36F8F 		isb														
 1758 0056 BFF34F8F 		dsb														
 1759              	
 1760              	@ 0 "" 2
 1761              	.LVL201:
 232:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     }
 1762              		.loc 2 232 9 view .LVU523
 232:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     }
 1763              		.loc 2 232 9 is_stmt 0 view .LVU524
 1764              		.thumb
 1765              		.syntax unified
 1766              	.LBE27:
 1767              	.LBE26:
1057:./FreeRTOS/stream_buffer.c ****         }
 1768              		.loc 1 1057 13 is_stmt 1 view .LVU525
 1769 005a 6369     		ldr	r3, [r4, #20]
 1770 005c 4BB1     		cbz	r3, .L106
1057:./FreeRTOS/stream_buffer.c ****         }
 1771              		.loc 1 1057 13 discriminator 1 view .LVU526
 1772 005e 6069     		ldr	r0, [r4, #20]
 1773              	.LVL202:
1057:./FreeRTOS/stream_buffer.c ****         }
 1774              		.loc 1 1057 13 is_stmt 0 discriminator 1 view .LVU527
 1775 0060 0197     		str	r7, [sp, #4]
 1776 0062 0027     		movs	r7, #0
 1777              	.LVL203:
1057:./FreeRTOS/stream_buffer.c ****         }
 1778              		.loc 1 1057 13 discriminator 1 view .LVU528
 1779 0064 0097     		str	r7, [sp]
 1780 0066 3B46     		mov	r3, r7
 1781 0068 3A46     		mov	r2, r7
 1782 006a 3946     		mov	r1, r7
 1783 006c FFF7FEFF 		bl	xTaskGenericNotifyFromISR
 1784              	.LVL204:
1057:./FreeRTOS/stream_buffer.c ****         }
 1785              		.loc 1 1057 13 is_stmt 1 discriminator 1 view .LVU529
 1786 0070 6761     		str	r7, [r4, #20]
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 69


 1787              	.L106:
1057:./FreeRTOS/stream_buffer.c ****         }
 1788              		.loc 1 1057 13 discriminator 3 view .LVU530
 1789              	.LBB28:
 1790              	.LBI28:
 236:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
 1791              		.loc 2 236 34 discriminator 3 view .LVU531
 1792              	.LBB29:
 1793              		.loc 2 238 9 discriminator 3 view .LVU532
 1794              		.syntax unified
 1795              	@ 238 "FreeRTOS/portable/GCC/ARM_CM3/portmacro.h" 1
 1796 0072 86F31188 			msr basepri, r6	
 1797              	@ 0 "" 2
 239:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         (
 240:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             "	msr basepri, %0	"::"r" ( ulNewMaskValue ) : "memory"
 241:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         );
 242:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     }
 1798              		.loc 2 242 5 is_stmt 0 discriminator 3 view .LVU533
 1799              		.thumb
 1800              		.syntax unified
 1801 0076 D6E7     		b	.L103
 1802              	.LBE29:
 1803              	.LBE28:
 1804              	.LBE25:
 1805              		.cfi_endproc
 1806              	.LFE45:
 1808              		.section	.text.xStreamBufferIsEmpty,"ax",%progbits
 1809              		.align	1
 1810              		.global	xStreamBufferIsEmpty
 1811              		.syntax unified
 1812              		.thumb
 1813              		.thumb_func
 1815              	xStreamBufferIsEmpty:
 1816              	.LVL205:
 1817              	.LFB47:
1128:./FreeRTOS/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1818              		.loc 1 1128 1 is_stmt 1 view -0
 1819              		.cfi_startproc
 1820              		@ args = 0, pretend = 0, frame = 0
 1821              		@ frame_needed = 0, uses_anonymous_args = 0
 1822              		@ link register save eliminated.
1129:./FreeRTOS/stream_buffer.c ****     BaseType_t xReturn;
 1823              		.loc 1 1129 5 view .LVU535
1130:./FreeRTOS/stream_buffer.c ****     size_t xTail;
 1824              		.loc 1 1130 5 view .LVU536
1131:./FreeRTOS/stream_buffer.c **** 
 1825              		.loc 1 1131 5 view .LVU537
1133:./FreeRTOS/stream_buffer.c **** 
 1826              		.loc 1 1133 35 view .LVU538
1136:./FreeRTOS/stream_buffer.c **** 
 1827              		.loc 1 1136 5 view .LVU539
1136:./FreeRTOS/stream_buffer.c **** 
 1828              		.loc 1 1136 11 is_stmt 0 view .LVU540
 1829 0000 0368     		ldr	r3, [r0]
 1830              	.LVL206:
1138:./FreeRTOS/stream_buffer.c ****     {
 1831              		.loc 1 1138 5 is_stmt 1 view .LVU541
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 70


1138:./FreeRTOS/stream_buffer.c ****     {
 1832              		.loc 1 1138 23 is_stmt 0 view .LVU542
 1833 0002 4268     		ldr	r2, [r0, #4]
1138:./FreeRTOS/stream_buffer.c ****     {
 1834              		.loc 1 1138 7 view .LVU543
 1835 0004 9A42     		cmp	r2, r3
 1836 0006 01D0     		beq	.L114
1144:./FreeRTOS/stream_buffer.c ****     }
 1837              		.loc 1 1144 17 view .LVU544
 1838 0008 0020     		movs	r0, #0
 1839              	.LVL207:
1147:./FreeRTOS/stream_buffer.c **** }
 1840              		.loc 1 1147 5 is_stmt 1 view .LVU545
1148:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 1841              		.loc 1 1148 1 is_stmt 0 view .LVU546
 1842 000a 7047     		bx	lr
 1843              	.LVL208:
 1844              	.L114:
1140:./FreeRTOS/stream_buffer.c ****     }
 1845              		.loc 1 1140 17 view .LVU547
 1846 000c 0120     		movs	r0, #1
 1847              	.LVL209:
1140:./FreeRTOS/stream_buffer.c ****     }
 1848              		.loc 1 1140 17 view .LVU548
 1849 000e 7047     		bx	lr
 1850              		.cfi_endproc
 1851              	.LFE47:
 1853              		.section	.text.xStreamBufferIsFull,"ax",%progbits
 1854              		.align	1
 1855              		.global	xStreamBufferIsFull
 1856              		.syntax unified
 1857              		.thumb
 1858              		.thumb_func
 1860              	xStreamBufferIsFull:
 1861              	.LVL210:
 1862              	.LFB48:
1152:./FreeRTOS/stream_buffer.c ****     BaseType_t xReturn;
 1863              		.loc 1 1152 1 is_stmt 1 view -0
 1864              		.cfi_startproc
 1865              		@ args = 0, pretend = 0, frame = 0
 1866              		@ frame_needed = 0, uses_anonymous_args = 0
1152:./FreeRTOS/stream_buffer.c ****     BaseType_t xReturn;
 1867              		.loc 1 1152 1 is_stmt 0 view .LVU550
 1868 0000 10B5     		push	{r4, lr}
 1869              	.LCFI42:
 1870              		.cfi_def_cfa_offset 8
 1871              		.cfi_offset 4, -8
 1872              		.cfi_offset 14, -4
1153:./FreeRTOS/stream_buffer.c ****     size_t xBytesToStoreMessageLength;
 1873              		.loc 1 1153 5 is_stmt 1 view .LVU551
1154:./FreeRTOS/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1874              		.loc 1 1154 5 view .LVU552
1155:./FreeRTOS/stream_buffer.c **** 
 1875              		.loc 1 1155 5 view .LVU553
 1876              	.LVL211:
1157:./FreeRTOS/stream_buffer.c **** 
 1877              		.loc 1 1157 35 view .LVU554
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 71


1163:./FreeRTOS/stream_buffer.c ****     {
 1878              		.loc 1 1163 5 view .LVU555
1163:./FreeRTOS/stream_buffer.c ****     {
 1879              		.loc 1 1163 25 is_stmt 0 view .LVU556
 1880 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
1163:./FreeRTOS/stream_buffer.c ****     {
 1881              		.loc 1 1163 7 view .LVU557
 1882 0004 13F0010F 		tst	r3, #1
 1883 0008 06D0     		beq	.L118
1165:./FreeRTOS/stream_buffer.c ****     }
 1884              		.loc 1 1165 36 view .LVU558
 1885 000a 0424     		movs	r4, #4
 1886              	.L116:
 1887              	.LVL212:
1173:./FreeRTOS/stream_buffer.c ****     {
 1888              		.loc 1 1173 5 is_stmt 1 view .LVU559
1173:./FreeRTOS/stream_buffer.c ****     {
 1889              		.loc 1 1173 9 is_stmt 0 view .LVU560
 1890 000c FFF7FEFF 		bl	xStreamBufferSpacesAvailable
 1891              	.LVL213:
1173:./FreeRTOS/stream_buffer.c ****     {
 1892              		.loc 1 1173 7 view .LVU561
 1893 0010 A042     		cmp	r0, r4
 1894 0012 03D8     		bhi	.L119
1175:./FreeRTOS/stream_buffer.c ****     }
 1895              		.loc 1 1175 17 view .LVU562
 1896 0014 0120     		movs	r0, #1
 1897              	.L115:
1183:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 1898              		.loc 1 1183 1 view .LVU563
 1899 0016 10BD     		pop	{r4, pc}
 1900              	.LVL214:
 1901              	.L118:
1169:./FreeRTOS/stream_buffer.c ****     }
 1902              		.loc 1 1169 36 view .LVU564
 1903 0018 0024     		movs	r4, #0
 1904 001a F7E7     		b	.L116
 1905              	.LVL215:
 1906              	.L119:
1179:./FreeRTOS/stream_buffer.c ****     }
 1907              		.loc 1 1179 17 view .LVU565
 1908 001c 0020     		movs	r0, #0
 1909              	.LVL216:
1182:./FreeRTOS/stream_buffer.c **** }
 1910              		.loc 1 1182 5 is_stmt 1 view .LVU566
1182:./FreeRTOS/stream_buffer.c **** }
 1911              		.loc 1 1182 12 is_stmt 0 view .LVU567
 1912 001e FAE7     		b	.L115
 1913              		.cfi_endproc
 1914              	.LFE48:
 1916              		.section	.text.xStreamBufferSendCompletedFromISR,"ax",%progbits
 1917              		.align	1
 1918              		.global	xStreamBufferSendCompletedFromISR
 1919              		.syntax unified
 1920              		.thumb
 1921              		.thumb_func
 1923              	xStreamBufferSendCompletedFromISR:
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 72


 1924              	.LVL217:
 1925              	.LFB49:
1188:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1926              		.loc 1 1188 1 is_stmt 1 view -0
 1927              		.cfi_startproc
 1928              		@ args = 0, pretend = 0, frame = 0
 1929              		@ frame_needed = 0, uses_anonymous_args = 0
1188:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1930              		.loc 1 1188 1 is_stmt 0 view .LVU569
 1931 0000 70B5     		push	{r4, r5, r6, lr}
 1932              	.LCFI43:
 1933              		.cfi_def_cfa_offset 16
 1934              		.cfi_offset 4, -16
 1935              		.cfi_offset 5, -12
 1936              		.cfi_offset 6, -8
 1937              		.cfi_offset 14, -4
 1938 0002 82B0     		sub	sp, sp, #8
 1939              	.LCFI44:
 1940              		.cfi_def_cfa_offset 24
1189:./FreeRTOS/stream_buffer.c ****     BaseType_t xReturn;
 1941              		.loc 1 1189 5 is_stmt 1 view .LVU570
 1942              	.LVL218:
1190:./FreeRTOS/stream_buffer.c ****     UBaseType_t uxSavedInterruptStatus;
 1943              		.loc 1 1190 5 view .LVU571
1191:./FreeRTOS/stream_buffer.c **** 
 1944              		.loc 1 1191 5 view .LVU572
1193:./FreeRTOS/stream_buffer.c **** 
 1945              		.loc 1 1193 35 view .LVU573
1195:./FreeRTOS/stream_buffer.c ****     {
 1946              		.loc 1 1195 5 view .LVU574
 1947              	.LBB30:
 1948              	.LBI30:
 216:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
 1949              		.loc 2 216 38 view .LVU575
 1950              	.LBB31:
 218:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 1951              		.loc 2 218 9 view .LVU576
 220:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         (
 1952              		.loc 2 220 9 view .LVU577
 1953              		.syntax unified
 1954              	@ 220 "FreeRTOS/portable/GCC/ARM_CM3/portmacro.h" 1
 1955 0004 EFF31185 			mrs r5, basepri											
 1956 0008 4FF0BF03 		mov r3, #191												
 1957 000c 83F31188 		msr basepri, r3											
 1958 0010 BFF36F8F 		isb														
 1959 0014 BFF34F8F 		dsb														
 1960              	
 1961              	@ 0 "" 2
 1962              	.LVL219:
 232:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     }
 1963              		.loc 2 232 9 view .LVU578
 232:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     }
 1964              		.loc 2 232 9 is_stmt 0 view .LVU579
 1965              		.thumb
 1966              		.syntax unified
 1967              	.LBE31:
 1968              	.LBE30:
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 73


1197:./FreeRTOS/stream_buffer.c ****         {
 1969              		.loc 1 1197 9 is_stmt 1 view .LVU580
1197:./FreeRTOS/stream_buffer.c ****         {
 1970              		.loc 1 1197 31 is_stmt 0 view .LVU581
 1971 0018 0369     		ldr	r3, [r0, #16]
1197:./FreeRTOS/stream_buffer.c ****         {
 1972              		.loc 1 1197 11 view .LVU582
 1973 001a 7BB1     		cbz	r3, .L123
 1974 001c 0446     		mov	r4, r0
1199:./FreeRTOS/stream_buffer.c ****                                          ( uint32_t ) 0,
 1975              		.loc 1 1199 13 is_stmt 1 view .LVU583
1199:./FreeRTOS/stream_buffer.c ****                                          ( uint32_t ) 0,
 1976              		.loc 1 1199 22 is_stmt 0 view .LVU584
 1977 001e 0069     		ldr	r0, [r0, #16]
 1978              	.LVL220:
1199:./FreeRTOS/stream_buffer.c ****                                          ( uint32_t ) 0,
 1979              		.loc 1 1199 22 view .LVU585
 1980 0020 0191     		str	r1, [sp, #4]
 1981 0022 0026     		movs	r6, #0
 1982 0024 0096     		str	r6, [sp]
 1983 0026 3346     		mov	r3, r6
 1984 0028 3246     		mov	r2, r6
 1985 002a 3146     		mov	r1, r6
 1986              	.LVL221:
1199:./FreeRTOS/stream_buffer.c ****                                          ( uint32_t ) 0,
 1987              		.loc 1 1199 22 view .LVU586
 1988 002c FFF7FEFF 		bl	xTaskGenericNotifyFromISR
 1989              	.LVL222:
1203:./FreeRTOS/stream_buffer.c ****             xReturn = pdTRUE;
 1990              		.loc 1 1203 13 is_stmt 1 view .LVU587
1203:./FreeRTOS/stream_buffer.c ****             xReturn = pdTRUE;
 1991              		.loc 1 1203 55 is_stmt 0 view .LVU588
 1992 0030 2661     		str	r6, [r4, #16]
1204:./FreeRTOS/stream_buffer.c ****         }
 1993              		.loc 1 1204 13 is_stmt 1 view .LVU589
 1994              	.LVL223:
1204:./FreeRTOS/stream_buffer.c ****         }
 1995              		.loc 1 1204 21 is_stmt 0 view .LVU590
 1996 0032 0120     		movs	r0, #1
 1997              	.LVL224:
 1998              	.L122:
1211:./FreeRTOS/stream_buffer.c **** 
 1999              		.loc 1 1211 5 is_stmt 1 view .LVU591
 2000              	.LBB32:
 2001              	.LBI32:
 236:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
 2002              		.loc 2 236 34 view .LVU592
 2003              	.LBB33:
 238:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         (
 2004              		.loc 2 238 9 view .LVU593
 2005              		.syntax unified
 2006              	@ 238 "FreeRTOS/portable/GCC/ARM_CM3/portmacro.h" 1
 2007 0034 85F31188 			msr basepri, r5	
 2008              	@ 0 "" 2
 2009              		.thumb
 2010              		.syntax unified
 2011              	.LBE33:
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 74


 2012              	.LBE32:
1213:./FreeRTOS/stream_buffer.c **** }
 2013              		.loc 1 1213 5 view .LVU594
1214:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 2014              		.loc 1 1214 1 is_stmt 0 view .LVU595
 2015 0038 02B0     		add	sp, sp, #8
 2016              	.LCFI45:
 2017              		.cfi_remember_state
 2018              		.cfi_def_cfa_offset 16
 2019              		@ sp needed
 2020 003a 70BD     		pop	{r4, r5, r6, pc}
 2021              	.LVL225:
 2022              	.L123:
 2023              	.LCFI46:
 2024              		.cfi_restore_state
1208:./FreeRTOS/stream_buffer.c ****         }
 2025              		.loc 1 1208 21 view .LVU596
 2026 003c 0020     		movs	r0, #0
 2027              	.LVL226:
1208:./FreeRTOS/stream_buffer.c ****         }
 2028              		.loc 1 1208 21 view .LVU597
 2029 003e F9E7     		b	.L122
 2030              		.cfi_endproc
 2031              	.LFE49:
 2033              		.section	.text.xStreamBufferReceiveCompletedFromISR,"ax",%progbits
 2034              		.align	1
 2035              		.global	xStreamBufferReceiveCompletedFromISR
 2036              		.syntax unified
 2037              		.thumb
 2038              		.thumb_func
 2040              	xStreamBufferReceiveCompletedFromISR:
 2041              	.LVL227:
 2042              	.LFB50:
1219:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 2043              		.loc 1 1219 1 is_stmt 1 view -0
 2044              		.cfi_startproc
 2045              		@ args = 0, pretend = 0, frame = 0
 2046              		@ frame_needed = 0, uses_anonymous_args = 0
1219:./FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 2047              		.loc 1 1219 1 is_stmt 0 view .LVU599
 2048 0000 70B5     		push	{r4, r5, r6, lr}
 2049              	.LCFI47:
 2050              		.cfi_def_cfa_offset 16
 2051              		.cfi_offset 4, -16
 2052              		.cfi_offset 5, -12
 2053              		.cfi_offset 6, -8
 2054              		.cfi_offset 14, -4
 2055 0002 82B0     		sub	sp, sp, #8
 2056              	.LCFI48:
 2057              		.cfi_def_cfa_offset 24
1220:./FreeRTOS/stream_buffer.c ****     BaseType_t xReturn;
 2058              		.loc 1 1220 5 is_stmt 1 view .LVU600
 2059              	.LVL228:
1221:./FreeRTOS/stream_buffer.c ****     UBaseType_t uxSavedInterruptStatus;
 2060              		.loc 1 1221 5 view .LVU601
1222:./FreeRTOS/stream_buffer.c **** 
 2061              		.loc 1 1222 5 view .LVU602
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 75


1224:./FreeRTOS/stream_buffer.c **** 
 2062              		.loc 1 1224 35 view .LVU603
1226:./FreeRTOS/stream_buffer.c ****     {
 2063              		.loc 1 1226 5 view .LVU604
 2064              	.LBB34:
 2065              	.LBI34:
 216:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
 2066              		.loc 2 216 38 view .LVU605
 2067              	.LBB35:
 218:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 2068              		.loc 2 218 9 view .LVU606
 220:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         (
 2069              		.loc 2 220 9 view .LVU607
 2070              		.syntax unified
 2071              	@ 220 "FreeRTOS/portable/GCC/ARM_CM3/portmacro.h" 1
 2072 0004 EFF31185 			mrs r5, basepri											
 2073 0008 4FF0BF03 		mov r3, #191												
 2074 000c 83F31188 		msr basepri, r3											
 2075 0010 BFF36F8F 		isb														
 2076 0014 BFF34F8F 		dsb														
 2077              	
 2078              	@ 0 "" 2
 2079              	.LVL229:
 232:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     }
 2080              		.loc 2 232 9 view .LVU608
 232:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     }
 2081              		.loc 2 232 9 is_stmt 0 view .LVU609
 2082              		.thumb
 2083              		.syntax unified
 2084              	.LBE35:
 2085              	.LBE34:
1228:./FreeRTOS/stream_buffer.c ****         {
 2086              		.loc 1 1228 9 is_stmt 1 view .LVU610
1228:./FreeRTOS/stream_buffer.c ****         {
 2087              		.loc 1 1228 31 is_stmt 0 view .LVU611
 2088 0018 4369     		ldr	r3, [r0, #20]
1228:./FreeRTOS/stream_buffer.c ****         {
 2089              		.loc 1 1228 11 view .LVU612
 2090 001a 7BB1     		cbz	r3, .L127
 2091 001c 0446     		mov	r4, r0
1230:./FreeRTOS/stream_buffer.c ****                                          ( uint32_t ) 0,
 2092              		.loc 1 1230 13 is_stmt 1 view .LVU613
1230:./FreeRTOS/stream_buffer.c ****                                          ( uint32_t ) 0,
 2093              		.loc 1 1230 22 is_stmt 0 view .LVU614
 2094 001e 4069     		ldr	r0, [r0, #20]
 2095              	.LVL230:
1230:./FreeRTOS/stream_buffer.c ****                                          ( uint32_t ) 0,
 2096              		.loc 1 1230 22 view .LVU615
 2097 0020 0191     		str	r1, [sp, #4]
 2098 0022 0026     		movs	r6, #0
 2099 0024 0096     		str	r6, [sp]
 2100 0026 3346     		mov	r3, r6
 2101 0028 3246     		mov	r2, r6
 2102 002a 3146     		mov	r1, r6
 2103              	.LVL231:
1230:./FreeRTOS/stream_buffer.c ****                                          ( uint32_t ) 0,
 2104              		.loc 1 1230 22 view .LVU616
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 76


 2105 002c FFF7FEFF 		bl	xTaskGenericNotifyFromISR
 2106              	.LVL232:
1234:./FreeRTOS/stream_buffer.c ****             xReturn = pdTRUE;
 2107              		.loc 1 1234 13 is_stmt 1 view .LVU617
1234:./FreeRTOS/stream_buffer.c ****             xReturn = pdTRUE;
 2108              		.loc 1 1234 52 is_stmt 0 view .LVU618
 2109 0030 6661     		str	r6, [r4, #20]
1235:./FreeRTOS/stream_buffer.c ****         }
 2110              		.loc 1 1235 13 is_stmt 1 view .LVU619
 2111              	.LVL233:
1235:./FreeRTOS/stream_buffer.c ****         }
 2112              		.loc 1 1235 21 is_stmt 0 view .LVU620
 2113 0032 0120     		movs	r0, #1
 2114              	.LVL234:
 2115              	.L126:
1242:./FreeRTOS/stream_buffer.c **** 
 2116              		.loc 1 1242 5 is_stmt 1 view .LVU621
 2117              	.LBB36:
 2118              	.LBI36:
 236:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
 2119              		.loc 2 236 34 view .LVU622
 2120              	.LBB37:
 238:FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         (
 2121              		.loc 2 238 9 view .LVU623
 2122              		.syntax unified
 2123              	@ 238 "FreeRTOS/portable/GCC/ARM_CM3/portmacro.h" 1
 2124 0034 85F31188 			msr basepri, r5	
 2125              	@ 0 "" 2
 2126              		.thumb
 2127              		.syntax unified
 2128              	.LBE37:
 2129              	.LBE36:
1244:./FreeRTOS/stream_buffer.c **** }
 2130              		.loc 1 1244 5 view .LVU624
1245:./FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 2131              		.loc 1 1245 1 is_stmt 0 view .LVU625
 2132 0038 02B0     		add	sp, sp, #8
 2133              	.LCFI49:
 2134              		.cfi_remember_state
 2135              		.cfi_def_cfa_offset 16
 2136              		@ sp needed
 2137 003a 70BD     		pop	{r4, r5, r6, pc}
 2138              	.LVL235:
 2139              	.L127:
 2140              	.LCFI50:
 2141              		.cfi_restore_state
1239:./FreeRTOS/stream_buffer.c ****         }
 2142              		.loc 1 1239 21 view .LVU626
 2143 003c 0020     		movs	r0, #0
 2144              	.LVL236:
1239:./FreeRTOS/stream_buffer.c ****         }
 2145              		.loc 1 1239 21 view .LVU627
 2146 003e F9E7     		b	.L126
 2147              		.cfi_endproc
 2148              	.LFE50:
 2150              		.text
 2151              	.Letext0:
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 77


 2152              		.file 3 "c:\\vscode_tool_chain\\gcc\\12.2 mpacbti-rel1\\arm-none-eabi\\include\\machine\\_default_
 2153              		.file 4 "c:\\vscode_tool_chain\\gcc\\12.2 mpacbti-rel1\\arm-none-eabi\\include\\sys\\_stdint.h"
 2154              		.file 5 "c:\\vscode_tool_chain\\gcc\\12.2 mpacbti-rel1\\lib\\gcc\\arm-none-eabi\\12.2.1\\include\\
 2155              		.file 6 "FreeRTOS/include/task.h"
 2156              		.file 7 "FreeRTOS/include/stream_buffer.h"
 2157              		.file 8 "c:\\vscode_tool_chain\\gcc\\12.2 mpacbti-rel1\\arm-none-eabi\\include\\string.h"
 2158              		.file 9 "FreeRTOS/include/portable.h"
 2159              		.file 10 "<built-in>"
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 78


DEFINED SYMBOLS
                            *ABS*:00000000 stream_buffer.c
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:19     .text.prvBytesInBuffer:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:24     .text.prvBytesInBuffer:00000000 prvBytesInBuffer
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:65     .text.prvInitialiseNewStreamBuffer:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:70     .text.prvInitialiseNewStreamBuffer:00000000 prvInitialiseNewStreamBuffer
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:123    .text.prvWriteBytesToBuffer:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:128    .text.prvWriteBytesToBuffer:00000000 prvWriteBytesToBuffer
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:212    .text.prvWriteMessageToBuffer:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:217    .text.prvWriteMessageToBuffer:00000000 prvWriteMessageToBuffer
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:325    .text.prvReadBytesFromBuffer:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:330    .text.prvReadBytesFromBuffer:00000000 prvReadBytesFromBuffer
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:416    .text.prvReadMessageFromBuffer:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:421    .text.prvReadMessageFromBuffer:00000000 prvReadMessageFromBuffer
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:535    .text.xStreamBufferGenericCreate:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:541    .text.xStreamBufferGenericCreate:00000000 xStreamBufferGenericCreate
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:636    .text.vStreamBufferDelete:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:642    .text.vStreamBufferDelete:00000000 vStreamBufferDelete
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:685    .text.xStreamBufferReset:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:691    .text.xStreamBufferReset:00000000 xStreamBufferReset
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:774    .text.xStreamBufferSetTriggerLevel:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:780    .text.xStreamBufferSetTriggerLevel:00000000 xStreamBufferSetTriggerLevel
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:827    .text.xStreamBufferSpacesAvailable:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:833    .text.xStreamBufferSpacesAvailable:00000000 xStreamBufferSpacesAvailable
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:900    .text.xStreamBufferBytesAvailable:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:906    .text.xStreamBufferBytesAvailable:00000000 xStreamBufferBytesAvailable
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:934    .text.xStreamBufferSend:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:940    .text.xStreamBufferSend:00000000 xStreamBufferSend
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:1184   .text.xStreamBufferSendFromISR:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:1190   .text.xStreamBufferSendFromISR:00000000 xStreamBufferSendFromISR
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:1358   .text.xStreamBufferReceive:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:1364   .text.xStreamBufferReceive:00000000 xStreamBufferReceive
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:1560   .text.xStreamBufferNextMessageLengthBytes:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:1566   .text.xStreamBufferNextMessageLengthBytes:00000000 xStreamBufferNextMessageLengthBytes
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:1645   .text.xStreamBufferReceiveFromISR:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:1651   .text.xStreamBufferReceiveFromISR:00000000 xStreamBufferReceiveFromISR
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:1809   .text.xStreamBufferIsEmpty:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:1815   .text.xStreamBufferIsEmpty:00000000 xStreamBufferIsEmpty
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:1854   .text.xStreamBufferIsFull:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:1860   .text.xStreamBufferIsFull:00000000 xStreamBufferIsFull
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:1917   .text.xStreamBufferSendCompletedFromISR:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:1923   .text.xStreamBufferSendCompletedFromISR:00000000 xStreamBufferSendCompletedFromISR
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:2034   .text.xStreamBufferReceiveCompletedFromISR:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccepjLLi.s:2040   .text.xStreamBufferReceiveCompletedFromISR:00000000 xStreamBufferReceiveCompletedFromISR

UNDEFINED SYMBOLS
memset
memcpy
pvPortMalloc
vPortFree
vPortEnterCritical
vPortExitCritical
vTaskSetTimeOutState
xTaskGenericNotifyStateClear
xTaskGetCurrentTaskHandle
xTaskGenericNotifyWait
xTaskCheckForTimeOut
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccepjLLi.s 			page 79


vTaskSuspendAll
xTaskGenericNotify
xTaskResumeAll
xTaskGenericNotifyFromISR
