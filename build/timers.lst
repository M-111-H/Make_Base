ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"timers.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "./FreeRTOS/timers.c"
  18              		.section	.text.prvGetNextExpireTime,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	prvGetNextExpireTime:
  25              	.LVL0:
  26              	.LFB49:
   1:./FreeRTOS/timers.c **** /*
   2:./FreeRTOS/timers.c ****  * FreeRTOS Kernel V10.5.1
   3:./FreeRTOS/timers.c ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:./FreeRTOS/timers.c ****  *
   5:./FreeRTOS/timers.c ****  * SPDX-License-Identifier: MIT
   6:./FreeRTOS/timers.c ****  *
   7:./FreeRTOS/timers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:./FreeRTOS/timers.c ****  * this software and associated documentation files (the "Software"), to deal in
   9:./FreeRTOS/timers.c ****  * the Software without restriction, including without limitation the rights to
  10:./FreeRTOS/timers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:./FreeRTOS/timers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:./FreeRTOS/timers.c ****  * subject to the following conditions:
  13:./FreeRTOS/timers.c ****  *
  14:./FreeRTOS/timers.c ****  * The above copyright notice and this permission notice shall be included in all
  15:./FreeRTOS/timers.c ****  * copies or substantial portions of the Software.
  16:./FreeRTOS/timers.c ****  *
  17:./FreeRTOS/timers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:./FreeRTOS/timers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:./FreeRTOS/timers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:./FreeRTOS/timers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:./FreeRTOS/timers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:./FreeRTOS/timers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:./FreeRTOS/timers.c ****  *
  24:./FreeRTOS/timers.c ****  * https://www.FreeRTOS.org
  25:./FreeRTOS/timers.c ****  * https://github.com/FreeRTOS
  26:./FreeRTOS/timers.c ****  *
  27:./FreeRTOS/timers.c ****  */
  28:./FreeRTOS/timers.c **** 
  29:./FreeRTOS/timers.c **** /* Standard includes. */
  30:./FreeRTOS/timers.c **** #include <stdlib.h>
  31:./FreeRTOS/timers.c **** 
  32:./FreeRTOS/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 2


  33:./FreeRTOS/timers.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  34:./FreeRTOS/timers.c ****  * task.h is included from an application file. */
  35:./FreeRTOS/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:./FreeRTOS/timers.c **** 
  37:./FreeRTOS/timers.c **** #include "FreeRTOS.h"
  38:./FreeRTOS/timers.c **** #include "task.h"
  39:./FreeRTOS/timers.c **** #include "queue.h"
  40:./FreeRTOS/timers.c **** #include "timers.h"
  41:./FreeRTOS/timers.c **** 
  42:./FreeRTOS/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  43:./FreeRTOS/timers.c ****     #error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function availabl
  44:./FreeRTOS/timers.c **** #endif
  45:./FreeRTOS/timers.c **** 
  46:./FreeRTOS/timers.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  47:./FreeRTOS/timers.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  48:./FreeRTOS/timers.c ****  * for the header files above, but not in this file, in order to generate the
  49:./FreeRTOS/timers.c ****  * correct privileged Vs unprivileged linkage and placement. */
  50:./FreeRTOS/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e9021 !e961 !e750. */
  51:./FreeRTOS/timers.c **** 
  52:./FreeRTOS/timers.c **** 
  53:./FreeRTOS/timers.c **** /* This entire source file will be skipped if the application is not configured
  54:./FreeRTOS/timers.c ****  * to include software timer functionality.  This #if is closed at the very bottom
  55:./FreeRTOS/timers.c ****  * of this file.  If you want to include software timer functionality then ensure
  56:./FreeRTOS/timers.c ****  * configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  57:./FreeRTOS/timers.c **** #if ( configUSE_TIMERS == 1 )
  58:./FreeRTOS/timers.c **** 
  59:./FreeRTOS/timers.c **** /* Misc definitions. */
  60:./FreeRTOS/timers.c ****     #define tmrNO_DELAY                    ( ( TickType_t ) 0U )
  61:./FreeRTOS/timers.c ****     #define tmrMAX_TIME_BEFORE_OVERFLOW    ( ( TickType_t ) -1 )
  62:./FreeRTOS/timers.c **** 
  63:./FreeRTOS/timers.c **** /* The name assigned to the timer service task.  This can be overridden by
  64:./FreeRTOS/timers.c ****  * defining trmTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  65:./FreeRTOS/timers.c ****     #ifndef configTIMER_SERVICE_TASK_NAME
  66:./FreeRTOS/timers.c ****         #define configTIMER_SERVICE_TASK_NAME    "Tmr Svc"
  67:./FreeRTOS/timers.c ****     #endif
  68:./FreeRTOS/timers.c **** 
  69:./FreeRTOS/timers.c **** /* Bit definitions used in the ucStatus member of a timer structure. */
  70:./FreeRTOS/timers.c ****     #define tmrSTATUS_IS_ACTIVE                  ( ( uint8_t ) 0x01 )
  71:./FreeRTOS/timers.c ****     #define tmrSTATUS_IS_STATICALLY_ALLOCATED    ( ( uint8_t ) 0x02 )
  72:./FreeRTOS/timers.c ****     #define tmrSTATUS_IS_AUTORELOAD              ( ( uint8_t ) 0x04 )
  73:./FreeRTOS/timers.c **** 
  74:./FreeRTOS/timers.c **** /* The definition of the timers themselves. */
  75:./FreeRTOS/timers.c ****     typedef struct tmrTimerControl                  /* The old naming convention is used to prevent
  76:./FreeRTOS/timers.c ****     {
  77:./FreeRTOS/timers.c ****         const char * pcTimerName;                   /*<< Text name.  This is not used by the kernel
  78:./FreeRTOS/timers.c ****         ListItem_t xTimerListItem;                  /*<< Standard linked list item as used by all k
  79:./FreeRTOS/timers.c ****         TickType_t xTimerPeriodInTicks;             /*<< How quickly and often the timer expires. *
  80:./FreeRTOS/timers.c ****         void * pvTimerID;                           /*<< An ID to identify the timer.  This allows 
  81:./FreeRTOS/timers.c ****         TimerCallbackFunction_t pxCallbackFunction; /*<< The function that will be called when the 
  82:./FreeRTOS/timers.c ****         #if ( configUSE_TRACE_FACILITY == 1 )
  83:./FreeRTOS/timers.c ****             UBaseType_t uxTimerNumber;              /*<< An ID assigned by trace tools such as Free
  84:./FreeRTOS/timers.c ****         #endif
  85:./FreeRTOS/timers.c ****         uint8_t ucStatus;                           /*<< Holds bits to say if the timer was statica
  86:./FreeRTOS/timers.c ****     } xTIMER;
  87:./FreeRTOS/timers.c **** 
  88:./FreeRTOS/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  89:./FreeRTOS/timers.c ****  * name below to enable the use of older kernel aware debuggers. */
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 3


  90:./FreeRTOS/timers.c ****     typedef xTIMER Timer_t;
  91:./FreeRTOS/timers.c **** 
  92:./FreeRTOS/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
  93:./FreeRTOS/timers.c ****  * Two types of message can be queued - messages that manipulate a software timer,
  94:./FreeRTOS/timers.c ****  * and messages that request the execution of a non-timer related callback.  The
  95:./FreeRTOS/timers.c ****  * two message types are defined in two separate structures, xTimerParametersType
  96:./FreeRTOS/timers.c ****  * and xCallbackParametersType respectively. */
  97:./FreeRTOS/timers.c ****     typedef struct tmrTimerParameters
  98:./FreeRTOS/timers.c ****     {
  99:./FreeRTOS/timers.c ****         TickType_t xMessageValue; /*<< An optional value used by a subset of commands, for example,
 100:./FreeRTOS/timers.c ****         Timer_t * pxTimer;        /*<< The timer to which the command will be applied. */
 101:./FreeRTOS/timers.c ****     } TimerParameter_t;
 102:./FreeRTOS/timers.c **** 
 103:./FreeRTOS/timers.c **** 
 104:./FreeRTOS/timers.c ****     typedef struct tmrCallbackParameters
 105:./FreeRTOS/timers.c ****     {
 106:./FreeRTOS/timers.c ****         PendedFunction_t pxCallbackFunction; /* << The callback function to execute. */
 107:./FreeRTOS/timers.c ****         void * pvParameter1;                 /* << The value that will be used as the callback func
 108:./FreeRTOS/timers.c ****         uint32_t ulParameter2;               /* << The value that will be used as the callback func
 109:./FreeRTOS/timers.c ****     } CallbackParameters_t;
 110:./FreeRTOS/timers.c **** 
 111:./FreeRTOS/timers.c **** /* The structure that contains the two message types, along with an identifier
 112:./FreeRTOS/timers.c ****  * that is used to determine which message type is valid. */
 113:./FreeRTOS/timers.c ****     typedef struct tmrTimerQueueMessage
 114:./FreeRTOS/timers.c ****     {
 115:./FreeRTOS/timers.c ****         BaseType_t xMessageID; /*<< The command being sent to the timer service task. */
 116:./FreeRTOS/timers.c ****         union
 117:./FreeRTOS/timers.c ****         {
 118:./FreeRTOS/timers.c ****             TimerParameter_t xTimerParameters;
 119:./FreeRTOS/timers.c **** 
 120:./FreeRTOS/timers.c ****             /* Don't include xCallbackParameters if it is not going to be used as
 121:./FreeRTOS/timers.c ****              * it makes the structure (and therefore the timer queue) larger. */
 122:./FreeRTOS/timers.c ****             #if ( INCLUDE_xTimerPendFunctionCall == 1 )
 123:./FreeRTOS/timers.c ****                 CallbackParameters_t xCallbackParameters;
 124:./FreeRTOS/timers.c ****             #endif /* INCLUDE_xTimerPendFunctionCall */
 125:./FreeRTOS/timers.c ****         } u;
 126:./FreeRTOS/timers.c ****     } DaemonTaskMessage_t;
 127:./FreeRTOS/timers.c **** 
 128:./FreeRTOS/timers.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 129:./FreeRTOS/timers.c ****  * which static variables must be declared volatile. */
 130:./FreeRTOS/timers.c **** 
 131:./FreeRTOS/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 132:./FreeRTOS/timers.c ****  * time order, with the nearest expiry time at the front of the list.  Only the
 133:./FreeRTOS/timers.c ****  * timer service task is allowed to access these lists.
 134:./FreeRTOS/timers.c ****  * xActiveTimerList1 and xActiveTimerList2 could be at function scope but that
 135:./FreeRTOS/timers.c ****  * breaks some kernel aware debuggers, and debuggers that reply on removing the
 136:./FreeRTOS/timers.c ****  * static qualifier. */
 137:./FreeRTOS/timers.c ****     PRIVILEGED_DATA static List_t xActiveTimerList1;
 138:./FreeRTOS/timers.c ****     PRIVILEGED_DATA static List_t xActiveTimerList2;
 139:./FreeRTOS/timers.c ****     PRIVILEGED_DATA static List_t * pxCurrentTimerList;
 140:./FreeRTOS/timers.c ****     PRIVILEGED_DATA static List_t * pxOverflowTimerList;
 141:./FreeRTOS/timers.c **** 
 142:./FreeRTOS/timers.c **** /* A queue that is used to send commands to the timer service task. */
 143:./FreeRTOS/timers.c ****     PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 144:./FreeRTOS/timers.c ****     PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 145:./FreeRTOS/timers.c **** 
 146:./FreeRTOS/timers.c **** /*lint -restore */
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 4


 147:./FreeRTOS/timers.c **** 
 148:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 149:./FreeRTOS/timers.c **** 
 150:./FreeRTOS/timers.c **** /*
 151:./FreeRTOS/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 152:./FreeRTOS/timers.c ****  * been initialised already.
 153:./FreeRTOS/timers.c ****  */
 154:./FreeRTOS/timers.c ****     static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 155:./FreeRTOS/timers.c **** 
 156:./FreeRTOS/timers.c **** /*
 157:./FreeRTOS/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 158:./FreeRTOS/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 159:./FreeRTOS/timers.c ****  * xTimerQueue queue.
 160:./FreeRTOS/timers.c ****  */
 161:./FreeRTOS/timers.c ****     static portTASK_FUNCTION_PROTO( prvTimerTask, pvParameters ) PRIVILEGED_FUNCTION;
 162:./FreeRTOS/timers.c **** 
 163:./FreeRTOS/timers.c **** /*
 164:./FreeRTOS/timers.c ****  * Called by the timer service task to interpret and process a command it
 165:./FreeRTOS/timers.c ****  * received on the timer queue.
 166:./FreeRTOS/timers.c ****  */
 167:./FreeRTOS/timers.c ****     static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 168:./FreeRTOS/timers.c **** 
 169:./FreeRTOS/timers.c **** /*
 170:./FreeRTOS/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 171:./FreeRTOS/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 172:./FreeRTOS/timers.c ****  */
 173:./FreeRTOS/timers.c ****     static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer,
 174:./FreeRTOS/timers.c ****                                                   const TickType_t xNextExpiryTime,
 175:./FreeRTOS/timers.c ****                                                   const TickType_t xTimeNow,
 176:./FreeRTOS/timers.c ****                                                   const TickType_t xCommandTime ) PRIVILEGED_FUNCTI
 177:./FreeRTOS/timers.c **** 
 178:./FreeRTOS/timers.c **** /*
 179:./FreeRTOS/timers.c ****  * Reload the specified auto-reload timer.  If the reloading is backlogged,
 180:./FreeRTOS/timers.c ****  * clear the backlog, calling the callback for each additional reload.  When
 181:./FreeRTOS/timers.c ****  * this function returns, the next expiry time is after xTimeNow.
 182:./FreeRTOS/timers.c ****  */
 183:./FreeRTOS/timers.c ****     static void prvReloadTimer( Timer_t * const pxTimer,
 184:./FreeRTOS/timers.c ****                                 TickType_t xExpiredTime,
 185:./FreeRTOS/timers.c ****                                 const TickType_t xTimeNow ) PRIVILEGED_FUNCTION;
 186:./FreeRTOS/timers.c **** 
 187:./FreeRTOS/timers.c **** /*
 188:./FreeRTOS/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 189:./FreeRTOS/timers.c ****  * auto-reload timer, then call its callback.
 190:./FreeRTOS/timers.c ****  */
 191:./FreeRTOS/timers.c ****     static void prvProcessExpiredTimer( const TickType_t xNextExpireTime,
 192:./FreeRTOS/timers.c ****                                         const TickType_t xTimeNow ) PRIVILEGED_FUNCTION;
 193:./FreeRTOS/timers.c **** 
 194:./FreeRTOS/timers.c **** /*
 195:./FreeRTOS/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 196:./FreeRTOS/timers.c ****  * current timer list does not still reference some timers.
 197:./FreeRTOS/timers.c ****  */
 198:./FreeRTOS/timers.c ****     static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 199:./FreeRTOS/timers.c **** 
 200:./FreeRTOS/timers.c **** /*
 201:./FreeRTOS/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 202:./FreeRTOS/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 203:./FreeRTOS/timers.c ****  */
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 5


 204:./FreeRTOS/timers.c ****     static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FU
 205:./FreeRTOS/timers.c **** 
 206:./FreeRTOS/timers.c **** /*
 207:./FreeRTOS/timers.c ****  * If the timer list contains any active timers then return the expire time of
 208:./FreeRTOS/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
 209:./FreeRTOS/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 210:./FreeRTOS/timers.c ****  * to pdTRUE.
 211:./FreeRTOS/timers.c ****  */
 212:./FreeRTOS/timers.c ****     static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION
 213:./FreeRTOS/timers.c **** 
 214:./FreeRTOS/timers.c **** /*
 215:./FreeRTOS/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 216:./FreeRTOS/timers.c ****  * until either a timer does expire or a command is received.
 217:./FreeRTOS/timers.c ****  */
 218:./FreeRTOS/timers.c ****     static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime,
 219:./FreeRTOS/timers.c ****                                             BaseType_t xListWasEmpty ) PRIVILEGED_FUNCTION;
 220:./FreeRTOS/timers.c **** 
 221:./FreeRTOS/timers.c **** /*
 222:./FreeRTOS/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 223:./FreeRTOS/timers.c ****  * dynamically to fill in the structure's members.
 224:./FreeRTOS/timers.c ****  */
 225:./FreeRTOS/timers.c ****     static void prvInitialiseNewTimer( const char * const pcTimerName, /*lint !e971 Unqualified cha
 226:./FreeRTOS/timers.c ****                                        const TickType_t xTimerPeriodInTicks,
 227:./FreeRTOS/timers.c ****                                        const BaseType_t xAutoReload,
 228:./FreeRTOS/timers.c ****                                        void * const pvTimerID,
 229:./FreeRTOS/timers.c ****                                        TimerCallbackFunction_t pxCallbackFunction,
 230:./FreeRTOS/timers.c ****                                        Timer_t * pxNewTimer ) PRIVILEGED_FUNCTION;
 231:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 232:./FreeRTOS/timers.c **** 
 233:./FreeRTOS/timers.c ****     BaseType_t xTimerCreateTimerTask( void )
 234:./FreeRTOS/timers.c ****     {
 235:./FreeRTOS/timers.c ****         BaseType_t xReturn = pdFAIL;
 236:./FreeRTOS/timers.c **** 
 237:./FreeRTOS/timers.c ****         /* This function is called when the scheduler is started if
 238:./FreeRTOS/timers.c ****          * configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 239:./FreeRTOS/timers.c ****          * timer service task has been created/initialised.  If timers have already
 240:./FreeRTOS/timers.c ****          * been created then the initialisation will already have been performed. */
 241:./FreeRTOS/timers.c ****         prvCheckForValidListAndQueue();
 242:./FreeRTOS/timers.c **** 
 243:./FreeRTOS/timers.c ****         if( xTimerQueue != NULL )
 244:./FreeRTOS/timers.c ****         {
 245:./FreeRTOS/timers.c ****             #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 246:./FreeRTOS/timers.c ****             {
 247:./FreeRTOS/timers.c ****                 StaticTask_t * pxTimerTaskTCBBuffer = NULL;
 248:./FreeRTOS/timers.c ****                 StackType_t * pxTimerTaskStackBuffer = NULL;
 249:./FreeRTOS/timers.c ****                 uint32_t ulTimerTaskStackSize;
 250:./FreeRTOS/timers.c **** 
 251:./FreeRTOS/timers.c ****                 vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ul
 252:./FreeRTOS/timers.c ****                 xTimerTaskHandle = xTaskCreateStatic( prvTimerTask,
 253:./FreeRTOS/timers.c ****                                                       configTIMER_SERVICE_TASK_NAME,
 254:./FreeRTOS/timers.c ****                                                       ulTimerTaskStackSize,
 255:./FreeRTOS/timers.c ****                                                       NULL,
 256:./FreeRTOS/timers.c ****                                                       ( ( UBaseType_t ) configTIMER_TASK_PRIORITY )
 257:./FreeRTOS/timers.c ****                                                       pxTimerTaskStackBuffer,
 258:./FreeRTOS/timers.c ****                                                       pxTimerTaskTCBBuffer );
 259:./FreeRTOS/timers.c **** 
 260:./FreeRTOS/timers.c ****                 if( xTimerTaskHandle != NULL )
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 6


 261:./FreeRTOS/timers.c ****                 {
 262:./FreeRTOS/timers.c ****                     xReturn = pdPASS;
 263:./FreeRTOS/timers.c ****                 }
 264:./FreeRTOS/timers.c ****             }
 265:./FreeRTOS/timers.c ****             #else /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 266:./FreeRTOS/timers.c ****             {
 267:./FreeRTOS/timers.c ****                 xReturn = xTaskCreate( prvTimerTask,
 268:./FreeRTOS/timers.c ****                                        configTIMER_SERVICE_TASK_NAME,
 269:./FreeRTOS/timers.c ****                                        configTIMER_TASK_STACK_DEPTH,
 270:./FreeRTOS/timers.c ****                                        NULL,
 271:./FreeRTOS/timers.c ****                                        ( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEG
 272:./FreeRTOS/timers.c ****                                        &xTimerTaskHandle );
 273:./FreeRTOS/timers.c ****             }
 274:./FreeRTOS/timers.c ****             #endif /* configSUPPORT_STATIC_ALLOCATION */
 275:./FreeRTOS/timers.c ****         }
 276:./FreeRTOS/timers.c ****         else
 277:./FreeRTOS/timers.c ****         {
 278:./FreeRTOS/timers.c ****             mtCOVERAGE_TEST_MARKER();
 279:./FreeRTOS/timers.c ****         }
 280:./FreeRTOS/timers.c **** 
 281:./FreeRTOS/timers.c ****         configASSERT( xReturn );
 282:./FreeRTOS/timers.c ****         return xReturn;
 283:./FreeRTOS/timers.c ****     }
 284:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 285:./FreeRTOS/timers.c **** 
 286:./FreeRTOS/timers.c ****     #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 287:./FreeRTOS/timers.c **** 
 288:./FreeRTOS/timers.c ****         TimerHandle_t xTimerCreate( const char * const pcTimerName, /*lint !e971 Unqualified char t
 289:./FreeRTOS/timers.c ****                                     const TickType_t xTimerPeriodInTicks,
 290:./FreeRTOS/timers.c ****                                     const BaseType_t xAutoReload,
 291:./FreeRTOS/timers.c ****                                     void * const pvTimerID,
 292:./FreeRTOS/timers.c ****                                     TimerCallbackFunction_t pxCallbackFunction )
 293:./FreeRTOS/timers.c ****         {
 294:./FreeRTOS/timers.c ****             Timer_t * pxNewTimer;
 295:./FreeRTOS/timers.c **** 
 296:./FreeRTOS/timers.c ****             pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) ); /*lint !e9087 !e9079 All 
 297:./FreeRTOS/timers.c **** 
 298:./FreeRTOS/timers.c ****             if( pxNewTimer != NULL )
 299:./FreeRTOS/timers.c ****             {
 300:./FreeRTOS/timers.c ****                 /* Status is thus far zero as the timer is not created statically
 301:./FreeRTOS/timers.c ****                  * and has not been started.  The auto-reload bit may get set in
 302:./FreeRTOS/timers.c ****                  * prvInitialiseNewTimer. */
 303:./FreeRTOS/timers.c ****                 pxNewTimer->ucStatus = 0x00;
 304:./FreeRTOS/timers.c ****                 prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, xAutoReload, pvTimerID, px
 305:./FreeRTOS/timers.c ****             }
 306:./FreeRTOS/timers.c **** 
 307:./FreeRTOS/timers.c ****             return pxNewTimer;
 308:./FreeRTOS/timers.c ****         }
 309:./FreeRTOS/timers.c **** 
 310:./FreeRTOS/timers.c ****     #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 311:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 312:./FreeRTOS/timers.c **** 
 313:./FreeRTOS/timers.c ****     #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 314:./FreeRTOS/timers.c **** 
 315:./FreeRTOS/timers.c ****         TimerHandle_t xTimerCreateStatic( const char * const pcTimerName, /*lint !e971 Unqualified 
 316:./FreeRTOS/timers.c ****                                           const TickType_t xTimerPeriodInTicks,
 317:./FreeRTOS/timers.c ****                                           const BaseType_t xAutoReload,
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 7


 318:./FreeRTOS/timers.c ****                                           void * const pvTimerID,
 319:./FreeRTOS/timers.c ****                                           TimerCallbackFunction_t pxCallbackFunction,
 320:./FreeRTOS/timers.c ****                                           StaticTimer_t * pxTimerBuffer )
 321:./FreeRTOS/timers.c ****         {
 322:./FreeRTOS/timers.c ****             Timer_t * pxNewTimer;
 323:./FreeRTOS/timers.c **** 
 324:./FreeRTOS/timers.c ****             #if ( configASSERT_DEFINED == 1 )
 325:./FreeRTOS/timers.c ****             {
 326:./FreeRTOS/timers.c ****                 /* Sanity check that the size of the structure used to declare a
 327:./FreeRTOS/timers.c ****                  * variable of type StaticTimer_t equals the size of the real timer
 328:./FreeRTOS/timers.c ****                  * structure. */
 329:./FreeRTOS/timers.c ****                 volatile size_t xSize = sizeof( StaticTimer_t );
 330:./FreeRTOS/timers.c ****                 configASSERT( xSize == sizeof( Timer_t ) );
 331:./FreeRTOS/timers.c ****                 ( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 332:./FreeRTOS/timers.c ****             }
 333:./FreeRTOS/timers.c ****             #endif /* configASSERT_DEFINED */
 334:./FreeRTOS/timers.c **** 
 335:./FreeRTOS/timers.c ****             /* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 336:./FreeRTOS/timers.c ****             configASSERT( pxTimerBuffer );
 337:./FreeRTOS/timers.c ****             pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointe
 338:./FreeRTOS/timers.c **** 
 339:./FreeRTOS/timers.c ****             if( pxNewTimer != NULL )
 340:./FreeRTOS/timers.c ****             {
 341:./FreeRTOS/timers.c ****                 /* Timers can be created statically or dynamically so note this
 342:./FreeRTOS/timers.c ****                  * timer was created statically in case it is later deleted.  The
 343:./FreeRTOS/timers.c ****                  * auto-reload bit may get set in prvInitialiseNewTimer(). */
 344:./FreeRTOS/timers.c ****                 pxNewTimer->ucStatus = tmrSTATUS_IS_STATICALLY_ALLOCATED;
 345:./FreeRTOS/timers.c **** 
 346:./FreeRTOS/timers.c ****                 prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, xAutoReload, pvTimerID, px
 347:./FreeRTOS/timers.c ****             }
 348:./FreeRTOS/timers.c **** 
 349:./FreeRTOS/timers.c ****             return pxNewTimer;
 350:./FreeRTOS/timers.c ****         }
 351:./FreeRTOS/timers.c **** 
 352:./FreeRTOS/timers.c ****     #endif /* configSUPPORT_STATIC_ALLOCATION */
 353:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 354:./FreeRTOS/timers.c **** 
 355:./FreeRTOS/timers.c ****     static void prvInitialiseNewTimer( const char * const pcTimerName, /*lint !e971 Unqualified cha
 356:./FreeRTOS/timers.c ****                                        const TickType_t xTimerPeriodInTicks,
 357:./FreeRTOS/timers.c ****                                        const BaseType_t xAutoReload,
 358:./FreeRTOS/timers.c ****                                        void * const pvTimerID,
 359:./FreeRTOS/timers.c ****                                        TimerCallbackFunction_t pxCallbackFunction,
 360:./FreeRTOS/timers.c ****                                        Timer_t * pxNewTimer )
 361:./FreeRTOS/timers.c ****     {
 362:./FreeRTOS/timers.c ****         /* 0 is not a valid value for xTimerPeriodInTicks. */
 363:./FreeRTOS/timers.c ****         configASSERT( ( xTimerPeriodInTicks > 0 ) );
 364:./FreeRTOS/timers.c **** 
 365:./FreeRTOS/timers.c ****         /* Ensure the infrastructure used by the timer service task has been
 366:./FreeRTOS/timers.c ****          * created/initialised. */
 367:./FreeRTOS/timers.c ****         prvCheckForValidListAndQueue();
 368:./FreeRTOS/timers.c **** 
 369:./FreeRTOS/timers.c ****         /* Initialise the timer structure members using the function
 370:./FreeRTOS/timers.c ****          * parameters. */
 371:./FreeRTOS/timers.c ****         pxNewTimer->pcTimerName = pcTimerName;
 372:./FreeRTOS/timers.c ****         pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 373:./FreeRTOS/timers.c ****         pxNewTimer->pvTimerID = pvTimerID;
 374:./FreeRTOS/timers.c ****         pxNewTimer->pxCallbackFunction = pxCallbackFunction;
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 8


 375:./FreeRTOS/timers.c ****         vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 376:./FreeRTOS/timers.c **** 
 377:./FreeRTOS/timers.c ****         if( xAutoReload != pdFALSE )
 378:./FreeRTOS/timers.c ****         {
 379:./FreeRTOS/timers.c ****             pxNewTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 380:./FreeRTOS/timers.c ****         }
 381:./FreeRTOS/timers.c **** 
 382:./FreeRTOS/timers.c ****         traceTIMER_CREATE( pxNewTimer );
 383:./FreeRTOS/timers.c ****     }
 384:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 385:./FreeRTOS/timers.c **** 
 386:./FreeRTOS/timers.c ****     BaseType_t xTimerGenericCommand( TimerHandle_t xTimer,
 387:./FreeRTOS/timers.c ****                                      const BaseType_t xCommandID,
 388:./FreeRTOS/timers.c ****                                      const TickType_t xOptionalValue,
 389:./FreeRTOS/timers.c ****                                      BaseType_t * const pxHigherPriorityTaskWoken,
 390:./FreeRTOS/timers.c ****                                      const TickType_t xTicksToWait )
 391:./FreeRTOS/timers.c ****     {
 392:./FreeRTOS/timers.c ****         BaseType_t xReturn = pdFAIL;
 393:./FreeRTOS/timers.c ****         DaemonTaskMessage_t xMessage;
 394:./FreeRTOS/timers.c **** 
 395:./FreeRTOS/timers.c ****         configASSERT( xTimer );
 396:./FreeRTOS/timers.c **** 
 397:./FreeRTOS/timers.c ****         /* Send a message to the timer service task to perform a particular action
 398:./FreeRTOS/timers.c ****          * on a particular timer definition. */
 399:./FreeRTOS/timers.c ****         if( xTimerQueue != NULL )
 400:./FreeRTOS/timers.c ****         {
 401:./FreeRTOS/timers.c ****             /* Send a command to the timer service task to start the xTimer timer. */
 402:./FreeRTOS/timers.c ****             xMessage.xMessageID = xCommandID;
 403:./FreeRTOS/timers.c ****             xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 404:./FreeRTOS/timers.c ****             xMessage.u.xTimerParameters.pxTimer = xTimer;
 405:./FreeRTOS/timers.c **** 
 406:./FreeRTOS/timers.c ****             if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 407:./FreeRTOS/timers.c ****             {
 408:./FreeRTOS/timers.c ****                 if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 409:./FreeRTOS/timers.c ****                 {
 410:./FreeRTOS/timers.c ****                     xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 411:./FreeRTOS/timers.c ****                 }
 412:./FreeRTOS/timers.c ****                 else
 413:./FreeRTOS/timers.c ****                 {
 414:./FreeRTOS/timers.c ****                     xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 415:./FreeRTOS/timers.c ****                 }
 416:./FreeRTOS/timers.c ****             }
 417:./FreeRTOS/timers.c ****             else
 418:./FreeRTOS/timers.c ****             {
 419:./FreeRTOS/timers.c ****                 xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoke
 420:./FreeRTOS/timers.c ****             }
 421:./FreeRTOS/timers.c **** 
 422:./FreeRTOS/timers.c ****             traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 423:./FreeRTOS/timers.c ****         }
 424:./FreeRTOS/timers.c ****         else
 425:./FreeRTOS/timers.c ****         {
 426:./FreeRTOS/timers.c ****             mtCOVERAGE_TEST_MARKER();
 427:./FreeRTOS/timers.c ****         }
 428:./FreeRTOS/timers.c **** 
 429:./FreeRTOS/timers.c ****         return xReturn;
 430:./FreeRTOS/timers.c ****     }
 431:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 9


 432:./FreeRTOS/timers.c **** 
 433:./FreeRTOS/timers.c ****     TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 434:./FreeRTOS/timers.c ****     {
 435:./FreeRTOS/timers.c ****         /* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 436:./FreeRTOS/timers.c ****          * started, then xTimerTaskHandle will be NULL. */
 437:./FreeRTOS/timers.c ****         configASSERT( ( xTimerTaskHandle != NULL ) );
 438:./FreeRTOS/timers.c ****         return xTimerTaskHandle;
 439:./FreeRTOS/timers.c ****     }
 440:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 441:./FreeRTOS/timers.c **** 
 442:./FreeRTOS/timers.c ****     TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
 443:./FreeRTOS/timers.c ****     {
 444:./FreeRTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 445:./FreeRTOS/timers.c **** 
 446:./FreeRTOS/timers.c ****         configASSERT( xTimer );
 447:./FreeRTOS/timers.c ****         return pxTimer->xTimerPeriodInTicks;
 448:./FreeRTOS/timers.c ****     }
 449:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 450:./FreeRTOS/timers.c **** 
 451:./FreeRTOS/timers.c ****     void vTimerSetReloadMode( TimerHandle_t xTimer,
 452:./FreeRTOS/timers.c ****                               const BaseType_t xAutoReload )
 453:./FreeRTOS/timers.c ****     {
 454:./FreeRTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 455:./FreeRTOS/timers.c **** 
 456:./FreeRTOS/timers.c ****         configASSERT( xTimer );
 457:./FreeRTOS/timers.c ****         taskENTER_CRITICAL();
 458:./FreeRTOS/timers.c ****         {
 459:./FreeRTOS/timers.c ****             if( xAutoReload != pdFALSE )
 460:./FreeRTOS/timers.c ****             {
 461:./FreeRTOS/timers.c ****                 pxTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 462:./FreeRTOS/timers.c ****             }
 463:./FreeRTOS/timers.c ****             else
 464:./FreeRTOS/timers.c ****             {
 465:./FreeRTOS/timers.c ****                 pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_AUTORELOAD );
 466:./FreeRTOS/timers.c ****             }
 467:./FreeRTOS/timers.c ****         }
 468:./FreeRTOS/timers.c ****         taskEXIT_CRITICAL();
 469:./FreeRTOS/timers.c ****     }
 470:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 471:./FreeRTOS/timers.c **** 
 472:./FreeRTOS/timers.c ****     BaseType_t xTimerGetReloadMode( TimerHandle_t xTimer )
 473:./FreeRTOS/timers.c ****     {
 474:./FreeRTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 475:./FreeRTOS/timers.c ****         BaseType_t xReturn;
 476:./FreeRTOS/timers.c **** 
 477:./FreeRTOS/timers.c ****         configASSERT( xTimer );
 478:./FreeRTOS/timers.c ****         taskENTER_CRITICAL();
 479:./FreeRTOS/timers.c ****         {
 480:./FreeRTOS/timers.c ****             if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) == 0 )
 481:./FreeRTOS/timers.c ****             {
 482:./FreeRTOS/timers.c ****                 /* Not an auto-reload timer. */
 483:./FreeRTOS/timers.c ****                 xReturn = pdFALSE;
 484:./FreeRTOS/timers.c ****             }
 485:./FreeRTOS/timers.c ****             else
 486:./FreeRTOS/timers.c ****             {
 487:./FreeRTOS/timers.c ****                 /* Is an auto-reload timer. */
 488:./FreeRTOS/timers.c ****                 xReturn = pdTRUE;
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 10


 489:./FreeRTOS/timers.c ****             }
 490:./FreeRTOS/timers.c ****         }
 491:./FreeRTOS/timers.c ****         taskEXIT_CRITICAL();
 492:./FreeRTOS/timers.c **** 
 493:./FreeRTOS/timers.c ****         return xReturn;
 494:./FreeRTOS/timers.c ****     }
 495:./FreeRTOS/timers.c **** 
 496:./FreeRTOS/timers.c ****     UBaseType_t uxTimerGetReloadMode( TimerHandle_t xTimer )
 497:./FreeRTOS/timers.c ****     {
 498:./FreeRTOS/timers.c ****         return ( UBaseType_t ) xTimerGetReloadMode( xTimer );
 499:./FreeRTOS/timers.c ****     }
 500:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 501:./FreeRTOS/timers.c **** 
 502:./FreeRTOS/timers.c ****     TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 503:./FreeRTOS/timers.c ****     {
 504:./FreeRTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 505:./FreeRTOS/timers.c ****         TickType_t xReturn;
 506:./FreeRTOS/timers.c **** 
 507:./FreeRTOS/timers.c ****         configASSERT( xTimer );
 508:./FreeRTOS/timers.c ****         xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 509:./FreeRTOS/timers.c ****         return xReturn;
 510:./FreeRTOS/timers.c ****     }
 511:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 512:./FreeRTOS/timers.c **** 
 513:./FreeRTOS/timers.c ****     const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are all
 514:./FreeRTOS/timers.c ****     {
 515:./FreeRTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 516:./FreeRTOS/timers.c **** 
 517:./FreeRTOS/timers.c ****         configASSERT( xTimer );
 518:./FreeRTOS/timers.c ****         return pxTimer->pcTimerName;
 519:./FreeRTOS/timers.c ****     }
 520:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 521:./FreeRTOS/timers.c **** 
 522:./FreeRTOS/timers.c ****     static void prvReloadTimer( Timer_t * const pxTimer,
 523:./FreeRTOS/timers.c ****                                 TickType_t xExpiredTime,
 524:./FreeRTOS/timers.c ****                                 const TickType_t xTimeNow )
 525:./FreeRTOS/timers.c ****     {
 526:./FreeRTOS/timers.c ****         /* Insert the timer into the appropriate list for the next expiry time.
 527:./FreeRTOS/timers.c ****          * If the next expiry time has already passed, advance the expiry time,
 528:./FreeRTOS/timers.c ****          * call the callback function, and try again. */
 529:./FreeRTOS/timers.c ****         while( prvInsertTimerInActiveList( pxTimer, ( xExpiredTime + pxTimer->xTimerPeriodInTicks )
 530:./FreeRTOS/timers.c ****         {
 531:./FreeRTOS/timers.c ****             /* Advance the expiry time. */
 532:./FreeRTOS/timers.c ****             xExpiredTime += pxTimer->xTimerPeriodInTicks;
 533:./FreeRTOS/timers.c **** 
 534:./FreeRTOS/timers.c ****             /* Call the timer callback. */
 535:./FreeRTOS/timers.c ****             traceTIMER_EXPIRED( pxTimer );
 536:./FreeRTOS/timers.c ****             pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 537:./FreeRTOS/timers.c ****         }
 538:./FreeRTOS/timers.c ****     }
 539:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 540:./FreeRTOS/timers.c **** 
 541:./FreeRTOS/timers.c ****     static void prvProcessExpiredTimer( const TickType_t xNextExpireTime,
 542:./FreeRTOS/timers.c ****                                         const TickType_t xTimeNow )
 543:./FreeRTOS/timers.c ****     {
 544:./FreeRTOS/timers.c ****         Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); 
 545:./FreeRTOS/timers.c **** 
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 11


 546:./FreeRTOS/timers.c ****         /* Remove the timer from the list of active timers.  A check has already
 547:./FreeRTOS/timers.c ****          * been performed to ensure the list is not empty. */
 548:./FreeRTOS/timers.c **** 
 549:./FreeRTOS/timers.c ****         ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 550:./FreeRTOS/timers.c **** 
 551:./FreeRTOS/timers.c ****         /* If the timer is an auto-reload timer then calculate the next
 552:./FreeRTOS/timers.c ****          * expiry time and re-insert the timer in the list of active timers. */
 553:./FreeRTOS/timers.c ****         if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 554:./FreeRTOS/timers.c ****         {
 555:./FreeRTOS/timers.c ****             prvReloadTimer( pxTimer, xNextExpireTime, xTimeNow );
 556:./FreeRTOS/timers.c ****         }
 557:./FreeRTOS/timers.c ****         else
 558:./FreeRTOS/timers.c ****         {
 559:./FreeRTOS/timers.c ****             pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 560:./FreeRTOS/timers.c ****         }
 561:./FreeRTOS/timers.c **** 
 562:./FreeRTOS/timers.c ****         /* Call the timer callback. */
 563:./FreeRTOS/timers.c ****         traceTIMER_EXPIRED( pxTimer );
 564:./FreeRTOS/timers.c ****         pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 565:./FreeRTOS/timers.c ****     }
 566:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 567:./FreeRTOS/timers.c **** 
 568:./FreeRTOS/timers.c ****     static portTASK_FUNCTION( prvTimerTask, pvParameters )
 569:./FreeRTOS/timers.c ****     {
 570:./FreeRTOS/timers.c ****         TickType_t xNextExpireTime;
 571:./FreeRTOS/timers.c ****         BaseType_t xListWasEmpty;
 572:./FreeRTOS/timers.c **** 
 573:./FreeRTOS/timers.c ****         /* Just to avoid compiler warnings. */
 574:./FreeRTOS/timers.c ****         ( void ) pvParameters;
 575:./FreeRTOS/timers.c **** 
 576:./FreeRTOS/timers.c ****         #if ( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 577:./FreeRTOS/timers.c ****         {
 578:./FreeRTOS/timers.c ****             extern void vApplicationDaemonTaskStartupHook( void );
 579:./FreeRTOS/timers.c **** 
 580:./FreeRTOS/timers.c ****             /* Allow the application writer to execute some code in the context of
 581:./FreeRTOS/timers.c ****              * this task at the point the task starts executing.  This is useful if the
 582:./FreeRTOS/timers.c ****              * application includes initialisation code that would benefit from
 583:./FreeRTOS/timers.c ****              * executing after the scheduler has been started. */
 584:./FreeRTOS/timers.c ****             vApplicationDaemonTaskStartupHook();
 585:./FreeRTOS/timers.c ****         }
 586:./FreeRTOS/timers.c ****         #endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 587:./FreeRTOS/timers.c **** 
 588:./FreeRTOS/timers.c ****         for( ; ; )
 589:./FreeRTOS/timers.c ****         {
 590:./FreeRTOS/timers.c ****             /* Query the timers list to see if it contains any timers, and if so,
 591:./FreeRTOS/timers.c ****              * obtain the time at which the next timer will expire. */
 592:./FreeRTOS/timers.c ****             xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 593:./FreeRTOS/timers.c **** 
 594:./FreeRTOS/timers.c ****             /* If a timer has expired, process it.  Otherwise, block this task
 595:./FreeRTOS/timers.c ****              * until either a timer does expire, or a command is received. */
 596:./FreeRTOS/timers.c ****             prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 597:./FreeRTOS/timers.c **** 
 598:./FreeRTOS/timers.c ****             /* Empty the command queue. */
 599:./FreeRTOS/timers.c ****             prvProcessReceivedCommands();
 600:./FreeRTOS/timers.c ****         }
 601:./FreeRTOS/timers.c ****     }
 602:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 12


 603:./FreeRTOS/timers.c **** 
 604:./FreeRTOS/timers.c ****     static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime,
 605:./FreeRTOS/timers.c ****                                             BaseType_t xListWasEmpty )
 606:./FreeRTOS/timers.c ****     {
 607:./FreeRTOS/timers.c ****         TickType_t xTimeNow;
 608:./FreeRTOS/timers.c ****         BaseType_t xTimerListsWereSwitched;
 609:./FreeRTOS/timers.c **** 
 610:./FreeRTOS/timers.c ****         vTaskSuspendAll();
 611:./FreeRTOS/timers.c ****         {
 612:./FreeRTOS/timers.c ****             /* Obtain the time now to make an assessment as to whether the timer
 613:./FreeRTOS/timers.c ****              * has expired or not.  If obtaining the time causes the lists to switch
 614:./FreeRTOS/timers.c ****              * then don't process this timer as any timers that remained in the list
 615:./FreeRTOS/timers.c ****              * when the lists were switched will have been processed within the
 616:./FreeRTOS/timers.c ****              * prvSampleTimeNow() function. */
 617:./FreeRTOS/timers.c ****             xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 618:./FreeRTOS/timers.c **** 
 619:./FreeRTOS/timers.c ****             if( xTimerListsWereSwitched == pdFALSE )
 620:./FreeRTOS/timers.c ****             {
 621:./FreeRTOS/timers.c ****                 /* The tick count has not overflowed, has the timer expired? */
 622:./FreeRTOS/timers.c ****                 if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 623:./FreeRTOS/timers.c ****                 {
 624:./FreeRTOS/timers.c ****                     ( void ) xTaskResumeAll();
 625:./FreeRTOS/timers.c ****                     prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 626:./FreeRTOS/timers.c ****                 }
 627:./FreeRTOS/timers.c ****                 else
 628:./FreeRTOS/timers.c ****                 {
 629:./FreeRTOS/timers.c ****                     /* The tick count has not overflowed, and the next expire
 630:./FreeRTOS/timers.c ****                      * time has not been reached yet.  This task should therefore
 631:./FreeRTOS/timers.c ****                      * block to wait for the next expire time or a command to be
 632:./FreeRTOS/timers.c ****                      * received - whichever comes first.  The following line cannot
 633:./FreeRTOS/timers.c ****                      * be reached unless xNextExpireTime > xTimeNow, except in the
 634:./FreeRTOS/timers.c ****                      * case when the current timer list is empty. */
 635:./FreeRTOS/timers.c ****                     if( xListWasEmpty != pdFALSE )
 636:./FreeRTOS/timers.c ****                     {
 637:./FreeRTOS/timers.c ****                         /* The current timer list is empty - is the overflow list
 638:./FreeRTOS/timers.c ****                          * also empty? */
 639:./FreeRTOS/timers.c ****                         xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 640:./FreeRTOS/timers.c ****                     }
 641:./FreeRTOS/timers.c **** 
 642:./FreeRTOS/timers.c ****                     vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xL
 643:./FreeRTOS/timers.c **** 
 644:./FreeRTOS/timers.c ****                     if( xTaskResumeAll() == pdFALSE )
 645:./FreeRTOS/timers.c ****                     {
 646:./FreeRTOS/timers.c ****                         /* Yield to wait for either a command to arrive, or the
 647:./FreeRTOS/timers.c ****                          * block time to expire.  If a command arrived between the
 648:./FreeRTOS/timers.c ****                          * critical section being exited and this yield then the yield
 649:./FreeRTOS/timers.c ****                          * will not cause the task to block. */
 650:./FreeRTOS/timers.c ****                         portYIELD_WITHIN_API();
 651:./FreeRTOS/timers.c ****                     }
 652:./FreeRTOS/timers.c ****                     else
 653:./FreeRTOS/timers.c ****                     {
 654:./FreeRTOS/timers.c ****                         mtCOVERAGE_TEST_MARKER();
 655:./FreeRTOS/timers.c ****                     }
 656:./FreeRTOS/timers.c ****                 }
 657:./FreeRTOS/timers.c ****             }
 658:./FreeRTOS/timers.c ****             else
 659:./FreeRTOS/timers.c ****             {
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 13


 660:./FreeRTOS/timers.c ****                 ( void ) xTaskResumeAll();
 661:./FreeRTOS/timers.c ****             }
 662:./FreeRTOS/timers.c ****         }
 663:./FreeRTOS/timers.c ****     }
 664:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 665:./FreeRTOS/timers.c **** 
 666:./FreeRTOS/timers.c ****     static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 667:./FreeRTOS/timers.c ****     {
  27              		.loc 1 667 5 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 668:./FreeRTOS/timers.c ****         TickType_t xNextExpireTime;
  32              		.loc 1 668 9 view .LVU1
 669:./FreeRTOS/timers.c **** 
 670:./FreeRTOS/timers.c ****         /* Timers are listed in expiry time order, with the head of the list
 671:./FreeRTOS/timers.c ****          * referencing the task that will expire first.  Obtain the time at which
 672:./FreeRTOS/timers.c ****          * the timer with the nearest expiry time will expire.  If there are no
 673:./FreeRTOS/timers.c ****          * active timers then just set the next expire time to 0.  That will cause
 674:./FreeRTOS/timers.c ****          * this task to unblock when the tick count overflows, at which point the
 675:./FreeRTOS/timers.c ****          * timer lists will be switched and the next expiry time can be
 676:./FreeRTOS/timers.c ****          * re-assessed.  */
 677:./FreeRTOS/timers.c ****         *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
  33              		.loc 1 677 9 view .LVU2
  34              		.loc 1 677 27 is_stmt 0 view .LVU3
  35 0000 064B     		ldr	r3, .L6
  36 0002 1A68     		ldr	r2, [r3]
  37 0004 1368     		ldr	r3, [r2]
  38 0006 2BB9     		cbnz	r3, .L4
  39 0008 0123     		movs	r3, #1
  40              	.L2:
  41              		.loc 1 677 25 discriminator 4 view .LVU4
  42 000a 0360     		str	r3, [r0]
 678:./FreeRTOS/timers.c **** 
 679:./FreeRTOS/timers.c ****         if( *pxListWasEmpty == pdFALSE )
  43              		.loc 1 679 9 is_stmt 1 discriminator 4 view .LVU5
  44              		.loc 1 679 11 is_stmt 0 discriminator 4 view .LVU6
  45 000c 23B9     		cbnz	r3, .L5
 680:./FreeRTOS/timers.c ****         {
 681:./FreeRTOS/timers.c ****             xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
  46              		.loc 1 681 13 is_stmt 1 view .LVU7
  47              		.loc 1 681 31 is_stmt 0 view .LVU8
  48 000e D368     		ldr	r3, [r2, #12]
  49              		.loc 1 681 29 view .LVU9
  50 0010 1868     		ldr	r0, [r3]
  51              	.LVL1:
  52              		.loc 1 681 29 view .LVU10
  53 0012 7047     		bx	lr
  54              	.LVL2:
  55              	.L4:
 677:./FreeRTOS/timers.c **** 
  56              		.loc 1 677 27 view .LVU11
  57 0014 0023     		movs	r3, #0
  58 0016 F8E7     		b	.L2
  59              	.L5:
 682:./FreeRTOS/timers.c ****         }
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 14


 683:./FreeRTOS/timers.c ****         else
 684:./FreeRTOS/timers.c ****         {
 685:./FreeRTOS/timers.c ****             /* Ensure the task unblocks when the tick count rolls over. */
 686:./FreeRTOS/timers.c ****             xNextExpireTime = ( TickType_t ) 0U;
  60              		.loc 1 686 29 view .LVU12
  61 0018 0020     		movs	r0, #0
  62              	.LVL3:
 687:./FreeRTOS/timers.c ****         }
 688:./FreeRTOS/timers.c **** 
 689:./FreeRTOS/timers.c ****         return xNextExpireTime;
  63              		.loc 1 689 9 is_stmt 1 view .LVU13
 690:./FreeRTOS/timers.c ****     }
  64              		.loc 1 690 5 is_stmt 0 view .LVU14
  65 001a 7047     		bx	lr
  66              	.L7:
  67              		.align	2
  68              	.L6:
  69 001c 00000000 		.word	pxCurrentTimerList
  70              		.cfi_endproc
  71              	.LFE49:
  73              		.section	.text.prvInsertTimerInActiveList,"ax",%progbits
  74              		.align	1
  75              		.syntax unified
  76              		.thumb
  77              		.thumb_func
  79              	prvInsertTimerInActiveList:
  80              	.LVL4:
  81              	.LFB51:
 691:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 692:./FreeRTOS/timers.c **** 
 693:./FreeRTOS/timers.c ****     static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 694:./FreeRTOS/timers.c ****     {
 695:./FreeRTOS/timers.c ****         TickType_t xTimeNow;
 696:./FreeRTOS/timers.c ****         PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is o
 697:./FreeRTOS/timers.c **** 
 698:./FreeRTOS/timers.c ****         xTimeNow = xTaskGetTickCount();
 699:./FreeRTOS/timers.c **** 
 700:./FreeRTOS/timers.c ****         if( xTimeNow < xLastTime )
 701:./FreeRTOS/timers.c ****         {
 702:./FreeRTOS/timers.c ****             prvSwitchTimerLists();
 703:./FreeRTOS/timers.c ****             *pxTimerListsWereSwitched = pdTRUE;
 704:./FreeRTOS/timers.c ****         }
 705:./FreeRTOS/timers.c ****         else
 706:./FreeRTOS/timers.c ****         {
 707:./FreeRTOS/timers.c ****             *pxTimerListsWereSwitched = pdFALSE;
 708:./FreeRTOS/timers.c ****         }
 709:./FreeRTOS/timers.c **** 
 710:./FreeRTOS/timers.c ****         xLastTime = xTimeNow;
 711:./FreeRTOS/timers.c **** 
 712:./FreeRTOS/timers.c ****         return xTimeNow;
 713:./FreeRTOS/timers.c ****     }
 714:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 715:./FreeRTOS/timers.c **** 
 716:./FreeRTOS/timers.c ****     static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer,
 717:./FreeRTOS/timers.c ****                                                   const TickType_t xNextExpiryTime,
 718:./FreeRTOS/timers.c ****                                                   const TickType_t xTimeNow,
 719:./FreeRTOS/timers.c ****                                                   const TickType_t xCommandTime )
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 15


 720:./FreeRTOS/timers.c ****     {
  82              		.loc 1 720 5 is_stmt 1 view -0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              		.loc 1 720 5 is_stmt 0 view .LVU16
  87 0000 08B5     		push	{r3, lr}
  88              	.LCFI0:
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 3, -8
  91              		.cfi_offset 14, -4
 721:./FreeRTOS/timers.c ****         BaseType_t xProcessTimerNow = pdFALSE;
  92              		.loc 1 721 9 is_stmt 1 view .LVU17
  93              	.LVL5:
 722:./FreeRTOS/timers.c **** 
 723:./FreeRTOS/timers.c ****         listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
  94              		.loc 1 723 9 view .LVU18
  95 0002 4160     		str	r1, [r0, #4]
 724:./FreeRTOS/timers.c ****         listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
  96              		.loc 1 724 9 view .LVU19
  97 0004 0061     		str	r0, [r0, #16]
 725:./FreeRTOS/timers.c **** 
 726:./FreeRTOS/timers.c ****         if( xNextExpiryTime <= xTimeNow )
  98              		.loc 1 726 9 view .LVU20
  99              		.loc 1 726 11 is_stmt 0 view .LVU21
 100 0006 9142     		cmp	r1, r2
 101 0008 0CD8     		bhi	.L9
 727:./FreeRTOS/timers.c ****         {
 728:./FreeRTOS/timers.c ****             /* Has the expiry time elapsed between the command to start/reset a
 729:./FreeRTOS/timers.c ****              * timer was issued, and the time the command was processed? */
 730:./FreeRTOS/timers.c ****             if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*
 102              		.loc 1 730 13 is_stmt 1 view .LVU22
 103              		.loc 1 730 45 is_stmt 0 view .LVU23
 104 000a D21A     		subs	r2, r2, r3
 105              	.LVL6:
 106              		.loc 1 730 74 view .LVU24
 107 000c 8369     		ldr	r3, [r0, #24]
 108              	.LVL7:
 109              		.loc 1 730 15 view .LVU25
 110 000e 9A42     		cmp	r2, r3
 111 0010 01D3     		bcc	.L15
 731:./FreeRTOS/timers.c ****             {
 732:./FreeRTOS/timers.c ****                 /* The time between a command being issued and the command being
 733:./FreeRTOS/timers.c ****                  * processed actually exceeds the timers period.  */
 734:./FreeRTOS/timers.c ****                 xProcessTimerNow = pdTRUE;
 112              		.loc 1 734 34 view .LVU26
 113 0012 0120     		movs	r0, #1
 114              	.LVL8:
 115              	.L8:
 735:./FreeRTOS/timers.c ****             }
 736:./FreeRTOS/timers.c ****             else
 737:./FreeRTOS/timers.c ****             {
 738:./FreeRTOS/timers.c ****                 vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 739:./FreeRTOS/timers.c ****             }
 740:./FreeRTOS/timers.c ****         }
 741:./FreeRTOS/timers.c ****         else
 742:./FreeRTOS/timers.c ****         {
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 16


 743:./FreeRTOS/timers.c ****             if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 744:./FreeRTOS/timers.c ****             {
 745:./FreeRTOS/timers.c ****                 /* If, since the command was issued, the tick count has overflowed
 746:./FreeRTOS/timers.c ****                  * but the expiry time has not, then the timer must have already passed
 747:./FreeRTOS/timers.c ****                  * its expiry time and should be processed immediately. */
 748:./FreeRTOS/timers.c ****                 xProcessTimerNow = pdTRUE;
 749:./FreeRTOS/timers.c ****             }
 750:./FreeRTOS/timers.c ****             else
 751:./FreeRTOS/timers.c ****             {
 752:./FreeRTOS/timers.c ****                 vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 753:./FreeRTOS/timers.c ****             }
 754:./FreeRTOS/timers.c ****         }
 755:./FreeRTOS/timers.c **** 
 756:./FreeRTOS/timers.c ****         return xProcessTimerNow;
 757:./FreeRTOS/timers.c ****     }
 116              		.loc 1 757 5 view .LVU27
 117 0014 08BD     		pop	{r3, pc}
 118              	.LVL9:
 119              	.L15:
 738:./FreeRTOS/timers.c ****             }
 120              		.loc 1 738 17 is_stmt 1 view .LVU28
 121 0016 011D     		adds	r1, r0, #4
 122              	.LVL10:
 738:./FreeRTOS/timers.c ****             }
 123              		.loc 1 738 17 is_stmt 0 view .LVU29
 124 0018 094B     		ldr	r3, .L16
 125 001a 1868     		ldr	r0, [r3]
 126              	.LVL11:
 738:./FreeRTOS/timers.c ****             }
 127              		.loc 1 738 17 view .LVU30
 128 001c FFF7FEFF 		bl	vListInsert
 129              	.LVL12:
 721:./FreeRTOS/timers.c **** 
 130              		.loc 1 721 20 view .LVU31
 131 0020 0020     		movs	r0, #0
 132 0022 F7E7     		b	.L8
 133              	.LVL13:
 134              	.L9:
 743:./FreeRTOS/timers.c ****             {
 135              		.loc 1 743 13 is_stmt 1 view .LVU32
 743:./FreeRTOS/timers.c ****             {
 136              		.loc 1 743 15 is_stmt 0 view .LVU33
 137 0024 9A42     		cmp	r2, r3
 138 0026 01D2     		bcs	.L11
 743:./FreeRTOS/timers.c ****             {
 139              		.loc 1 743 45 discriminator 1 view .LVU34
 140 0028 9942     		cmp	r1, r3
 141 002a 06D2     		bcs	.L13
 142              	.L11:
 752:./FreeRTOS/timers.c ****             }
 143              		.loc 1 752 17 is_stmt 1 view .LVU35
 144 002c 011D     		adds	r1, r0, #4
 145              	.LVL14:
 752:./FreeRTOS/timers.c ****             }
 146              		.loc 1 752 17 is_stmt 0 view .LVU36
 147 002e 054B     		ldr	r3, .L16+4
 148              	.LVL15:
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 17


 752:./FreeRTOS/timers.c ****             }
 149              		.loc 1 752 17 view .LVU37
 150 0030 1868     		ldr	r0, [r3]
 151              	.LVL16:
 752:./FreeRTOS/timers.c ****             }
 152              		.loc 1 752 17 view .LVU38
 153 0032 FFF7FEFF 		bl	vListInsert
 154              	.LVL17:
 721:./FreeRTOS/timers.c **** 
 155              		.loc 1 721 20 view .LVU39
 156 0036 0020     		movs	r0, #0
 157 0038 ECE7     		b	.L8
 158              	.LVL18:
 159              	.L13:
 748:./FreeRTOS/timers.c ****             }
 160              		.loc 1 748 34 view .LVU40
 161 003a 0120     		movs	r0, #1
 162              	.LVL19:
 756:./FreeRTOS/timers.c ****     }
 163              		.loc 1 756 9 is_stmt 1 view .LVU41
 756:./FreeRTOS/timers.c ****     }
 164              		.loc 1 756 16 is_stmt 0 view .LVU42
 165 003c EAE7     		b	.L8
 166              	.L17:
 167 003e 00BF     		.align	2
 168              	.L16:
 169 0040 00000000 		.word	pxOverflowTimerList
 170 0044 00000000 		.word	pxCurrentTimerList
 171              		.cfi_endproc
 172              	.LFE51:
 174              		.section	.text.prvReloadTimer,"ax",%progbits
 175              		.align	1
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 180              	prvReloadTimer:
 181              	.LVL20:
 182              	.LFB45:
 525:./FreeRTOS/timers.c ****         /* Insert the timer into the appropriate list for the next expiry time.
 183              		.loc 1 525 5 is_stmt 1 view -0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 525:./FreeRTOS/timers.c ****         /* Insert the timer into the appropriate list for the next expiry time.
 187              		.loc 1 525 5 is_stmt 0 view .LVU44
 188 0000 70B5     		push	{r4, r5, r6, lr}
 189              	.LCFI1:
 190              		.cfi_def_cfa_offset 16
 191              		.cfi_offset 4, -16
 192              		.cfi_offset 5, -12
 193              		.cfi_offset 6, -8
 194              		.cfi_offset 14, -4
 195 0002 0446     		mov	r4, r0
 196 0004 0D46     		mov	r5, r1
 197 0006 1646     		mov	r6, r2
 529:./FreeRTOS/timers.c ****         {
 198              		.loc 1 529 9 is_stmt 1 view .LVU45
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 18


 529:./FreeRTOS/timers.c ****         {
 199              		.loc 1 529 14 is_stmt 0 view .LVU46
 200 0008 04E0     		b	.L19
 201              	.LVL21:
 202              	.L20:
 532:./FreeRTOS/timers.c **** 
 203              		.loc 1 532 13 is_stmt 1 view .LVU47
 532:./FreeRTOS/timers.c **** 
 204              		.loc 1 532 36 is_stmt 0 view .LVU48
 205 000a A369     		ldr	r3, [r4, #24]
 532:./FreeRTOS/timers.c **** 
 206              		.loc 1 532 26 view .LVU49
 207 000c 1D44     		add	r5, r5, r3
 208              	.LVL22:
 535:./FreeRTOS/timers.c ****             pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 209              		.loc 1 535 42 is_stmt 1 view .LVU50
 536:./FreeRTOS/timers.c ****         }
 210              		.loc 1 536 13 view .LVU51
 536:./FreeRTOS/timers.c ****         }
 211              		.loc 1 536 20 is_stmt 0 view .LVU52
 212 000e 236A     		ldr	r3, [r4, #32]
 536:./FreeRTOS/timers.c ****         }
 213              		.loc 1 536 13 view .LVU53
 214 0010 2046     		mov	r0, r4
 215 0012 9847     		blx	r3
 216              	.LVL23:
 217              	.L19:
 529:./FreeRTOS/timers.c ****         {
 218              		.loc 1 529 127 is_stmt 1 view .LVU54
 529:./FreeRTOS/timers.c ****         {
 219              		.loc 1 529 77 is_stmt 0 view .LVU55
 220 0014 A169     		ldr	r1, [r4, #24]
 529:./FreeRTOS/timers.c ****         {
 221              		.loc 1 529 16 view .LVU56
 222 0016 2B46     		mov	r3, r5
 223 0018 3246     		mov	r2, r6
 224 001a 2944     		add	r1, r1, r5
 225 001c 2046     		mov	r0, r4
 226 001e FFF7FEFF 		bl	prvInsertTimerInActiveList
 227              	.LVL24:
 529:./FreeRTOS/timers.c ****         {
 228              		.loc 1 529 127 view .LVU57
 229 0022 0028     		cmp	r0, #0
 230 0024 F1D1     		bne	.L20
 538:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 231              		.loc 1 538 5 view .LVU58
 232 0026 70BD     		pop	{r4, r5, r6, pc}
 538:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 233              		.loc 1 538 5 view .LVU59
 234              		.cfi_endproc
 235              	.LFE45:
 237              		.section	.text.prvProcessExpiredTimer,"ax",%progbits
 238              		.align	1
 239              		.syntax unified
 240              		.thumb
 241              		.thumb_func
 243              	prvProcessExpiredTimer:
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 19


 244              	.LVL25:
 245              	.LFB46:
 543:./FreeRTOS/timers.c ****         Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); 
 246              		.loc 1 543 5 is_stmt 1 view -0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 543:./FreeRTOS/timers.c ****         Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); 
 250              		.loc 1 543 5 is_stmt 0 view .LVU61
 251 0000 70B5     		push	{r4, r5, r6, lr}
 252              	.LCFI2:
 253              		.cfi_def_cfa_offset 16
 254              		.cfi_offset 4, -16
 255              		.cfi_offset 5, -12
 256              		.cfi_offset 6, -8
 257              		.cfi_offset 14, -4
 258 0002 0546     		mov	r5, r0
 259 0004 0E46     		mov	r6, r1
 544:./FreeRTOS/timers.c **** 
 260              		.loc 1 544 9 is_stmt 1 view .LVU62
 544:./FreeRTOS/timers.c **** 
 261              		.loc 1 544 49 is_stmt 0 view .LVU63
 262 0006 0D4B     		ldr	r3, .L27
 263 0008 1B68     		ldr	r3, [r3]
 264 000a DB68     		ldr	r3, [r3, #12]
 544:./FreeRTOS/timers.c **** 
 265              		.loc 1 544 25 view .LVU64
 266 000c DC68     		ldr	r4, [r3, #12]
 267              	.LVL26:
 549:./FreeRTOS/timers.c **** 
 268              		.loc 1 549 9 is_stmt 1 view .LVU65
 549:./FreeRTOS/timers.c **** 
 269              		.loc 1 549 18 is_stmt 0 view .LVU66
 270 000e 201D     		adds	r0, r4, #4
 271              	.LVL27:
 549:./FreeRTOS/timers.c **** 
 272              		.loc 1 549 18 view .LVU67
 273 0010 FFF7FEFF 		bl	uxListRemove
 274              	.LVL28:
 553:./FreeRTOS/timers.c ****         {
 275              		.loc 1 553 9 is_stmt 1 view .LVU68
 553:./FreeRTOS/timers.c ****         {
 276              		.loc 1 553 22 is_stmt 0 view .LVU69
 277 0014 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 553:./FreeRTOS/timers.c ****         {
 278              		.loc 1 553 11 view .LVU70
 279 0018 13F0040F 		tst	r3, #4
 280 001c 07D1     		bne	.L26
 559:./FreeRTOS/timers.c ****         }
 281              		.loc 1 559 13 is_stmt 1 view .LVU71
 559:./FreeRTOS/timers.c ****         }
 282              		.loc 1 559 31 is_stmt 0 view .LVU72
 283 001e 23F00103 		bic	r3, r3, #1
 284 0022 84F82430 		strb	r3, [r4, #36]
 285              	.L24:
 563:./FreeRTOS/timers.c ****         pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 286              		.loc 1 563 38 is_stmt 1 view .LVU73
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 20


 564:./FreeRTOS/timers.c ****     }
 287              		.loc 1 564 9 view .LVU74
 564:./FreeRTOS/timers.c ****     }
 288              		.loc 1 564 16 is_stmt 0 view .LVU75
 289 0026 236A     		ldr	r3, [r4, #32]
 564:./FreeRTOS/timers.c ****     }
 290              		.loc 1 564 9 view .LVU76
 291 0028 2046     		mov	r0, r4
 292 002a 9847     		blx	r3
 293              	.LVL29:
 565:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 294              		.loc 1 565 5 view .LVU77
 295 002c 70BD     		pop	{r4, r5, r6, pc}
 296              	.LVL30:
 297              	.L26:
 555:./FreeRTOS/timers.c ****         }
 298              		.loc 1 555 13 is_stmt 1 view .LVU78
 299 002e 3246     		mov	r2, r6
 300 0030 2946     		mov	r1, r5
 301 0032 2046     		mov	r0, r4
 302 0034 FFF7FEFF 		bl	prvReloadTimer
 303              	.LVL31:
 304 0038 F5E7     		b	.L24
 305              	.L28:
 306 003a 00BF     		.align	2
 307              	.L27:
 308 003c 00000000 		.word	pxCurrentTimerList
 309              		.cfi_endproc
 310              	.LFE46:
 312              		.section	.text.prvSwitchTimerLists,"ax",%progbits
 313              		.align	1
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 318              	prvSwitchTimerLists:
 319              	.LFB53:
 758:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 759:./FreeRTOS/timers.c **** 
 760:./FreeRTOS/timers.c ****     static void prvProcessReceivedCommands( void )
 761:./FreeRTOS/timers.c ****     {
 762:./FreeRTOS/timers.c ****         DaemonTaskMessage_t xMessage;
 763:./FreeRTOS/timers.c ****         Timer_t * pxTimer;
 764:./FreeRTOS/timers.c ****         BaseType_t xTimerListsWereSwitched;
 765:./FreeRTOS/timers.c ****         TickType_t xTimeNow;
 766:./FreeRTOS/timers.c **** 
 767:./FreeRTOS/timers.c ****         while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessa
 768:./FreeRTOS/timers.c ****         {
 769:./FreeRTOS/timers.c ****             #if ( INCLUDE_xTimerPendFunctionCall == 1 )
 770:./FreeRTOS/timers.c ****             {
 771:./FreeRTOS/timers.c ****                 /* Negative commands are pended function calls rather than timer
 772:./FreeRTOS/timers.c ****                  * commands. */
 773:./FreeRTOS/timers.c ****                 if( xMessage.xMessageID < ( BaseType_t ) 0 )
 774:./FreeRTOS/timers.c ****                 {
 775:./FreeRTOS/timers.c ****                     const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackParamete
 776:./FreeRTOS/timers.c **** 
 777:./FreeRTOS/timers.c ****                     /* The timer uses the xCallbackParameters member to request a
 778:./FreeRTOS/timers.c ****                      * callback be executed.  Check the callback is not NULL. */
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 21


 779:./FreeRTOS/timers.c ****                     configASSERT( pxCallback );
 780:./FreeRTOS/timers.c **** 
 781:./FreeRTOS/timers.c ****                     /* Call the function. */
 782:./FreeRTOS/timers.c ****                     pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParamet
 783:./FreeRTOS/timers.c ****                 }
 784:./FreeRTOS/timers.c ****                 else
 785:./FreeRTOS/timers.c ****                 {
 786:./FreeRTOS/timers.c ****                     mtCOVERAGE_TEST_MARKER();
 787:./FreeRTOS/timers.c ****                 }
 788:./FreeRTOS/timers.c ****             }
 789:./FreeRTOS/timers.c ****             #endif /* INCLUDE_xTimerPendFunctionCall */
 790:./FreeRTOS/timers.c **** 
 791:./FreeRTOS/timers.c ****             /* Commands that are positive are timer commands rather than pended
 792:./FreeRTOS/timers.c ****              * function calls. */
 793:./FreeRTOS/timers.c ****             if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 794:./FreeRTOS/timers.c ****             {
 795:./FreeRTOS/timers.c ****                 /* The messages uses the xTimerParameters member to work on a
 796:./FreeRTOS/timers.c ****                  * software timer. */
 797:./FreeRTOS/timers.c ****                 pxTimer = xMessage.u.xTimerParameters.pxTimer;
 798:./FreeRTOS/timers.c **** 
 799:./FreeRTOS/timers.c ****                 if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*li
 800:./FreeRTOS/timers.c ****                 {
 801:./FreeRTOS/timers.c ****                     /* The timer is in a list, remove it. */
 802:./FreeRTOS/timers.c ****                     ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 803:./FreeRTOS/timers.c ****                 }
 804:./FreeRTOS/timers.c ****                 else
 805:./FreeRTOS/timers.c ****                 {
 806:./FreeRTOS/timers.c ****                     mtCOVERAGE_TEST_MARKER();
 807:./FreeRTOS/timers.c ****                 }
 808:./FreeRTOS/timers.c **** 
 809:./FreeRTOS/timers.c ****                 traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParamet
 810:./FreeRTOS/timers.c **** 
 811:./FreeRTOS/timers.c ****                 /* In this case the xTimerListsWereSwitched parameter is not used, but
 812:./FreeRTOS/timers.c ****                  *  it must be present in the function call.  prvSampleTimeNow() must be
 813:./FreeRTOS/timers.c ****                  *  called after the message is received from xTimerQueue so there is no
 814:./FreeRTOS/timers.c ****                  *  possibility of a higher priority task adding a message to the message
 815:./FreeRTOS/timers.c ****                  *  queue with a time that is ahead of the timer daemon task (because it
 816:./FreeRTOS/timers.c ****                  *  pre-empted the timer daemon task after the xTimeNow value was set). */
 817:./FreeRTOS/timers.c ****                 xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 818:./FreeRTOS/timers.c **** 
 819:./FreeRTOS/timers.c ****                 switch( xMessage.xMessageID )
 820:./FreeRTOS/timers.c ****                 {
 821:./FreeRTOS/timers.c ****                     case tmrCOMMAND_START:
 822:./FreeRTOS/timers.c ****                     case tmrCOMMAND_START_FROM_ISR:
 823:./FreeRTOS/timers.c ****                     case tmrCOMMAND_RESET:
 824:./FreeRTOS/timers.c ****                     case tmrCOMMAND_RESET_FROM_ISR:
 825:./FreeRTOS/timers.c ****                         /* Start or restart a timer. */
 826:./FreeRTOS/timers.c ****                         pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 827:./FreeRTOS/timers.c **** 
 828:./FreeRTOS/timers.c ****                         if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessa
 829:./FreeRTOS/timers.c ****                         {
 830:./FreeRTOS/timers.c ****                             /* The timer expired before it was added to the active
 831:./FreeRTOS/timers.c ****                              * timer list.  Process it now. */
 832:./FreeRTOS/timers.c ****                             if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 833:./FreeRTOS/timers.c ****                             {
 834:./FreeRTOS/timers.c ****                                 prvReloadTimer( pxTimer, xMessage.u.xTimerParameters.xMessageValue 
 835:./FreeRTOS/timers.c ****                             }
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 22


 836:./FreeRTOS/timers.c ****                             else
 837:./FreeRTOS/timers.c ****                             {
 838:./FreeRTOS/timers.c ****                                 pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 839:./FreeRTOS/timers.c ****                             }
 840:./FreeRTOS/timers.c **** 
 841:./FreeRTOS/timers.c ****                             /* Call the timer callback. */
 842:./FreeRTOS/timers.c ****                             traceTIMER_EXPIRED( pxTimer );
 843:./FreeRTOS/timers.c ****                             pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 844:./FreeRTOS/timers.c ****                         }
 845:./FreeRTOS/timers.c ****                         else
 846:./FreeRTOS/timers.c ****                         {
 847:./FreeRTOS/timers.c ****                             mtCOVERAGE_TEST_MARKER();
 848:./FreeRTOS/timers.c ****                         }
 849:./FreeRTOS/timers.c **** 
 850:./FreeRTOS/timers.c ****                         break;
 851:./FreeRTOS/timers.c **** 
 852:./FreeRTOS/timers.c ****                     case tmrCOMMAND_STOP:
 853:./FreeRTOS/timers.c ****                     case tmrCOMMAND_STOP_FROM_ISR:
 854:./FreeRTOS/timers.c ****                         /* The timer has already been removed from the active list. */
 855:./FreeRTOS/timers.c ****                         pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 856:./FreeRTOS/timers.c ****                         break;
 857:./FreeRTOS/timers.c **** 
 858:./FreeRTOS/timers.c ****                     case tmrCOMMAND_CHANGE_PERIOD:
 859:./FreeRTOS/timers.c ****                     case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR:
 860:./FreeRTOS/timers.c ****                         pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 861:./FreeRTOS/timers.c ****                         pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 862:./FreeRTOS/timers.c ****                         configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 863:./FreeRTOS/timers.c **** 
 864:./FreeRTOS/timers.c ****                         /* The new period does not really have a reference, and can
 865:./FreeRTOS/timers.c ****                          * be longer or shorter than the old one.  The command time is
 866:./FreeRTOS/timers.c ****                          * therefore set to the current time, and as the period cannot
 867:./FreeRTOS/timers.c ****                          * be zero the next expiry time can only be in the future,
 868:./FreeRTOS/timers.c ****                          * meaning (unlike for the xTimerStart() case above) there is
 869:./FreeRTOS/timers.c ****                          * no fail case that needs to be handled here. */
 870:./FreeRTOS/timers.c ****                         ( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerP
 871:./FreeRTOS/timers.c ****                         break;
 872:./FreeRTOS/timers.c **** 
 873:./FreeRTOS/timers.c ****                     case tmrCOMMAND_DELETE:
 874:./FreeRTOS/timers.c ****                         #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 875:./FreeRTOS/timers.c ****                         {
 876:./FreeRTOS/timers.c ****                             /* The timer has already been removed from the active list,
 877:./FreeRTOS/timers.c ****                              * just free up the memory if the memory was dynamically
 878:./FreeRTOS/timers.c ****                              * allocated. */
 879:./FreeRTOS/timers.c ****                             if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint
 880:./FreeRTOS/timers.c ****                             {
 881:./FreeRTOS/timers.c ****                                 vPortFree( pxTimer );
 882:./FreeRTOS/timers.c ****                             }
 883:./FreeRTOS/timers.c ****                             else
 884:./FreeRTOS/timers.c ****                             {
 885:./FreeRTOS/timers.c ****                                 pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 886:./FreeRTOS/timers.c ****                             }
 887:./FreeRTOS/timers.c ****                         }
 888:./FreeRTOS/timers.c ****                         #else /* if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) */
 889:./FreeRTOS/timers.c ****                         {
 890:./FreeRTOS/timers.c ****                             /* If dynamic allocation is not enabled, the memory
 891:./FreeRTOS/timers.c ****                              * could not have been dynamically allocated. So there is
 892:./FreeRTOS/timers.c ****                              * no need to free the memory - just mark the timer as
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 23


 893:./FreeRTOS/timers.c ****                              * "not active". */
 894:./FreeRTOS/timers.c ****                             pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 895:./FreeRTOS/timers.c ****                         }
 896:./FreeRTOS/timers.c ****                         #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 897:./FreeRTOS/timers.c ****                         break;
 898:./FreeRTOS/timers.c **** 
 899:./FreeRTOS/timers.c ****                     default:
 900:./FreeRTOS/timers.c ****                         /* Don't expect to get here. */
 901:./FreeRTOS/timers.c ****                         break;
 902:./FreeRTOS/timers.c ****                 }
 903:./FreeRTOS/timers.c ****             }
 904:./FreeRTOS/timers.c ****         }
 905:./FreeRTOS/timers.c ****     }
 906:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 907:./FreeRTOS/timers.c **** 
 908:./FreeRTOS/timers.c ****     static void prvSwitchTimerLists( void )
 909:./FreeRTOS/timers.c ****     {
 320              		.loc 1 909 5 view -0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324 0000 08B5     		push	{r3, lr}
 325              	.LCFI3:
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 3, -8
 328              		.cfi_offset 14, -4
 910:./FreeRTOS/timers.c ****         TickType_t xNextExpireTime;
 329              		.loc 1 910 9 view .LVU80
 911:./FreeRTOS/timers.c ****         List_t * pxTemp;
 330              		.loc 1 911 9 view .LVU81
 912:./FreeRTOS/timers.c **** 
 913:./FreeRTOS/timers.c ****         /* The tick count has overflowed.  The timer lists must be switched.
 914:./FreeRTOS/timers.c ****          * If there are any timers still referenced from the current timer list
 915:./FreeRTOS/timers.c ****          * then they must have expired and should be processed before the lists
 916:./FreeRTOS/timers.c ****          * are switched. */
 917:./FreeRTOS/timers.c ****         while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 331              		.loc 1 917 9 view .LVU82
 332              		.loc 1 917 14 is_stmt 0 view .LVU83
 333 0002 05E0     		b	.L30
 334              	.L31:
 918:./FreeRTOS/timers.c ****         {
 919:./FreeRTOS/timers.c ****             xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 335              		.loc 1 919 13 is_stmt 1 view .LVU84
 336              		.loc 1 919 31 is_stmt 0 view .LVU85
 337 0004 DB68     		ldr	r3, [r3, #12]
 338              	.LVL32:
 920:./FreeRTOS/timers.c **** 
 921:./FreeRTOS/timers.c ****             /* Process the expired timer.  For auto-reload timers, be careful to
 922:./FreeRTOS/timers.c ****              * process only expirations that occur on the current list.  Further
 923:./FreeRTOS/timers.c ****              * expirations must wait until after the lists are switched. */
 924:./FreeRTOS/timers.c ****             prvProcessExpiredTimer( xNextExpireTime, tmrMAX_TIME_BEFORE_OVERFLOW );
 339              		.loc 1 924 13 is_stmt 1 view .LVU86
 340 0006 4FF0FF31 		mov	r1, #-1
 341 000a 1868     		ldr	r0, [r3]
 342 000c FFF7FEFF 		bl	prvProcessExpiredTimer
 343              	.LVL33:
 344              	.L30:
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 24


 917:./FreeRTOS/timers.c ****         {
 345              		.loc 1 917 56 view .LVU87
 917:./FreeRTOS/timers.c ****         {
 346              		.loc 1 917 16 is_stmt 0 view .LVU88
 347 0010 054B     		ldr	r3, .L33
 348 0012 1B68     		ldr	r3, [r3]
 349 0014 1A68     		ldr	r2, [r3]
 917:./FreeRTOS/timers.c ****         {
 350              		.loc 1 917 56 view .LVU89
 351 0016 002A     		cmp	r2, #0
 352 0018 F4D1     		bne	.L31
 925:./FreeRTOS/timers.c ****         }
 926:./FreeRTOS/timers.c **** 
 927:./FreeRTOS/timers.c ****         pxTemp = pxCurrentTimerList;
 353              		.loc 1 927 9 is_stmt 1 view .LVU90
 354              	.LVL34:
 928:./FreeRTOS/timers.c ****         pxCurrentTimerList = pxOverflowTimerList;
 355              		.loc 1 928 9 view .LVU91
 356              		.loc 1 928 28 is_stmt 0 view .LVU92
 357 001a 044A     		ldr	r2, .L33+4
 358 001c 1068     		ldr	r0, [r2]
 359 001e 0249     		ldr	r1, .L33
 360 0020 0860     		str	r0, [r1]
 929:./FreeRTOS/timers.c ****         pxOverflowTimerList = pxTemp;
 361              		.loc 1 929 9 is_stmt 1 view .LVU93
 362              		.loc 1 929 29 is_stmt 0 view .LVU94
 363 0022 1360     		str	r3, [r2]
 930:./FreeRTOS/timers.c ****     }
 364              		.loc 1 930 5 view .LVU95
 365 0024 08BD     		pop	{r3, pc}
 366              	.LVL35:
 367              	.L34:
 368              		.loc 1 930 5 view .LVU96
 369 0026 00BF     		.align	2
 370              	.L33:
 371 0028 00000000 		.word	pxCurrentTimerList
 372 002c 00000000 		.word	pxOverflowTimerList
 373              		.cfi_endproc
 374              	.LFE53:
 376              		.section	.text.prvSampleTimeNow,"ax",%progbits
 377              		.align	1
 378              		.syntax unified
 379              		.thumb
 380              		.thumb_func
 382              	prvSampleTimeNow:
 383              	.LVL36:
 384              	.LFB50:
 694:./FreeRTOS/timers.c ****         TickType_t xTimeNow;
 385              		.loc 1 694 5 is_stmt 1 view -0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 694:./FreeRTOS/timers.c ****         TickType_t xTimeNow;
 389              		.loc 1 694 5 is_stmt 0 view .LVU98
 390 0000 38B5     		push	{r3, r4, r5, lr}
 391              	.LCFI4:
 392              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 25


 393              		.cfi_offset 3, -16
 394              		.cfi_offset 4, -12
 395              		.cfi_offset 5, -8
 396              		.cfi_offset 14, -4
 397 0002 0546     		mov	r5, r0
 695:./FreeRTOS/timers.c ****         PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is o
 398              		.loc 1 695 9 is_stmt 1 view .LVU99
 696:./FreeRTOS/timers.c **** 
 399              		.loc 1 696 25 view .LVU100
 698:./FreeRTOS/timers.c **** 
 400              		.loc 1 698 9 view .LVU101
 698:./FreeRTOS/timers.c **** 
 401              		.loc 1 698 20 is_stmt 0 view .LVU102
 402 0004 FFF7FEFF 		bl	xTaskGetTickCount
 403              	.LVL37:
 698:./FreeRTOS/timers.c **** 
 404              		.loc 1 698 20 view .LVU103
 405 0008 0446     		mov	r4, r0
 406              	.LVL38:
 700:./FreeRTOS/timers.c ****         {
 407              		.loc 1 700 9 is_stmt 1 view .LVU104
 700:./FreeRTOS/timers.c ****         {
 408              		.loc 1 700 22 is_stmt 0 view .LVU105
 409 000a 074B     		ldr	r3, .L40
 410 000c 1B68     		ldr	r3, [r3]
 700:./FreeRTOS/timers.c ****         {
 411              		.loc 1 700 11 view .LVU106
 412 000e 8342     		cmp	r3, r0
 413 0010 05D8     		bhi	.L39
 707:./FreeRTOS/timers.c ****         }
 414              		.loc 1 707 13 is_stmt 1 view .LVU107
 707:./FreeRTOS/timers.c ****         }
 415              		.loc 1 707 39 is_stmt 0 view .LVU108
 416 0012 0023     		movs	r3, #0
 417 0014 2B60     		str	r3, [r5]
 418              	.LVL39:
 419              	.L37:
 710:./FreeRTOS/timers.c **** 
 420              		.loc 1 710 9 is_stmt 1 view .LVU109
 710:./FreeRTOS/timers.c **** 
 421              		.loc 1 710 19 is_stmt 0 view .LVU110
 422 0016 044B     		ldr	r3, .L40
 423 0018 1C60     		str	r4, [r3]
 712:./FreeRTOS/timers.c ****     }
 424              		.loc 1 712 9 is_stmt 1 view .LVU111
 713:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 425              		.loc 1 713 5 is_stmt 0 view .LVU112
 426 001a 2046     		mov	r0, r4
 427 001c 38BD     		pop	{r3, r4, r5, pc}
 428              	.LVL40:
 429              	.L39:
 702:./FreeRTOS/timers.c ****             *pxTimerListsWereSwitched = pdTRUE;
 430              		.loc 1 702 13 is_stmt 1 view .LVU113
 431 001e FFF7FEFF 		bl	prvSwitchTimerLists
 432              	.LVL41:
 703:./FreeRTOS/timers.c ****         }
 433              		.loc 1 703 13 view .LVU114
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 26


 703:./FreeRTOS/timers.c ****         }
 434              		.loc 1 703 39 is_stmt 0 view .LVU115
 435 0022 0123     		movs	r3, #1
 436 0024 2B60     		str	r3, [r5]
 437 0026 F6E7     		b	.L37
 438              	.L41:
 439              		.align	2
 440              	.L40:
 441 0028 00000000 		.word	xLastTime.0
 442              		.cfi_endproc
 443              	.LFE50:
 445              		.section	.text.prvProcessTimerOrBlockTask,"ax",%progbits
 446              		.align	1
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 451              	prvProcessTimerOrBlockTask:
 452              	.LVL42:
 453              	.LFB48:
 606:./FreeRTOS/timers.c ****         TickType_t xTimeNow;
 454              		.loc 1 606 5 is_stmt 1 view -0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 8
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 606:./FreeRTOS/timers.c ****         TickType_t xTimeNow;
 458              		.loc 1 606 5 is_stmt 0 view .LVU117
 459 0000 70B5     		push	{r4, r5, r6, lr}
 460              	.LCFI5:
 461              		.cfi_def_cfa_offset 16
 462              		.cfi_offset 4, -16
 463              		.cfi_offset 5, -12
 464              		.cfi_offset 6, -8
 465              		.cfi_offset 14, -4
 466 0002 82B0     		sub	sp, sp, #8
 467              	.LCFI6:
 468              		.cfi_def_cfa_offset 24
 469 0004 0646     		mov	r6, r0
 470 0006 0C46     		mov	r4, r1
 607:./FreeRTOS/timers.c ****         BaseType_t xTimerListsWereSwitched;
 471              		.loc 1 607 9 is_stmt 1 view .LVU118
 608:./FreeRTOS/timers.c **** 
 472              		.loc 1 608 9 view .LVU119
 610:./FreeRTOS/timers.c ****         {
 473              		.loc 1 610 9 view .LVU120
 474 0008 FFF7FEFF 		bl	vTaskSuspendAll
 475              	.LVL43:
 617:./FreeRTOS/timers.c **** 
 476              		.loc 1 617 13 view .LVU121
 617:./FreeRTOS/timers.c **** 
 477              		.loc 1 617 24 is_stmt 0 view .LVU122
 478 000c 01A8     		add	r0, sp, #4
 479 000e FFF7FEFF 		bl	prvSampleTimeNow
 480              	.LVL44:
 619:./FreeRTOS/timers.c ****             {
 481              		.loc 1 619 13 is_stmt 1 view .LVU123
 619:./FreeRTOS/timers.c ****             {
 482              		.loc 1 619 41 is_stmt 0 view .LVU124
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 27


 483 0012 019B     		ldr	r3, [sp, #4]
 619:./FreeRTOS/timers.c ****             {
 484              		.loc 1 619 15 view .LVU125
 485 0014 33BB     		cbnz	r3, .L43
 486 0016 0546     		mov	r5, r0
 622:./FreeRTOS/timers.c ****                 {
 487              		.loc 1 622 17 is_stmt 1 view .LVU126
 622:./FreeRTOS/timers.c ****                 {
 488              		.loc 1 622 19 is_stmt 0 view .LVU127
 489 0018 E4B9     		cbnz	r4, .L44
 622:./FreeRTOS/timers.c ****                 {
 490              		.loc 1 622 50 discriminator 1 view .LVU128
 491 001a B042     		cmp	r0, r6
 492 001c 13D2     		bcs	.L49
 493              	.LVL45:
 494              	.L45:
 642:./FreeRTOS/timers.c **** 
 495              		.loc 1 642 21 is_stmt 1 view .LVU129
 496 001e 2246     		mov	r2, r4
 497 0020 711B     		subs	r1, r6, r5
 498 0022 124B     		ldr	r3, .L50
 499 0024 1868     		ldr	r0, [r3]
 500              	.LVL46:
 642:./FreeRTOS/timers.c **** 
 501              		.loc 1 642 21 is_stmt 0 view .LVU130
 502 0026 FFF7FEFF 		bl	vQueueWaitForMessageRestricted
 503              	.LVL47:
 644:./FreeRTOS/timers.c ****                     {
 504              		.loc 1 644 21 is_stmt 1 view .LVU131
 644:./FreeRTOS/timers.c ****                     {
 505              		.loc 1 644 25 is_stmt 0 view .LVU132
 506 002a FFF7FEFF 		bl	xTaskResumeAll
 507              	.LVL48:
 644:./FreeRTOS/timers.c ****                     {
 508              		.loc 1 644 23 view .LVU133
 509 002e D8B9     		cbnz	r0, .L42
 650:./FreeRTOS/timers.c ****                     }
 510              		.loc 1 650 25 is_stmt 1 view .LVU134
 511 0030 4FF0E023 		mov	r3, #-536813568
 512 0034 4FF08052 		mov	r2, #268435456
 513 0038 C3F8042D 		str	r2, [r3, #3332]
 650:./FreeRTOS/timers.c ****                     }
 514              		.loc 1 650 25 view .LVU135
 515              		.syntax unified
 516              	@ 650 "./FreeRTOS/timers.c" 1
 517 003c BFF34F8F 		dsb
 518              	@ 0 "" 2
 650:./FreeRTOS/timers.c ****                     }
 519              		.loc 1 650 25 view .LVU136
 520              	@ 650 "./FreeRTOS/timers.c" 1
 521 0040 BFF36F8F 		isb
 522              	@ 0 "" 2
 650:./FreeRTOS/timers.c ****                     }
 523              		.loc 1 650 47 view .LVU137
 524              		.thumb
 525              		.syntax unified
 526 0044 10E0     		b	.L42
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 28


 527              	.LVL49:
 528              	.L49:
 624:./FreeRTOS/timers.c ****                     prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 529              		.loc 1 624 21 view .LVU138
 624:./FreeRTOS/timers.c ****                     prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 530              		.loc 1 624 30 is_stmt 0 view .LVU139
 531 0046 FFF7FEFF 		bl	xTaskResumeAll
 532              	.LVL50:
 625:./FreeRTOS/timers.c ****                 }
 533              		.loc 1 625 21 is_stmt 1 view .LVU140
 534 004a 2946     		mov	r1, r5
 535 004c 3046     		mov	r0, r6
 536 004e FFF7FEFF 		bl	prvProcessExpiredTimer
 537              	.LVL51:
 538 0052 09E0     		b	.L42
 539              	.LVL52:
 540              	.L44:
 639:./FreeRTOS/timers.c ****                     }
 541              		.loc 1 639 25 view .LVU141
 639:./FreeRTOS/timers.c ****                     }
 542              		.loc 1 639 41 is_stmt 0 view .LVU142
 543 0054 064A     		ldr	r2, .L50+4
 544 0056 1268     		ldr	r2, [r2]
 545 0058 1268     		ldr	r2, [r2]
 546 005a 0AB9     		cbnz	r2, .L47
 547 005c 0124     		movs	r4, #1
 548              	.LVL53:
 639:./FreeRTOS/timers.c ****                     }
 549              		.loc 1 639 41 view .LVU143
 550 005e DEE7     		b	.L45
 551              	.LVL54:
 552              	.L47:
 639:./FreeRTOS/timers.c ****                     }
 553              		.loc 1 639 41 view .LVU144
 554 0060 1C46     		mov	r4, r3
 555              	.LVL55:
 639:./FreeRTOS/timers.c ****                     }
 556              		.loc 1 639 41 view .LVU145
 557 0062 DCE7     		b	.L45
 558              	.LVL56:
 559              	.L43:
 660:./FreeRTOS/timers.c ****             }
 560              		.loc 1 660 17 is_stmt 1 view .LVU146
 660:./FreeRTOS/timers.c ****             }
 561              		.loc 1 660 26 is_stmt 0 view .LVU147
 562 0064 FFF7FEFF 		bl	xTaskResumeAll
 563              	.LVL57:
 564              	.L42:
 663:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 565              		.loc 1 663 5 view .LVU148
 566 0068 02B0     		add	sp, sp, #8
 567              	.LCFI7:
 568              		.cfi_def_cfa_offset 16
 569              		@ sp needed
 570 006a 70BD     		pop	{r4, r5, r6, pc}
 571              	.LVL58:
 572              	.L51:
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 29


 663:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 573              		.loc 1 663 5 view .LVU149
 574              		.align	2
 575              	.L50:
 576 006c 00000000 		.word	xTimerQueue
 577 0070 00000000 		.word	pxOverflowTimerList
 578              		.cfi_endproc
 579              	.LFE48:
 581              		.section	.text.prvProcessReceivedCommands,"ax",%progbits
 582              		.align	1
 583              		.syntax unified
 584              		.thumb
 585              		.thumb_func
 587              	prvProcessReceivedCommands:
 588              	.LFB52:
 761:./FreeRTOS/timers.c ****         DaemonTaskMessage_t xMessage;
 589              		.loc 1 761 5 is_stmt 1 view -0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 16
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593 0000 30B5     		push	{r4, r5, lr}
 594              	.LCFI8:
 595              		.cfi_def_cfa_offset 12
 596              		.cfi_offset 4, -12
 597              		.cfi_offset 5, -8
 598              		.cfi_offset 14, -4
 599 0002 85B0     		sub	sp, sp, #20
 600              	.LCFI9:
 601              		.cfi_def_cfa_offset 32
 762:./FreeRTOS/timers.c ****         Timer_t * pxTimer;
 602              		.loc 1 762 9 view .LVU151
 763:./FreeRTOS/timers.c ****         BaseType_t xTimerListsWereSwitched;
 603              		.loc 1 763 9 view .LVU152
 764:./FreeRTOS/timers.c ****         TickType_t xTimeNow;
 604              		.loc 1 764 9 view .LVU153
 765:./FreeRTOS/timers.c **** 
 605              		.loc 1 765 9 view .LVU154
 767:./FreeRTOS/timers.c ****         {
 606              		.loc 1 767 9 view .LVU155
 607              	.L54:
 767:./FreeRTOS/timers.c ****         {
 608              		.loc 1 767 69 view .LVU156
 767:./FreeRTOS/timers.c ****         {
 609              		.loc 1 767 16 is_stmt 0 view .LVU157
 610 0004 0022     		movs	r2, #0
 611 0006 01A9     		add	r1, sp, #4
 612 0008 334B     		ldr	r3, .L72
 613 000a 1868     		ldr	r0, [r3]
 614 000c FFF7FEFF 		bl	xQueueReceive
 615              	.LVL59:
 767:./FreeRTOS/timers.c ****         {
 616              		.loc 1 767 69 view .LVU158
 617 0010 0028     		cmp	r0, #0
 618 0012 5FD0     		beq	.L69
 793:./FreeRTOS/timers.c ****             {
 619              		.loc 1 793 13 is_stmt 1 view .LVU159
 793:./FreeRTOS/timers.c ****             {
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 30


 620              		.loc 1 793 25 is_stmt 0 view .LVU160
 621 0014 019B     		ldr	r3, [sp, #4]
 793:./FreeRTOS/timers.c ****             {
 622              		.loc 1 793 15 view .LVU161
 623 0016 002B     		cmp	r3, #0
 624 0018 F4DB     		blt	.L54
 797:./FreeRTOS/timers.c **** 
 625              		.loc 1 797 17 is_stmt 1 view .LVU162
 797:./FreeRTOS/timers.c **** 
 626              		.loc 1 797 25 is_stmt 0 view .LVU163
 627 001a 039C     		ldr	r4, [sp, #12]
 628              	.LVL60:
 799:./FreeRTOS/timers.c ****                 {
 629              		.loc 1 799 17 is_stmt 1 view .LVU164
 799:./FreeRTOS/timers.c ****                 {
 630              		.loc 1 799 21 is_stmt 0 view .LVU165
 631 001c 6369     		ldr	r3, [r4, #20]
 799:./FreeRTOS/timers.c ****                 {
 632              		.loc 1 799 19 view .LVU166
 633 001e 13B1     		cbz	r3, .L55
 802:./FreeRTOS/timers.c ****                 }
 634              		.loc 1 802 21 is_stmt 1 view .LVU167
 802:./FreeRTOS/timers.c ****                 }
 635              		.loc 1 802 30 is_stmt 0 view .LVU168
 636 0020 201D     		adds	r0, r4, #4
 637 0022 FFF7FEFF 		bl	uxListRemove
 638              	.LVL61:
 639              	.L55:
 806:./FreeRTOS/timers.c ****                 }
 640              		.loc 1 806 45 is_stmt 1 view .LVU169
 809:./FreeRTOS/timers.c **** 
 641              		.loc 1 809 119 view .LVU170
 817:./FreeRTOS/timers.c **** 
 642              		.loc 1 817 17 view .LVU171
 817:./FreeRTOS/timers.c **** 
 643              		.loc 1 817 28 is_stmt 0 view .LVU172
 644 0026 6846     		mov	r0, sp
 645 0028 FFF7FEFF 		bl	prvSampleTimeNow
 646              	.LVL62:
 647 002c 0546     		mov	r5, r0
 648              	.LVL63:
 819:./FreeRTOS/timers.c ****                 {
 649              		.loc 1 819 17 is_stmt 1 view .LVU173
 819:./FreeRTOS/timers.c ****                 {
 650              		.loc 1 819 33 is_stmt 0 view .LVU174
 651 002e 019B     		ldr	r3, [sp, #4]
 819:./FreeRTOS/timers.c ****                 {
 652              		.loc 1 819 17 view .LVU175
 653 0030 013B     		subs	r3, r3, #1
 654 0032 082B     		cmp	r3, #8
 655 0034 E6D8     		bhi	.L54
 656 0036 DFE803F0 		tbb	[pc, r3]
 657              	.L58:
 658 003a 05       		.byte	(.L60-.L58)/2
 659 003b 05       		.byte	(.L60-.L58)/2
 660 003c 29       		.byte	(.L59-.L58)/2
 661 003d 30       		.byte	(.L57-.L58)/2
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 31


 662 003e 3F       		.byte	(.L61-.L58)/2
 663 003f 05       		.byte	(.L60-.L58)/2
 664 0040 05       		.byte	(.L60-.L58)/2
 665 0041 29       		.byte	(.L59-.L58)/2
 666 0042 30       		.byte	(.L57-.L58)/2
 667 0043 00       		.p2align 1
 668              	.L60:
 826:./FreeRTOS/timers.c **** 
 669              		.loc 1 826 25 is_stmt 1 view .LVU176
 826:./FreeRTOS/timers.c **** 
 670              		.loc 1 826 32 is_stmt 0 view .LVU177
 671 0044 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 826:./FreeRTOS/timers.c **** 
 672              		.loc 1 826 43 view .LVU178
 673 0048 43F00103 		orr	r3, r3, #1
 674 004c 84F82430 		strb	r3, [r4, #36]
 828:./FreeRTOS/timers.c ****                         {
 675              		.loc 1 828 25 is_stmt 1 view .LVU179
 828:./FreeRTOS/timers.c ****                         {
 676              		.loc 1 828 93 is_stmt 0 view .LVU180
 677 0050 029B     		ldr	r3, [sp, #8]
 828:./FreeRTOS/timers.c ****                         {
 678              		.loc 1 828 117 view .LVU181
 679 0052 A169     		ldr	r1, [r4, #24]
 828:./FreeRTOS/timers.c ****                         {
 680              		.loc 1 828 29 view .LVU182
 681 0054 0246     		mov	r2, r0
 682 0056 1944     		add	r1, r1, r3
 683 0058 2046     		mov	r0, r4
 684              	.LVL64:
 828:./FreeRTOS/timers.c ****                         {
 685              		.loc 1 828 29 view .LVU183
 686 005a FFF7FEFF 		bl	prvInsertTimerInActiveList
 687              	.LVL65:
 828:./FreeRTOS/timers.c ****                         {
 688              		.loc 1 828 27 view .LVU184
 689 005e 0028     		cmp	r0, #0
 690 0060 D0D0     		beq	.L54
 832:./FreeRTOS/timers.c ****                             {
 691              		.loc 1 832 29 is_stmt 1 view .LVU185
 832:./FreeRTOS/timers.c ****                             {
 692              		.loc 1 832 42 is_stmt 0 view .LVU186
 693 0062 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 832:./FreeRTOS/timers.c ****                             {
 694              		.loc 1 832 31 view .LVU187
 695 0066 13F0040F 		tst	r3, #4
 696 006a 07D1     		bne	.L70
 838:./FreeRTOS/timers.c ****                             }
 697              		.loc 1 838 33 is_stmt 1 view .LVU188
 838:./FreeRTOS/timers.c ****                             }
 698              		.loc 1 838 51 is_stmt 0 view .LVU189
 699 006c 23F00103 		bic	r3, r3, #1
 700 0070 84F82430 		strb	r3, [r4, #36]
 701              	.L64:
 842:./FreeRTOS/timers.c ****                             pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 702              		.loc 1 842 58 is_stmt 1 view .LVU190
 843:./FreeRTOS/timers.c ****                         }
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 32


 703              		.loc 1 843 29 view .LVU191
 843:./FreeRTOS/timers.c ****                         }
 704              		.loc 1 843 36 is_stmt 0 view .LVU192
 705 0074 236A     		ldr	r3, [r4, #32]
 843:./FreeRTOS/timers.c ****                         }
 706              		.loc 1 843 29 view .LVU193
 707 0076 2046     		mov	r0, r4
 708 0078 9847     		blx	r3
 709              	.LVL66:
 710 007a C3E7     		b	.L54
 711              	.L70:
 834:./FreeRTOS/timers.c ****                             }
 712              		.loc 1 834 33 is_stmt 1 view .LVU194
 834:./FreeRTOS/timers.c ****                             }
 713              		.loc 1 834 109 is_stmt 0 view .LVU195
 714 007c A369     		ldr	r3, [r4, #24]
 834:./FreeRTOS/timers.c ****                             }
 715              		.loc 1 834 33 view .LVU196
 716 007e 2A46     		mov	r2, r5
 717 0080 0299     		ldr	r1, [sp, #8]
 718 0082 1944     		add	r1, r1, r3
 719 0084 2046     		mov	r0, r4
 720 0086 FFF7FEFF 		bl	prvReloadTimer
 721              	.LVL67:
 722 008a F3E7     		b	.L64
 723              	.LVL68:
 724              	.L59:
 855:./FreeRTOS/timers.c ****                         break;
 725              		.loc 1 855 25 is_stmt 1 view .LVU197
 855:./FreeRTOS/timers.c ****                         break;
 726              		.loc 1 855 32 is_stmt 0 view .LVU198
 727 008c 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 855:./FreeRTOS/timers.c ****                         break;
 728              		.loc 1 855 43 view .LVU199
 729 0090 23F00103 		bic	r3, r3, #1
 730 0094 84F82430 		strb	r3, [r4, #36]
 856:./FreeRTOS/timers.c **** 
 731              		.loc 1 856 25 is_stmt 1 view .LVU200
 732 0098 B4E7     		b	.L54
 733              	.L57:
 860:./FreeRTOS/timers.c ****                         pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 734              		.loc 1 860 25 view .LVU201
 860:./FreeRTOS/timers.c ****                         pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 735              		.loc 1 860 32 is_stmt 0 view .LVU202
 736 009a 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 860:./FreeRTOS/timers.c ****                         pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 737              		.loc 1 860 43 view .LVU203
 738 009e 43F00103 		orr	r3, r3, #1
 739 00a2 84F82430 		strb	r3, [r4, #36]
 861:./FreeRTOS/timers.c ****                         configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 740              		.loc 1 861 25 is_stmt 1 view .LVU204
 861:./FreeRTOS/timers.c ****                         configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 741              		.loc 1 861 83 is_stmt 0 view .LVU205
 742 00a6 0299     		ldr	r1, [sp, #8]
 861:./FreeRTOS/timers.c ****                         configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 743              		.loc 1 861 54 view .LVU206
 744 00a8 A161     		str	r1, [r4, #24]
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 33


 862:./FreeRTOS/timers.c **** 
 745              		.loc 1 862 77 is_stmt 1 view .LVU207
 870:./FreeRTOS/timers.c ****                         break;
 746              		.loc 1 870 25 view .LVU208
 870:./FreeRTOS/timers.c ****                         break;
 747              		.loc 1 870 34 is_stmt 0 view .LVU209
 748 00aa 0346     		mov	r3, r0
 749 00ac 0246     		mov	r2, r0
 750 00ae 0144     		add	r1, r1, r0
 751 00b0 2046     		mov	r0, r4
 752              	.LVL69:
 870:./FreeRTOS/timers.c ****                         break;
 753              		.loc 1 870 34 view .LVU210
 754 00b2 FFF7FEFF 		bl	prvInsertTimerInActiveList
 755              	.LVL70:
 871:./FreeRTOS/timers.c **** 
 756              		.loc 1 871 25 is_stmt 1 view .LVU211
 757 00b6 A5E7     		b	.L54
 758              	.LVL71:
 759              	.L61:
 879:./FreeRTOS/timers.c ****                             {
 760              		.loc 1 879 29 view .LVU212
 879:./FreeRTOS/timers.c ****                             {
 761              		.loc 1 879 42 is_stmt 0 view .LVU213
 762 00b8 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 879:./FreeRTOS/timers.c ****                             {
 763              		.loc 1 879 31 view .LVU214
 764 00bc 13F0020F 		tst	r3, #2
 765 00c0 04D0     		beq	.L71
 885:./FreeRTOS/timers.c ****                             }
 766              		.loc 1 885 33 is_stmt 1 view .LVU215
 885:./FreeRTOS/timers.c ****                             }
 767              		.loc 1 885 51 is_stmt 0 view .LVU216
 768 00c2 23F00103 		bic	r3, r3, #1
 769 00c6 84F82430 		strb	r3, [r4, #36]
 770 00ca 9BE7     		b	.L54
 771              	.L71:
 881:./FreeRTOS/timers.c ****                             }
 772              		.loc 1 881 33 is_stmt 1 view .LVU217
 773 00cc 2046     		mov	r0, r4
 774              	.LVL72:
 881:./FreeRTOS/timers.c ****                             }
 775              		.loc 1 881 33 is_stmt 0 view .LVU218
 776 00ce FFF7FEFF 		bl	vPortFree
 777              	.LVL73:
 778 00d2 97E7     		b	.L54
 779              	.LVL74:
 780              	.L69:
 905:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 781              		.loc 1 905 5 view .LVU219
 782 00d4 05B0     		add	sp, sp, #20
 783              	.LCFI10:
 784              		.cfi_def_cfa_offset 12
 785              		@ sp needed
 786 00d6 30BD     		pop	{r4, r5, pc}
 787              	.L73:
 788              		.align	2
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 34


 789              	.L72:
 790 00d8 00000000 		.word	xTimerQueue
 791              		.cfi_endproc
 792              	.LFE52:
 794              		.section	.text.prvTimerTask,"ax",%progbits
 795              		.align	1
 796              		.syntax unified
 797              		.thumb
 798              		.thumb_func
 800              	prvTimerTask:
 801              	.LFB47:
 569:./FreeRTOS/timers.c ****         TickType_t xNextExpireTime;
 802              		.loc 1 569 5 is_stmt 1 view -0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 8
 805              		@ frame_needed = 0, uses_anonymous_args = 0
 806              	.LVL75:
 569:./FreeRTOS/timers.c ****         TickType_t xNextExpireTime;
 807              		.loc 1 569 5 is_stmt 0 view .LVU221
 808 0000 00B5     		push	{lr}
 809              	.LCFI11:
 810              		.cfi_def_cfa_offset 4
 811              		.cfi_offset 14, -4
 812 0002 83B0     		sub	sp, sp, #12
 813              	.LCFI12:
 814              		.cfi_def_cfa_offset 16
 815              	.LVL76:
 816              	.L75:
 570:./FreeRTOS/timers.c ****         BaseType_t xListWasEmpty;
 817              		.loc 1 570 9 is_stmt 1 discriminator 1 view .LVU222
 571:./FreeRTOS/timers.c **** 
 818              		.loc 1 571 9 discriminator 1 view .LVU223
 574:./FreeRTOS/timers.c **** 
 819              		.loc 1 574 9 discriminator 1 view .LVU224
 588:./FreeRTOS/timers.c ****         {
 820              		.loc 1 588 9 discriminator 1 view .LVU225
 592:./FreeRTOS/timers.c **** 
 821              		.loc 1 592 13 discriminator 1 view .LVU226
 592:./FreeRTOS/timers.c **** 
 822              		.loc 1 592 31 is_stmt 0 discriminator 1 view .LVU227
 823 0004 01A8     		add	r0, sp, #4
 824 0006 FFF7FEFF 		bl	prvGetNextExpireTime
 825              	.LVL77:
 596:./FreeRTOS/timers.c **** 
 826              		.loc 1 596 13 is_stmt 1 discriminator 1 view .LVU228
 827 000a 0199     		ldr	r1, [sp, #4]
 828 000c FFF7FEFF 		bl	prvProcessTimerOrBlockTask
 829              	.LVL78:
 599:./FreeRTOS/timers.c ****         }
 830              		.loc 1 599 13 discriminator 1 view .LVU229
 831 0010 FFF7FEFF 		bl	prvProcessReceivedCommands
 832              	.LVL79:
 588:./FreeRTOS/timers.c ****         {
 833              		.loc 1 588 9 discriminator 1 view .LVU230
 834 0014 F6E7     		b	.L75
 835              		.cfi_endproc
 836              	.LFE47:
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 35


 838              		.section	.text.prvCheckForValidListAndQueue,"ax",%progbits
 839              		.align	1
 840              		.syntax unified
 841              		.thumb
 842              		.thumb_func
 844              	prvCheckForValidListAndQueue:
 845              	.LFB54:
 931:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 932:./FreeRTOS/timers.c **** 
 933:./FreeRTOS/timers.c ****     static void prvCheckForValidListAndQueue( void )
 934:./FreeRTOS/timers.c ****     {
 846              		.loc 1 934 5 view -0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 0, uses_anonymous_args = 0
 850 0000 38B5     		push	{r3, r4, r5, lr}
 851              	.LCFI13:
 852              		.cfi_def_cfa_offset 16
 853              		.cfi_offset 3, -16
 854              		.cfi_offset 4, -12
 855              		.cfi_offset 5, -8
 856              		.cfi_offset 14, -4
 935:./FreeRTOS/timers.c ****         /* Check that the list from which active timers are referenced, and the
 936:./FreeRTOS/timers.c ****          * queue used to communicate with the timer service, have been
 937:./FreeRTOS/timers.c ****          * initialised. */
 938:./FreeRTOS/timers.c ****         taskENTER_CRITICAL();
 857              		.loc 1 938 9 view .LVU232
 858 0002 FFF7FEFF 		bl	vPortEnterCritical
 859              	.LVL80:
 939:./FreeRTOS/timers.c ****         {
 940:./FreeRTOS/timers.c ****             if( xTimerQueue == NULL )
 860              		.loc 1 940 13 view .LVU233
 861              		.loc 1 940 29 is_stmt 0 view .LVU234
 862 0006 0D4B     		ldr	r3, .L81
 863 0008 1B68     		ldr	r3, [r3]
 864              		.loc 1 940 15 view .LVU235
 865 000a 13B1     		cbz	r3, .L80
 866              	.L78:
 941:./FreeRTOS/timers.c ****             {
 942:./FreeRTOS/timers.c ****                 vListInitialise( &xActiveTimerList1 );
 943:./FreeRTOS/timers.c ****                 vListInitialise( &xActiveTimerList2 );
 944:./FreeRTOS/timers.c ****                 pxCurrentTimerList = &xActiveTimerList1;
 945:./FreeRTOS/timers.c ****                 pxOverflowTimerList = &xActiveTimerList2;
 946:./FreeRTOS/timers.c **** 
 947:./FreeRTOS/timers.c ****                 #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 948:./FreeRTOS/timers.c ****                 {
 949:./FreeRTOS/timers.c ****                     /* The timer queue is allocated statically in case
 950:./FreeRTOS/timers.c ****                      * configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 951:./FreeRTOS/timers.c ****                     PRIVILEGED_DATA static StaticQueue_t xStaticTimerQueue;                        
 952:./FreeRTOS/timers.c ****                     PRIVILEGED_DATA static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIME
 953:./FreeRTOS/timers.c **** 
 954:./FreeRTOS/timers.c ****                     xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( U
 955:./FreeRTOS/timers.c ****                 }
 956:./FreeRTOS/timers.c ****                 #else
 957:./FreeRTOS/timers.c ****                 {
 958:./FreeRTOS/timers.c ****                     xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( D
 959:./FreeRTOS/timers.c ****                 }
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 36


 960:./FreeRTOS/timers.c ****                 #endif /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 961:./FreeRTOS/timers.c **** 
 962:./FreeRTOS/timers.c ****                 #if ( configQUEUE_REGISTRY_SIZE > 0 )
 963:./FreeRTOS/timers.c ****                 {
 964:./FreeRTOS/timers.c ****                     if( xTimerQueue != NULL )
 965:./FreeRTOS/timers.c ****                     {
 966:./FreeRTOS/timers.c ****                         vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 967:./FreeRTOS/timers.c ****                     }
 968:./FreeRTOS/timers.c ****                     else
 969:./FreeRTOS/timers.c ****                     {
 970:./FreeRTOS/timers.c ****                         mtCOVERAGE_TEST_MARKER();
 971:./FreeRTOS/timers.c ****                     }
 972:./FreeRTOS/timers.c ****                 }
 973:./FreeRTOS/timers.c ****                 #endif /* configQUEUE_REGISTRY_SIZE */
 974:./FreeRTOS/timers.c ****             }
 975:./FreeRTOS/timers.c ****             else
 976:./FreeRTOS/timers.c ****             {
 977:./FreeRTOS/timers.c ****                 mtCOVERAGE_TEST_MARKER();
 867              		.loc 1 977 41 is_stmt 1 view .LVU236
 978:./FreeRTOS/timers.c ****             }
 979:./FreeRTOS/timers.c ****         }
 980:./FreeRTOS/timers.c ****         taskEXIT_CRITICAL();
 868              		.loc 1 980 9 view .LVU237
 869 000c FFF7FEFF 		bl	vPortExitCritical
 870              	.LVL81:
 981:./FreeRTOS/timers.c ****     }
 871              		.loc 1 981 5 is_stmt 0 view .LVU238
 872 0010 38BD     		pop	{r3, r4, r5, pc}
 873              	.L80:
 942:./FreeRTOS/timers.c ****                 vListInitialise( &xActiveTimerList2 );
 874              		.loc 1 942 17 is_stmt 1 view .LVU239
 875 0012 0B4D     		ldr	r5, .L81+4
 876 0014 2846     		mov	r0, r5
 877 0016 FFF7FEFF 		bl	vListInitialise
 878              	.LVL82:
 943:./FreeRTOS/timers.c ****                 pxCurrentTimerList = &xActiveTimerList1;
 879              		.loc 1 943 17 view .LVU240
 880 001a 0A4C     		ldr	r4, .L81+8
 881 001c 2046     		mov	r0, r4
 882 001e FFF7FEFF 		bl	vListInitialise
 883              	.LVL83:
 944:./FreeRTOS/timers.c ****                 pxOverflowTimerList = &xActiveTimerList2;
 884              		.loc 1 944 17 view .LVU241
 944:./FreeRTOS/timers.c ****                 pxOverflowTimerList = &xActiveTimerList2;
 885              		.loc 1 944 36 is_stmt 0 view .LVU242
 886 0022 094B     		ldr	r3, .L81+12
 887 0024 1D60     		str	r5, [r3]
 945:./FreeRTOS/timers.c **** 
 888              		.loc 1 945 17 is_stmt 1 view .LVU243
 945:./FreeRTOS/timers.c **** 
 889              		.loc 1 945 37 is_stmt 0 view .LVU244
 890 0026 094B     		ldr	r3, .L81+16
 891 0028 1C60     		str	r4, [r3]
 958:./FreeRTOS/timers.c ****                 }
 892              		.loc 1 958 21 is_stmt 1 view .LVU245
 958:./FreeRTOS/timers.c ****                 }
 893              		.loc 1 958 35 is_stmt 0 view .LVU246
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 37


 894 002a 0022     		movs	r2, #0
 895 002c 0C21     		movs	r1, #12
 896 002e 0520     		movs	r0, #5
 897 0030 FFF7FEFF 		bl	xQueueGenericCreate
 898              	.LVL84:
 958:./FreeRTOS/timers.c ****                 }
 899              		.loc 1 958 33 view .LVU247
 900 0034 014B     		ldr	r3, .L81
 901 0036 1860     		str	r0, [r3]
 902 0038 E8E7     		b	.L78
 903              	.L82:
 904 003a 00BF     		.align	2
 905              	.L81:
 906 003c 00000000 		.word	xTimerQueue
 907 0040 00000000 		.word	xActiveTimerList1
 908 0044 00000000 		.word	xActiveTimerList2
 909 0048 00000000 		.word	pxCurrentTimerList
 910 004c 00000000 		.word	pxOverflowTimerList
 911              		.cfi_endproc
 912              	.LFE54:
 914              		.section	.text.prvInitialiseNewTimer,"ax",%progbits
 915              		.align	1
 916              		.syntax unified
 917              		.thumb
 918              		.thumb_func
 920              	prvInitialiseNewTimer:
 921              	.LVL85:
 922              	.LFB36:
 361:./FreeRTOS/timers.c ****         /* 0 is not a valid value for xTimerPeriodInTicks. */
 923              		.loc 1 361 5 is_stmt 1 view -0
 924              		.cfi_startproc
 925              		@ args = 8, pretend = 0, frame = 0
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 361:./FreeRTOS/timers.c ****         /* 0 is not a valid value for xTimerPeriodInTicks. */
 927              		.loc 1 361 5 is_stmt 0 view .LVU249
 928 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 929              	.LCFI14:
 930              		.cfi_def_cfa_offset 24
 931              		.cfi_offset 4, -24
 932              		.cfi_offset 5, -20
 933              		.cfi_offset 6, -16
 934              		.cfi_offset 7, -12
 935              		.cfi_offset 8, -8
 936              		.cfi_offset 14, -4
 937 0004 8046     		mov	r8, r0
 938 0006 0F46     		mov	r7, r1
 939 0008 1546     		mov	r5, r2
 940 000a 1E46     		mov	r6, r3
 941 000c 079C     		ldr	r4, [sp, #28]
 363:./FreeRTOS/timers.c **** 
 942              		.loc 1 363 52 is_stmt 1 view .LVU250
 367:./FreeRTOS/timers.c **** 
 943              		.loc 1 367 9 view .LVU251
 944 000e FFF7FEFF 		bl	prvCheckForValidListAndQueue
 945              	.LVL86:
 371:./FreeRTOS/timers.c ****         pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 946              		.loc 1 371 9 view .LVU252
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 38


 371:./FreeRTOS/timers.c ****         pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 947              		.loc 1 371 33 is_stmt 0 view .LVU253
 948 0012 C4F80080 		str	r8, [r4]
 372:./FreeRTOS/timers.c ****         pxNewTimer->pvTimerID = pvTimerID;
 949              		.loc 1 372 9 is_stmt 1 view .LVU254
 372:./FreeRTOS/timers.c ****         pxNewTimer->pvTimerID = pvTimerID;
 950              		.loc 1 372 41 is_stmt 0 view .LVU255
 951 0016 A761     		str	r7, [r4, #24]
 373:./FreeRTOS/timers.c ****         pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 952              		.loc 1 373 9 is_stmt 1 view .LVU256
 373:./FreeRTOS/timers.c ****         pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 953              		.loc 1 373 31 is_stmt 0 view .LVU257
 954 0018 E661     		str	r6, [r4, #28]
 374:./FreeRTOS/timers.c ****         vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 955              		.loc 1 374 9 is_stmt 1 view .LVU258
 374:./FreeRTOS/timers.c ****         vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 956              		.loc 1 374 40 is_stmt 0 view .LVU259
 957 001a 069B     		ldr	r3, [sp, #24]
 958 001c 2362     		str	r3, [r4, #32]
 375:./FreeRTOS/timers.c **** 
 959              		.loc 1 375 9 is_stmt 1 view .LVU260
 960 001e 201D     		adds	r0, r4, #4
 961 0020 FFF7FEFF 		bl	vListInitialiseItem
 962              	.LVL87:
 377:./FreeRTOS/timers.c ****         {
 963              		.loc 1 377 9 view .LVU261
 377:./FreeRTOS/timers.c ****         {
 964              		.loc 1 377 11 is_stmt 0 view .LVU262
 965 0024 2DB1     		cbz	r5, .L83
 379:./FreeRTOS/timers.c ****         }
 966              		.loc 1 379 13 is_stmt 1 view .LVU263
 379:./FreeRTOS/timers.c ****         }
 967              		.loc 1 379 23 is_stmt 0 view .LVU264
 968 0026 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 379:./FreeRTOS/timers.c ****         }
 969              		.loc 1 379 34 view .LVU265
 970 002a 43F00403 		orr	r3, r3, #4
 971 002e 84F82430 		strb	r3, [r4, #36]
 382:./FreeRTOS/timers.c ****     }
 972              		.loc 1 382 40 is_stmt 1 view .LVU266
 973              	.L83:
 383:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 974              		.loc 1 383 5 is_stmt 0 view .LVU267
 975 0032 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 383:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 976              		.loc 1 383 5 view .LVU268
 977              		.cfi_endproc
 978              	.LFE36:
 980              		.section	.rodata.xTimerCreateTimerTask.str1.4,"aMS",%progbits,1
 981              		.align	2
 982              	.LC0:
 983 0000 546D7220 		.ascii	"Tmr Svc\000"
 983      53766300 
 984              		.section	.text.xTimerCreateTimerTask,"ax",%progbits
 985              		.align	1
 986              		.global	xTimerCreateTimerTask
 987              		.syntax unified
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 39


 988              		.thumb
 989              		.thumb_func
 991              	xTimerCreateTimerTask:
 992              	.LFB34:
 234:./FreeRTOS/timers.c ****         BaseType_t xReturn = pdFAIL;
 993              		.loc 1 234 5 is_stmt 1 view -0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 0
 996              		@ frame_needed = 0, uses_anonymous_args = 0
 997 0000 00B5     		push	{lr}
 998              	.LCFI15:
 999              		.cfi_def_cfa_offset 4
 1000              		.cfi_offset 14, -4
 1001 0002 83B0     		sub	sp, sp, #12
 1002              	.LCFI16:
 1003              		.cfi_def_cfa_offset 16
 235:./FreeRTOS/timers.c **** 
 1004              		.loc 1 235 9 view .LVU270
 1005              	.LVL88:
 241:./FreeRTOS/timers.c **** 
 1006              		.loc 1 241 9 view .LVU271
 1007 0004 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 1008              	.LVL89:
 243:./FreeRTOS/timers.c ****         {
 1009              		.loc 1 243 9 view .LVU272
 243:./FreeRTOS/timers.c ****         {
 1010              		.loc 1 243 25 is_stmt 0 view .LVU273
 1011 0008 094B     		ldr	r3, .L90
 1012 000a 1B68     		ldr	r3, [r3]
 243:./FreeRTOS/timers.c ****         {
 1013              		.loc 1 243 11 view .LVU274
 1014 000c 6BB1     		cbz	r3, .L88
 267:./FreeRTOS/timers.c ****                                        configTIMER_SERVICE_TASK_NAME,
 1015              		.loc 1 267 17 is_stmt 1 view .LVU275
 267:./FreeRTOS/timers.c ****                                        configTIMER_SERVICE_TASK_NAME,
 1016              		.loc 1 267 27 is_stmt 0 view .LVU276
 1017 000e 094B     		ldr	r3, .L90+4
 1018 0010 0193     		str	r3, [sp, #4]
 1019 0012 1F23     		movs	r3, #31
 1020 0014 0093     		str	r3, [sp]
 1021 0016 0023     		movs	r3, #0
 1022 0018 4FF48072 		mov	r2, #256
 1023 001c 0649     		ldr	r1, .L90+8
 1024 001e 0748     		ldr	r0, .L90+12
 1025 0020 FFF7FEFF 		bl	xTaskCreate
 1026              	.LVL90:
 1027              	.L86:
 283:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 1028              		.loc 1 283 5 view .LVU277
 1029 0024 03B0     		add	sp, sp, #12
 1030              	.LCFI17:
 1031              		.cfi_remember_state
 1032              		.cfi_def_cfa_offset 4
 1033              		@ sp needed
 1034 0026 5DF804FB 		ldr	pc, [sp], #4
 1035              	.LVL91:
 1036              	.L88:
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 40


 1037              	.LCFI18:
 1038              		.cfi_restore_state
 235:./FreeRTOS/timers.c **** 
 1039              		.loc 1 235 20 view .LVU278
 1040 002a 0020     		movs	r0, #0
 278:./FreeRTOS/timers.c ****         }
 1041              		.loc 1 278 37 is_stmt 1 view .LVU279
 281:./FreeRTOS/timers.c ****         return xReturn;
 1042              		.loc 1 281 32 view .LVU280
 282:./FreeRTOS/timers.c ****     }
 1043              		.loc 1 282 9 view .LVU281
 282:./FreeRTOS/timers.c ****     }
 1044              		.loc 1 282 16 is_stmt 0 view .LVU282
 1045 002c FAE7     		b	.L86
 1046              	.L91:
 1047 002e 00BF     		.align	2
 1048              	.L90:
 1049 0030 00000000 		.word	xTimerQueue
 1050 0034 00000000 		.word	xTimerTaskHandle
 1051 0038 00000000 		.word	.LC0
 1052 003c 00000000 		.word	prvTimerTask
 1053              		.cfi_endproc
 1054              	.LFE34:
 1056              		.section	.text.xTimerCreate,"ax",%progbits
 1057              		.align	1
 1058              		.global	xTimerCreate
 1059              		.syntax unified
 1060              		.thumb
 1061              		.thumb_func
 1063              	xTimerCreate:
 1064              	.LVL92:
 1065              	.LFB35:
 293:./FreeRTOS/timers.c ****             Timer_t * pxNewTimer;
 1066              		.loc 1 293 9 is_stmt 1 view -0
 1067              		.cfi_startproc
 1068              		@ args = 4, pretend = 0, frame = 0
 1069              		@ frame_needed = 0, uses_anonymous_args = 0
 293:./FreeRTOS/timers.c ****             Timer_t * pxNewTimer;
 1070              		.loc 1 293 9 is_stmt 0 view .LVU284
 1071 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1072              	.LCFI19:
 1073              		.cfi_def_cfa_offset 24
 1074              		.cfi_offset 4, -24
 1075              		.cfi_offset 5, -20
 1076              		.cfi_offset 6, -16
 1077              		.cfi_offset 7, -12
 1078              		.cfi_offset 8, -8
 1079              		.cfi_offset 14, -4
 1080 0004 82B0     		sub	sp, sp, #8
 1081              	.LCFI20:
 1082              		.cfi_def_cfa_offset 32
 1083 0006 0446     		mov	r4, r0
 1084 0008 8846     		mov	r8, r1
 1085 000a 1746     		mov	r7, r2
 1086 000c 1D46     		mov	r5, r3
 294:./FreeRTOS/timers.c **** 
 1087              		.loc 1 294 13 is_stmt 1 view .LVU285
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 41


 296:./FreeRTOS/timers.c **** 
 1088              		.loc 1 296 13 view .LVU286
 296:./FreeRTOS/timers.c **** 
 1089              		.loc 1 296 40 is_stmt 0 view .LVU287
 1090 000e 2820     		movs	r0, #40
 1091              	.LVL93:
 296:./FreeRTOS/timers.c **** 
 1092              		.loc 1 296 40 view .LVU288
 1093 0010 FFF7FEFF 		bl	pvPortMalloc
 1094              	.LVL94:
 298:./FreeRTOS/timers.c ****             {
 1095              		.loc 1 298 13 is_stmt 1 view .LVU289
 298:./FreeRTOS/timers.c ****             {
 1096              		.loc 1 298 15 is_stmt 0 view .LVU290
 1097 0014 0646     		mov	r6, r0
 1098 0016 58B1     		cbz	r0, .L92
 303:./FreeRTOS/timers.c ****                 prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, xAutoReload, pvTimerID, px
 1099              		.loc 1 303 17 is_stmt 1 view .LVU291
 303:./FreeRTOS/timers.c ****                 prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, xAutoReload, pvTimerID, px
 1100              		.loc 1 303 38 is_stmt 0 view .LVU292
 1101 0018 0023     		movs	r3, #0
 1102 001a 80F82430 		strb	r3, [r0, #36]
 304:./FreeRTOS/timers.c ****             }
 1103              		.loc 1 304 17 is_stmt 1 view .LVU293
 1104 001e 0190     		str	r0, [sp, #4]
 1105 0020 089B     		ldr	r3, [sp, #32]
 1106 0022 0093     		str	r3, [sp]
 1107 0024 2B46     		mov	r3, r5
 1108 0026 3A46     		mov	r2, r7
 1109 0028 4146     		mov	r1, r8
 1110 002a 2046     		mov	r0, r4
 1111              	.LVL95:
 304:./FreeRTOS/timers.c ****             }
 1112              		.loc 1 304 17 is_stmt 0 view .LVU294
 1113 002c FFF7FEFF 		bl	prvInitialiseNewTimer
 1114              	.LVL96:
 307:./FreeRTOS/timers.c ****         }
 1115              		.loc 1 307 13 is_stmt 1 view .LVU295
 1116              	.L92:
 308:./FreeRTOS/timers.c **** 
 1117              		.loc 1 308 9 is_stmt 0 view .LVU296
 1118 0030 3046     		mov	r0, r6
 1119 0032 02B0     		add	sp, sp, #8
 1120              	.LCFI21:
 1121              		.cfi_def_cfa_offset 24
 1122              		@ sp needed
 1123 0034 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 308:./FreeRTOS/timers.c **** 
 1124              		.loc 1 308 9 view .LVU297
 1125              		.cfi_endproc
 1126              	.LFE35:
 1128              		.section	.text.xTimerGenericCommand,"ax",%progbits
 1129              		.align	1
 1130              		.global	xTimerGenericCommand
 1131              		.syntax unified
 1132              		.thumb
 1133              		.thumb_func
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 42


 1135              	xTimerGenericCommand:
 1136              	.LVL97:
 1137              	.LFB37:
 391:./FreeRTOS/timers.c ****         BaseType_t xReturn = pdFAIL;
 1138              		.loc 1 391 5 is_stmt 1 view -0
 1139              		.cfi_startproc
 1140              		@ args = 4, pretend = 0, frame = 16
 1141              		@ frame_needed = 0, uses_anonymous_args = 0
 391:./FreeRTOS/timers.c ****         BaseType_t xReturn = pdFAIL;
 1142              		.loc 1 391 5 is_stmt 0 view .LVU299
 1143 0000 10B5     		push	{r4, lr}
 1144              	.LCFI22:
 1145              		.cfi_def_cfa_offset 8
 1146              		.cfi_offset 4, -8
 1147              		.cfi_offset 14, -4
 1148 0002 84B0     		sub	sp, sp, #16
 1149              	.LCFI23:
 1150              		.cfi_def_cfa_offset 24
 1151 0004 9C46     		mov	ip, r3
 392:./FreeRTOS/timers.c ****         DaemonTaskMessage_t xMessage;
 1152              		.loc 1 392 9 is_stmt 1 view .LVU300
 1153              	.LVL98:
 393:./FreeRTOS/timers.c **** 
 1154              		.loc 1 393 9 view .LVU301
 395:./FreeRTOS/timers.c **** 
 1155              		.loc 1 395 31 view .LVU302
 399:./FreeRTOS/timers.c ****         {
 1156              		.loc 1 399 9 view .LVU303
 399:./FreeRTOS/timers.c ****         {
 1157              		.loc 1 399 25 is_stmt 0 view .LVU304
 1158 0006 134B     		ldr	r3, .L102
 1159              	.LVL99:
 399:./FreeRTOS/timers.c ****         {
 1160              		.loc 1 399 25 view .LVU305
 1161 0008 1C68     		ldr	r4, [r3]
 399:./FreeRTOS/timers.c ****         {
 1162              		.loc 1 399 11 view .LVU306
 1163 000a 04B3     		cbz	r4, .L99
 402:./FreeRTOS/timers.c ****             xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 1164              		.loc 1 402 13 is_stmt 1 view .LVU307
 402:./FreeRTOS/timers.c ****             xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 1165              		.loc 1 402 33 is_stmt 0 view .LVU308
 1166 000c 0191     		str	r1, [sp, #4]
 403:./FreeRTOS/timers.c ****             xMessage.u.xTimerParameters.pxTimer = xTimer;
 1167              		.loc 1 403 13 is_stmt 1 view .LVU309
 403:./FreeRTOS/timers.c ****             xMessage.u.xTimerParameters.pxTimer = xTimer;
 1168              		.loc 1 403 55 is_stmt 0 view .LVU310
 1169 000e 0292     		str	r2, [sp, #8]
 404:./FreeRTOS/timers.c **** 
 1170              		.loc 1 404 13 is_stmt 1 view .LVU311
 404:./FreeRTOS/timers.c **** 
 1171              		.loc 1 404 49 is_stmt 0 view .LVU312
 1172 0010 0390     		str	r0, [sp, #12]
 406:./FreeRTOS/timers.c ****             {
 1173              		.loc 1 406 13 is_stmt 1 view .LVU313
 406:./FreeRTOS/timers.c ****             {
 1174              		.loc 1 406 15 is_stmt 0 view .LVU314
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 43


 1175 0012 0529     		cmp	r1, #5
 1176 0014 13DC     		bgt	.L97
 408:./FreeRTOS/timers.c ****                 {
 1177              		.loc 1 408 17 is_stmt 1 view .LVU315
 408:./FreeRTOS/timers.c ****                 {
 1178              		.loc 1 408 21 is_stmt 0 view .LVU316
 1179 0016 FFF7FEFF 		bl	xTaskGetSchedulerState
 1180              	.LVL100:
 408:./FreeRTOS/timers.c ****                 {
 1181              		.loc 1 408 19 view .LVU317
 1182 001a 0228     		cmp	r0, #2
 1183 001c 07D0     		beq	.L101
 414:./FreeRTOS/timers.c ****                 }
 1184              		.loc 1 414 21 is_stmt 1 view .LVU318
 414:./FreeRTOS/timers.c ****                 }
 1185              		.loc 1 414 31 is_stmt 0 view .LVU319
 1186 001e 0023     		movs	r3, #0
 1187 0020 1A46     		mov	r2, r3
 1188 0022 01A9     		add	r1, sp, #4
 1189 0024 0B48     		ldr	r0, .L102
 1190 0026 0068     		ldr	r0, [r0]
 1191 0028 FFF7FEFF 		bl	xQueueGenericSend
 1192              	.LVL101:
 414:./FreeRTOS/timers.c ****                 }
 1193              		.loc 1 414 31 view .LVU320
 1194 002c 0DE0     		b	.L95
 1195              	.LVL102:
 1196              	.L101:
 410:./FreeRTOS/timers.c ****                 }
 1197              		.loc 1 410 21 is_stmt 1 view .LVU321
 410:./FreeRTOS/timers.c ****                 }
 1198              		.loc 1 410 31 is_stmt 0 view .LVU322
 1199 002e 0023     		movs	r3, #0
 1200 0030 069A     		ldr	r2, [sp, #24]
 1201 0032 01A9     		add	r1, sp, #4
 1202 0034 0748     		ldr	r0, .L102
 1203 0036 0068     		ldr	r0, [r0]
 1204 0038 FFF7FEFF 		bl	xQueueGenericSend
 1205              	.LVL103:
 410:./FreeRTOS/timers.c ****                 }
 1206              		.loc 1 410 31 view .LVU323
 1207 003c 05E0     		b	.L95
 1208              	.LVL104:
 1209              	.L97:
 419:./FreeRTOS/timers.c ****             }
 1210              		.loc 1 419 17 is_stmt 1 view .LVU324
 419:./FreeRTOS/timers.c ****             }
 1211              		.loc 1 419 27 is_stmt 0 view .LVU325
 1212 003e 0023     		movs	r3, #0
 1213 0040 6246     		mov	r2, ip
 1214              	.LVL105:
 419:./FreeRTOS/timers.c ****             }
 1215              		.loc 1 419 27 view .LVU326
 1216 0042 01A9     		add	r1, sp, #4
 1217              	.LVL106:
 419:./FreeRTOS/timers.c ****             }
 1218              		.loc 1 419 27 view .LVU327
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 44


 1219 0044 2046     		mov	r0, r4
 1220              	.LVL107:
 419:./FreeRTOS/timers.c ****             }
 1221              		.loc 1 419 27 view .LVU328
 1222 0046 FFF7FEFF 		bl	xQueueGenericSendFromISR
 1223              	.LVL108:
 1224              	.L95:
 430:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 1225              		.loc 1 430 5 view .LVU329
 1226 004a 04B0     		add	sp, sp, #16
 1227              	.LCFI24:
 1228              		.cfi_remember_state
 1229              		.cfi_def_cfa_offset 8
 1230              		@ sp needed
 1231 004c 10BD     		pop	{r4, pc}
 1232              	.LVL109:
 1233              	.L99:
 1234              	.LCFI25:
 1235              		.cfi_restore_state
 392:./FreeRTOS/timers.c ****         DaemonTaskMessage_t xMessage;
 1236              		.loc 1 392 20 view .LVU330
 1237 004e 0020     		movs	r0, #0
 1238              	.LVL110:
 426:./FreeRTOS/timers.c ****         }
 1239              		.loc 1 426 37 is_stmt 1 view .LVU331
 429:./FreeRTOS/timers.c ****     }
 1240              		.loc 1 429 9 view .LVU332
 429:./FreeRTOS/timers.c ****     }
 1241              		.loc 1 429 16 is_stmt 0 view .LVU333
 1242 0050 FBE7     		b	.L95
 1243              	.L103:
 1244 0052 00BF     		.align	2
 1245              	.L102:
 1246 0054 00000000 		.word	xTimerQueue
 1247              		.cfi_endproc
 1248              	.LFE37:
 1250              		.section	.text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
 1251              		.align	1
 1252              		.global	xTimerGetTimerDaemonTaskHandle
 1253              		.syntax unified
 1254              		.thumb
 1255              		.thumb_func
 1257              	xTimerGetTimerDaemonTaskHandle:
 1258              	.LFB38:
 434:./FreeRTOS/timers.c ****         /* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 1259              		.loc 1 434 5 is_stmt 1 view -0
 1260              		.cfi_startproc
 1261              		@ args = 0, pretend = 0, frame = 0
 1262              		@ frame_needed = 0, uses_anonymous_args = 0
 1263              		@ link register save eliminated.
 437:./FreeRTOS/timers.c ****         return xTimerTaskHandle;
 1264              		.loc 1 437 53 view .LVU335
 438:./FreeRTOS/timers.c ****     }
 1265              		.loc 1 438 9 view .LVU336
 439:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 1266              		.loc 1 439 5 is_stmt 0 view .LVU337
 1267 0000 014B     		ldr	r3, .L105
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 45


 1268 0002 1868     		ldr	r0, [r3]
 1269 0004 7047     		bx	lr
 1270              	.L106:
 1271 0006 00BF     		.align	2
 1272              	.L105:
 1273 0008 00000000 		.word	xTimerTaskHandle
 1274              		.cfi_endproc
 1275              	.LFE38:
 1277              		.section	.text.xTimerGetPeriod,"ax",%progbits
 1278              		.align	1
 1279              		.global	xTimerGetPeriod
 1280              		.syntax unified
 1281              		.thumb
 1282              		.thumb_func
 1284              	xTimerGetPeriod:
 1285              	.LVL111:
 1286              	.LFB39:
 443:./FreeRTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 1287              		.loc 1 443 5 is_stmt 1 view -0
 1288              		.cfi_startproc
 1289              		@ args = 0, pretend = 0, frame = 0
 1290              		@ frame_needed = 0, uses_anonymous_args = 0
 1291              		@ link register save eliminated.
 444:./FreeRTOS/timers.c **** 
 1292              		.loc 1 444 9 view .LVU339
 446:./FreeRTOS/timers.c ****         return pxTimer->xTimerPeriodInTicks;
 1293              		.loc 1 446 31 view .LVU340
 447:./FreeRTOS/timers.c ****     }
 1294              		.loc 1 447 9 view .LVU341
 448:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 1295              		.loc 1 448 5 is_stmt 0 view .LVU342
 1296 0000 8069     		ldr	r0, [r0, #24]
 1297              	.LVL112:
 448:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 1298              		.loc 1 448 5 view .LVU343
 1299 0002 7047     		bx	lr
 1300              		.cfi_endproc
 1301              	.LFE39:
 1303              		.section	.text.vTimerSetReloadMode,"ax",%progbits
 1304              		.align	1
 1305              		.global	vTimerSetReloadMode
 1306              		.syntax unified
 1307              		.thumb
 1308              		.thumb_func
 1310              	vTimerSetReloadMode:
 1311              	.LVL113:
 1312              	.LFB40:
 453:./FreeRTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 1313              		.loc 1 453 5 is_stmt 1 view -0
 1314              		.cfi_startproc
 1315              		@ args = 0, pretend = 0, frame = 0
 1316              		@ frame_needed = 0, uses_anonymous_args = 0
 453:./FreeRTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 1317              		.loc 1 453 5 is_stmt 0 view .LVU345
 1318 0000 38B5     		push	{r3, r4, r5, lr}
 1319              	.LCFI26:
 1320              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 46


 1321              		.cfi_offset 3, -16
 1322              		.cfi_offset 4, -12
 1323              		.cfi_offset 5, -8
 1324              		.cfi_offset 14, -4
 1325 0002 0446     		mov	r4, r0
 1326 0004 0D46     		mov	r5, r1
 454:./FreeRTOS/timers.c **** 
 1327              		.loc 1 454 9 is_stmt 1 view .LVU346
 1328              	.LVL114:
 456:./FreeRTOS/timers.c ****         taskENTER_CRITICAL();
 1329              		.loc 1 456 31 view .LVU347
 457:./FreeRTOS/timers.c ****         {
 1330              		.loc 1 457 9 view .LVU348
 1331 0006 FFF7FEFF 		bl	vPortEnterCritical
 1332              	.LVL115:
 459:./FreeRTOS/timers.c ****             {
 1333              		.loc 1 459 13 view .LVU349
 459:./FreeRTOS/timers.c ****             {
 1334              		.loc 1 459 15 is_stmt 0 view .LVU350
 1335 000a 45B1     		cbz	r5, .L109
 461:./FreeRTOS/timers.c ****             }
 1336              		.loc 1 461 17 is_stmt 1 view .LVU351
 461:./FreeRTOS/timers.c ****             }
 1337              		.loc 1 461 24 is_stmt 0 view .LVU352
 1338 000c 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 461:./FreeRTOS/timers.c ****             }
 1339              		.loc 1 461 35 view .LVU353
 1340 0010 43F00403 		orr	r3, r3, #4
 1341 0014 84F82430 		strb	r3, [r4, #36]
 1342              	.L110:
 468:./FreeRTOS/timers.c ****     }
 1343              		.loc 1 468 9 is_stmt 1 view .LVU354
 1344 0018 FFF7FEFF 		bl	vPortExitCritical
 1345              	.LVL116:
 469:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 1346              		.loc 1 469 5 is_stmt 0 view .LVU355
 1347 001c 38BD     		pop	{r3, r4, r5, pc}
 1348              	.LVL117:
 1349              	.L109:
 465:./FreeRTOS/timers.c ****             }
 1350              		.loc 1 465 17 is_stmt 1 view .LVU356
 465:./FreeRTOS/timers.c ****             }
 1351              		.loc 1 465 24 is_stmt 0 view .LVU357
 1352 001e 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 465:./FreeRTOS/timers.c ****             }
 1353              		.loc 1 465 35 view .LVU358
 1354 0022 23F00403 		bic	r3, r3, #4
 1355 0026 84F82430 		strb	r3, [r4, #36]
 1356 002a F5E7     		b	.L110
 1357              		.cfi_endproc
 1358              	.LFE40:
 1360              		.section	.text.xTimerGetReloadMode,"ax",%progbits
 1361              		.align	1
 1362              		.global	xTimerGetReloadMode
 1363              		.syntax unified
 1364              		.thumb
 1365              		.thumb_func
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 47


 1367              	xTimerGetReloadMode:
 1368              	.LVL118:
 1369              	.LFB41:
 473:./FreeRTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 1370              		.loc 1 473 5 is_stmt 1 view -0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 0
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
 473:./FreeRTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 1374              		.loc 1 473 5 is_stmt 0 view .LVU360
 1375 0000 10B5     		push	{r4, lr}
 1376              	.LCFI27:
 1377              		.cfi_def_cfa_offset 8
 1378              		.cfi_offset 4, -8
 1379              		.cfi_offset 14, -4
 1380 0002 0446     		mov	r4, r0
 474:./FreeRTOS/timers.c ****         BaseType_t xReturn;
 1381              		.loc 1 474 9 is_stmt 1 view .LVU361
 1382              	.LVL119:
 475:./FreeRTOS/timers.c **** 
 1383              		.loc 1 475 9 view .LVU362
 477:./FreeRTOS/timers.c ****         taskENTER_CRITICAL();
 1384              		.loc 1 477 31 view .LVU363
 478:./FreeRTOS/timers.c ****         {
 1385              		.loc 1 478 9 view .LVU364
 1386 0004 FFF7FEFF 		bl	vPortEnterCritical
 1387              	.LVL120:
 480:./FreeRTOS/timers.c ****             {
 1388              		.loc 1 480 13 view .LVU365
 480:./FreeRTOS/timers.c ****             {
 1389              		.loc 1 480 26 is_stmt 0 view .LVU366
 1390 0008 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 480:./FreeRTOS/timers.c ****             {
 1391              		.loc 1 480 15 view .LVU367
 1392 000c 13F0040F 		tst	r3, #4
 1393 0010 04D1     		bne	.L114
 483:./FreeRTOS/timers.c ****             }
 1394              		.loc 1 483 25 view .LVU368
 1395 0012 0024     		movs	r4, #0
 1396              	.LVL121:
 1397              	.L113:
 491:./FreeRTOS/timers.c **** 
 1398              		.loc 1 491 9 is_stmt 1 view .LVU369
 1399 0014 FFF7FEFF 		bl	vPortExitCritical
 1400              	.LVL122:
 493:./FreeRTOS/timers.c ****     }
 1401              		.loc 1 493 9 view .LVU370
 494:./FreeRTOS/timers.c **** 
 1402              		.loc 1 494 5 is_stmt 0 view .LVU371
 1403 0018 2046     		mov	r0, r4
 1404 001a 10BD     		pop	{r4, pc}
 1405              	.LVL123:
 1406              	.L114:
 488:./FreeRTOS/timers.c ****             }
 1407              		.loc 1 488 25 view .LVU372
 1408 001c 0124     		movs	r4, #1
 1409              	.LVL124:
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 48


 488:./FreeRTOS/timers.c ****             }
 1410              		.loc 1 488 25 view .LVU373
 1411 001e F9E7     		b	.L113
 1412              		.cfi_endproc
 1413              	.LFE41:
 1415              		.section	.text.uxTimerGetReloadMode,"ax",%progbits
 1416              		.align	1
 1417              		.global	uxTimerGetReloadMode
 1418              		.syntax unified
 1419              		.thumb
 1420              		.thumb_func
 1422              	uxTimerGetReloadMode:
 1423              	.LVL125:
 1424              	.LFB42:
 497:./FreeRTOS/timers.c ****         return ( UBaseType_t ) xTimerGetReloadMode( xTimer );
 1425              		.loc 1 497 5 is_stmt 1 view -0
 1426              		.cfi_startproc
 1427              		@ args = 0, pretend = 0, frame = 0
 1428              		@ frame_needed = 0, uses_anonymous_args = 0
 497:./FreeRTOS/timers.c ****         return ( UBaseType_t ) xTimerGetReloadMode( xTimer );
 1429              		.loc 1 497 5 is_stmt 0 view .LVU375
 1430 0000 08B5     		push	{r3, lr}
 1431              	.LCFI28:
 1432              		.cfi_def_cfa_offset 8
 1433              		.cfi_offset 3, -8
 1434              		.cfi_offset 14, -4
 498:./FreeRTOS/timers.c ****     }
 1435              		.loc 1 498 9 is_stmt 1 view .LVU376
 498:./FreeRTOS/timers.c ****     }
 1436              		.loc 1 498 32 is_stmt 0 view .LVU377
 1437 0002 FFF7FEFF 		bl	xTimerGetReloadMode
 1438              	.LVL126:
 499:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 1439              		.loc 1 499 5 view .LVU378
 1440 0006 08BD     		pop	{r3, pc}
 1441              		.cfi_endproc
 1442              	.LFE42:
 1444              		.section	.text.xTimerGetExpiryTime,"ax",%progbits
 1445              		.align	1
 1446              		.global	xTimerGetExpiryTime
 1447              		.syntax unified
 1448              		.thumb
 1449              		.thumb_func
 1451              	xTimerGetExpiryTime:
 1452              	.LVL127:
 1453              	.LFB43:
 503:./FreeRTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 1454              		.loc 1 503 5 is_stmt 1 view -0
 1455              		.cfi_startproc
 1456              		@ args = 0, pretend = 0, frame = 0
 1457              		@ frame_needed = 0, uses_anonymous_args = 0
 1458              		@ link register save eliminated.
 504:./FreeRTOS/timers.c ****         TickType_t xReturn;
 1459              		.loc 1 504 9 view .LVU380
 505:./FreeRTOS/timers.c **** 
 1460              		.loc 1 505 9 view .LVU381
 507:./FreeRTOS/timers.c ****         xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 49


 1461              		.loc 1 507 31 view .LVU382
 508:./FreeRTOS/timers.c ****         return xReturn;
 1462              		.loc 1 508 9 view .LVU383
 509:./FreeRTOS/timers.c ****     }
 1463              		.loc 1 509 9 view .LVU384
 510:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 1464              		.loc 1 510 5 is_stmt 0 view .LVU385
 1465 0000 4068     		ldr	r0, [r0, #4]
 1466              	.LVL128:
 510:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 1467              		.loc 1 510 5 view .LVU386
 1468 0002 7047     		bx	lr
 1469              		.cfi_endproc
 1470              	.LFE43:
 1472              		.section	.text.pcTimerGetName,"ax",%progbits
 1473              		.align	1
 1474              		.global	pcTimerGetName
 1475              		.syntax unified
 1476              		.thumb
 1477              		.thumb_func
 1479              	pcTimerGetName:
 1480              	.LVL129:
 1481              	.LFB44:
 514:./FreeRTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 1482              		.loc 1 514 5 is_stmt 1 view -0
 1483              		.cfi_startproc
 1484              		@ args = 0, pretend = 0, frame = 0
 1485              		@ frame_needed = 0, uses_anonymous_args = 0
 1486              		@ link register save eliminated.
 515:./FreeRTOS/timers.c **** 
 1487              		.loc 1 515 9 view .LVU388
 517:./FreeRTOS/timers.c ****         return pxTimer->pcTimerName;
 1488              		.loc 1 517 31 view .LVU389
 518:./FreeRTOS/timers.c ****     }
 1489              		.loc 1 518 9 view .LVU390
 519:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 1490              		.loc 1 519 5 is_stmt 0 view .LVU391
 1491 0000 0068     		ldr	r0, [r0]
 1492              	.LVL130:
 519:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 1493              		.loc 1 519 5 view .LVU392
 1494 0002 7047     		bx	lr
 1495              		.cfi_endproc
 1496              	.LFE44:
 1498              		.section	.text.xTimerIsTimerActive,"ax",%progbits
 1499              		.align	1
 1500              		.global	xTimerIsTimerActive
 1501              		.syntax unified
 1502              		.thumb
 1503              		.thumb_func
 1505              	xTimerIsTimerActive:
 1506              	.LVL131:
 1507              	.LFB55:
 982:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 983:./FreeRTOS/timers.c **** 
 984:./FreeRTOS/timers.c ****     BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
 985:./FreeRTOS/timers.c ****     {
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 50


 1508              		.loc 1 985 5 is_stmt 1 view -0
 1509              		.cfi_startproc
 1510              		@ args = 0, pretend = 0, frame = 0
 1511              		@ frame_needed = 0, uses_anonymous_args = 0
 1512              		.loc 1 985 5 is_stmt 0 view .LVU394
 1513 0000 10B5     		push	{r4, lr}
 1514              	.LCFI29:
 1515              		.cfi_def_cfa_offset 8
 1516              		.cfi_offset 4, -8
 1517              		.cfi_offset 14, -4
 1518 0002 0446     		mov	r4, r0
 986:./FreeRTOS/timers.c ****         BaseType_t xReturn;
 1519              		.loc 1 986 9 is_stmt 1 view .LVU395
 987:./FreeRTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 1520              		.loc 1 987 9 view .LVU396
 1521              	.LVL132:
 988:./FreeRTOS/timers.c **** 
 989:./FreeRTOS/timers.c ****         configASSERT( xTimer );
 1522              		.loc 1 989 31 view .LVU397
 990:./FreeRTOS/timers.c **** 
 991:./FreeRTOS/timers.c ****         /* Is the timer in the list of active timers? */
 992:./FreeRTOS/timers.c ****         taskENTER_CRITICAL();
 1523              		.loc 1 992 9 view .LVU398
 1524 0004 FFF7FEFF 		bl	vPortEnterCritical
 1525              	.LVL133:
 993:./FreeRTOS/timers.c ****         {
 994:./FreeRTOS/timers.c ****             if( ( pxTimer->ucStatus & tmrSTATUS_IS_ACTIVE ) == 0 )
 1526              		.loc 1 994 13 view .LVU399
 1527              		.loc 1 994 26 is_stmt 0 view .LVU400
 1528 0008 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 1529              		.loc 1 994 15 view .LVU401
 1530 000c 13F0010F 		tst	r3, #1
 1531 0010 04D1     		bne	.L122
 995:./FreeRTOS/timers.c ****             {
 996:./FreeRTOS/timers.c ****                 xReturn = pdFALSE;
 1532              		.loc 1 996 25 view .LVU402
 1533 0012 0024     		movs	r4, #0
 1534              	.LVL134:
 1535              	.L121:
 997:./FreeRTOS/timers.c ****             }
 998:./FreeRTOS/timers.c ****             else
 999:./FreeRTOS/timers.c ****             {
1000:./FreeRTOS/timers.c ****                 xReturn = pdTRUE;
1001:./FreeRTOS/timers.c ****             }
1002:./FreeRTOS/timers.c ****         }
1003:./FreeRTOS/timers.c ****         taskEXIT_CRITICAL();
 1536              		.loc 1 1003 9 is_stmt 1 view .LVU403
 1537 0014 FFF7FEFF 		bl	vPortExitCritical
 1538              	.LVL135:
1004:./FreeRTOS/timers.c **** 
1005:./FreeRTOS/timers.c ****         return xReturn;
 1539              		.loc 1 1005 9 view .LVU404
1006:./FreeRTOS/timers.c ****     } /*lint !e818 Can't be pointer to const due to the typedef. */
 1540              		.loc 1 1006 5 is_stmt 0 view .LVU405
 1541 0018 2046     		mov	r0, r4
 1542 001a 10BD     		pop	{r4, pc}
 1543              	.LVL136:
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 51


 1544              	.L122:
1000:./FreeRTOS/timers.c ****             }
 1545              		.loc 1 1000 25 view .LVU406
 1546 001c 0124     		movs	r4, #1
 1547              	.LVL137:
1000:./FreeRTOS/timers.c ****             }
 1548              		.loc 1 1000 25 view .LVU407
 1549 001e F9E7     		b	.L121
 1550              		.cfi_endproc
 1551              	.LFE55:
 1553              		.section	.text.pvTimerGetTimerID,"ax",%progbits
 1554              		.align	1
 1555              		.global	pvTimerGetTimerID
 1556              		.syntax unified
 1557              		.thumb
 1558              		.thumb_func
 1560              	pvTimerGetTimerID:
 1561              	.LVL138:
 1562              	.LFB56:
1007:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
1008:./FreeRTOS/timers.c **** 
1009:./FreeRTOS/timers.c ****     void * pvTimerGetTimerID( const TimerHandle_t xTimer )
1010:./FreeRTOS/timers.c ****     {
 1563              		.loc 1 1010 5 is_stmt 1 view -0
 1564              		.cfi_startproc
 1565              		@ args = 0, pretend = 0, frame = 0
 1566              		@ frame_needed = 0, uses_anonymous_args = 0
 1567              		.loc 1 1010 5 is_stmt 0 view .LVU409
 1568 0000 10B5     		push	{r4, lr}
 1569              	.LCFI30:
 1570              		.cfi_def_cfa_offset 8
 1571              		.cfi_offset 4, -8
 1572              		.cfi_offset 14, -4
 1573 0002 0446     		mov	r4, r0
1011:./FreeRTOS/timers.c ****         Timer_t * const pxTimer = xTimer;
 1574              		.loc 1 1011 9 is_stmt 1 view .LVU410
 1575              	.LVL139:
1012:./FreeRTOS/timers.c ****         void * pvReturn;
 1576              		.loc 1 1012 9 view .LVU411
1013:./FreeRTOS/timers.c **** 
1014:./FreeRTOS/timers.c ****         configASSERT( xTimer );
 1577              		.loc 1 1014 31 view .LVU412
1015:./FreeRTOS/timers.c **** 
1016:./FreeRTOS/timers.c ****         taskENTER_CRITICAL();
 1578              		.loc 1 1016 9 view .LVU413
 1579 0004 FFF7FEFF 		bl	vPortEnterCritical
 1580              	.LVL140:
1017:./FreeRTOS/timers.c ****         {
1018:./FreeRTOS/timers.c ****             pvReturn = pxTimer->pvTimerID;
 1581              		.loc 1 1018 13 view .LVU414
 1582              		.loc 1 1018 22 is_stmt 0 view .LVU415
 1583 0008 E469     		ldr	r4, [r4, #28]
 1584              	.LVL141:
1019:./FreeRTOS/timers.c ****         }
1020:./FreeRTOS/timers.c ****         taskEXIT_CRITICAL();
 1585              		.loc 1 1020 9 is_stmt 1 view .LVU416
 1586 000a FFF7FEFF 		bl	vPortExitCritical
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 52


 1587              	.LVL142:
1021:./FreeRTOS/timers.c **** 
1022:./FreeRTOS/timers.c ****         return pvReturn;
 1588              		.loc 1 1022 9 view .LVU417
1023:./FreeRTOS/timers.c ****     }
 1589              		.loc 1 1023 5 is_stmt 0 view .LVU418
 1590 000e 2046     		mov	r0, r4
 1591 0010 10BD     		pop	{r4, pc}
 1592              		.loc 1 1023 5 view .LVU419
 1593              		.cfi_endproc
 1594              	.LFE56:
 1596              		.section	.text.vTimerSetTimerID,"ax",%progbits
 1597              		.align	1
 1598              		.global	vTimerSetTimerID
 1599              		.syntax unified
 1600              		.thumb
 1601              		.thumb_func
 1603              	vTimerSetTimerID:
 1604              	.LVL143:
 1605              	.LFB57:
1024:./FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
1025:./FreeRTOS/timers.c **** 
1026:./FreeRTOS/timers.c ****     void vTimerSetTimerID( TimerHandle_t xTimer,
1027:./FreeRTOS/timers.c ****                            void * pvNewID )
1028:./FreeRTOS/timers.c ****     {
 1606              		.loc 1 1028 5 is_stmt 1 view -0
 1607              		.cfi_startproc
 1608              		@ args = 0, pretend = 0, frame = 0
 1609              		@ frame_needed = 0, uses_anonymous_args = 0
 1610              		.loc 1 1028 5 is_stmt 0 view .LVU421
 1611 0000 38B5     		push	{r3, r4, r5, lr}
 1612              	.LCFI31:
 1613              		.cfi_def_cfa_offset 16
 1614              		.cfi_offset 3, -16
 1615              		.cfi_offset 4, -12
 1616              		.cfi_offset 5, -8
 1617              		.cfi_offset 14, -4
 1618 0002 0446     		mov	r4, r0
 1619 0004 0D46     		mov	r5, r1
1029:./FreeRTOS/timers.c ****         Timer_t * const pxTimer = xTimer;
 1620              		.loc 1 1029 9 is_stmt 1 view .LVU422
 1621              	.LVL144:
1030:./FreeRTOS/timers.c **** 
1031:./FreeRTOS/timers.c ****         configASSERT( xTimer );
 1622              		.loc 1 1031 31 view .LVU423
1032:./FreeRTOS/timers.c **** 
1033:./FreeRTOS/timers.c ****         taskENTER_CRITICAL();
 1623              		.loc 1 1033 9 view .LVU424
 1624 0006 FFF7FEFF 		bl	vPortEnterCritical
 1625              	.LVL145:
1034:./FreeRTOS/timers.c ****         {
1035:./FreeRTOS/timers.c ****             pxTimer->pvTimerID = pvNewID;
 1626              		.loc 1 1035 13 view .LVU425
 1627              		.loc 1 1035 32 is_stmt 0 view .LVU426
 1628 000a E561     		str	r5, [r4, #28]
1036:./FreeRTOS/timers.c ****         }
1037:./FreeRTOS/timers.c ****         taskEXIT_CRITICAL();
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 53


 1629              		.loc 1 1037 9 is_stmt 1 view .LVU427
 1630 000c FFF7FEFF 		bl	vPortExitCritical
 1631              	.LVL146:
1038:./FreeRTOS/timers.c ****     }
 1632              		.loc 1 1038 5 is_stmt 0 view .LVU428
 1633 0010 38BD     		pop	{r3, r4, r5, pc}
 1634              		.loc 1 1038 5 view .LVU429
 1635              		.cfi_endproc
 1636              	.LFE57:
 1638              		.section	.bss.xLastTime.0,"aw",%nobits
 1639              		.align	2
 1642              	xLastTime.0:
 1643 0000 00000000 		.space	4
 1644              		.section	.bss.xTimerTaskHandle,"aw",%nobits
 1645              		.align	2
 1648              	xTimerTaskHandle:
 1649 0000 00000000 		.space	4
 1650              		.section	.bss.xTimerQueue,"aw",%nobits
 1651              		.align	2
 1654              	xTimerQueue:
 1655 0000 00000000 		.space	4
 1656              		.section	.bss.pxOverflowTimerList,"aw",%nobits
 1657              		.align	2
 1660              	pxOverflowTimerList:
 1661 0000 00000000 		.space	4
 1662              		.section	.bss.pxCurrentTimerList,"aw",%nobits
 1663              		.align	2
 1666              	pxCurrentTimerList:
 1667 0000 00000000 		.space	4
 1668              		.section	.bss.xActiveTimerList2,"aw",%nobits
 1669              		.align	2
 1672              	xActiveTimerList2:
 1673 0000 00000000 		.space	20
 1673      00000000 
 1673      00000000 
 1673      00000000 
 1673      00000000 
 1674              		.section	.bss.xActiveTimerList1,"aw",%nobits
 1675              		.align	2
 1678              	xActiveTimerList1:
 1679 0000 00000000 		.space	20
 1679      00000000 
 1679      00000000 
 1679      00000000 
 1679      00000000 
 1680              		.text
 1681              	.Letext0:
 1682              		.file 2 "c:\\vscode_tool_chain\\gcc\\12.2 mpacbti-rel1\\lib\\gcc\\arm-none-eabi\\12.2.1\\include\\
 1683              		.file 3 "c:\\vscode_tool_chain\\gcc\\12.2 mpacbti-rel1\\arm-none-eabi\\include\\machine\\_default_
 1684              		.file 4 "c:\\vscode_tool_chain\\gcc\\12.2 mpacbti-rel1\\arm-none-eabi\\include\\sys\\_stdint.h"
 1685              		.file 5 "FreeRTOS/include/projdefs.h"
 1686              		.file 6 "FreeRTOS/portable/GCC/ARM_CM3/portmacro.h"
 1687              		.file 7 "FreeRTOS/include/list.h"
 1688              		.file 8 "FreeRTOS/include/task.h"
 1689              		.file 9 "FreeRTOS/include/queue.h"
 1690              		.file 10 "FreeRTOS/include/timers.h"
 1691              		.file 11 "FreeRTOS/include/portable.h"
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 54


ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 55


DEFINED SYMBOLS
                            *ABS*:00000000 timers.c
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:19     .text.prvGetNextExpireTime:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:24     .text.prvGetNextExpireTime:00000000 prvGetNextExpireTime
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:69     .text.prvGetNextExpireTime:0000001c $d
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1666   .bss.pxCurrentTimerList:00000000 pxCurrentTimerList
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:74     .text.prvInsertTimerInActiveList:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:79     .text.prvInsertTimerInActiveList:00000000 prvInsertTimerInActiveList
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:169    .text.prvInsertTimerInActiveList:00000040 $d
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1660   .bss.pxOverflowTimerList:00000000 pxOverflowTimerList
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:175    .text.prvReloadTimer:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:180    .text.prvReloadTimer:00000000 prvReloadTimer
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:238    .text.prvProcessExpiredTimer:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:243    .text.prvProcessExpiredTimer:00000000 prvProcessExpiredTimer
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:308    .text.prvProcessExpiredTimer:0000003c $d
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:313    .text.prvSwitchTimerLists:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:318    .text.prvSwitchTimerLists:00000000 prvSwitchTimerLists
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:371    .text.prvSwitchTimerLists:00000028 $d
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:377    .text.prvSampleTimeNow:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:382    .text.prvSampleTimeNow:00000000 prvSampleTimeNow
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:441    .text.prvSampleTimeNow:00000028 $d
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1642   .bss.xLastTime.0:00000000 xLastTime.0
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:446    .text.prvProcessTimerOrBlockTask:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:451    .text.prvProcessTimerOrBlockTask:00000000 prvProcessTimerOrBlockTask
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:576    .text.prvProcessTimerOrBlockTask:0000006c $d
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1654   .bss.xTimerQueue:00000000 xTimerQueue
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:582    .text.prvProcessReceivedCommands:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:587    .text.prvProcessReceivedCommands:00000000 prvProcessReceivedCommands
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:658    .text.prvProcessReceivedCommands:0000003a $d
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:790    .text.prvProcessReceivedCommands:000000d8 $d
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:795    .text.prvTimerTask:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:800    .text.prvTimerTask:00000000 prvTimerTask
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:839    .text.prvCheckForValidListAndQueue:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:844    .text.prvCheckForValidListAndQueue:00000000 prvCheckForValidListAndQueue
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:906    .text.prvCheckForValidListAndQueue:0000003c $d
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1678   .bss.xActiveTimerList1:00000000 xActiveTimerList1
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1672   .bss.xActiveTimerList2:00000000 xActiveTimerList2
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:915    .text.prvInitialiseNewTimer:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:920    .text.prvInitialiseNewTimer:00000000 prvInitialiseNewTimer
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:981    .rodata.xTimerCreateTimerTask.str1.4:00000000 $d
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:985    .text.xTimerCreateTimerTask:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:991    .text.xTimerCreateTimerTask:00000000 xTimerCreateTimerTask
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1049   .text.xTimerCreateTimerTask:00000030 $d
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1648   .bss.xTimerTaskHandle:00000000 xTimerTaskHandle
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1057   .text.xTimerCreate:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1063   .text.xTimerCreate:00000000 xTimerCreate
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1129   .text.xTimerGenericCommand:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1135   .text.xTimerGenericCommand:00000000 xTimerGenericCommand
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1246   .text.xTimerGenericCommand:00000054 $d
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1251   .text.xTimerGetTimerDaemonTaskHandle:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1257   .text.xTimerGetTimerDaemonTaskHandle:00000000 xTimerGetTimerDaemonTaskHandle
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1273   .text.xTimerGetTimerDaemonTaskHandle:00000008 $d
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1278   .text.xTimerGetPeriod:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1284   .text.xTimerGetPeriod:00000000 xTimerGetPeriod
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1304   .text.vTimerSetReloadMode:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1310   .text.vTimerSetReloadMode:00000000 vTimerSetReloadMode
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1361   .text.xTimerGetReloadMode:00000000 $t
ARM GAS  C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s 			page 56


C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1367   .text.xTimerGetReloadMode:00000000 xTimerGetReloadMode
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1416   .text.uxTimerGetReloadMode:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1422   .text.uxTimerGetReloadMode:00000000 uxTimerGetReloadMode
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1445   .text.xTimerGetExpiryTime:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1451   .text.xTimerGetExpiryTime:00000000 xTimerGetExpiryTime
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1473   .text.pcTimerGetName:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1479   .text.pcTimerGetName:00000000 pcTimerGetName
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1499   .text.xTimerIsTimerActive:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1505   .text.xTimerIsTimerActive:00000000 xTimerIsTimerActive
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1554   .text.pvTimerGetTimerID:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1560   .text.pvTimerGetTimerID:00000000 pvTimerGetTimerID
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1597   .text.vTimerSetTimerID:00000000 $t
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1603   .text.vTimerSetTimerID:00000000 vTimerSetTimerID
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1639   .bss.xLastTime.0:00000000 $d
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1645   .bss.xTimerTaskHandle:00000000 $d
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1651   .bss.xTimerQueue:00000000 $d
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1657   .bss.pxOverflowTimerList:00000000 $d
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1663   .bss.pxCurrentTimerList:00000000 $d
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1669   .bss.xActiveTimerList2:00000000 $d
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:1675   .bss.xActiveTimerList1:00000000 $d
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:667    .text.prvProcessReceivedCommands:00000043 $d
C:\Users\24105\AppData\Local\Temp\ccoh62Bm.s:667    .text.prvProcessReceivedCommands:00000044 $t

UNDEFINED SYMBOLS
vListInsert
uxListRemove
xTaskGetTickCount
vTaskSuspendAll
vQueueWaitForMessageRestricted
xTaskResumeAll
xQueueReceive
vPortFree
vPortEnterCritical
vPortExitCritical
vListInitialise
xQueueGenericCreate
vListInitialiseItem
xTaskCreate
pvPortMalloc
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
